{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/sql-formatter/lib/formatter/config.js","../../node_modules/sql-formatter/lib/formatter/Params.js","../../node_modules/nearley/lib/nearley.js","../../node_modules/sql-formatter/lib/lexer/token.js","../../node_modules/sql-formatter/lib/lexer/disambiguateTokens.js","../../node_modules/sql-formatter/lib/lexer/lineColFromIndex.js","../../node_modules/sql-formatter/lib/parser/LexerAdapter.js","../../node_modules/sql-formatter/lib/parser/ast.js","../../node_modules/sql-formatter/lib/parser/grammar.js","../../node_modules/sql-formatter/lib/parser/createParser.js","../../node_modules/sql-formatter/lib/utils.js","../../node_modules/sql-formatter/lib/formatter/formatCommaPositions.js","../../node_modules/sql-formatter/lib/formatter/Layout.js","../../node_modules/sql-formatter/lib/formatter/tabularStyle.js","../../node_modules/sql-formatter/lib/formatter/Indentation.js","../../node_modules/sql-formatter/lib/formatter/InlineLayout.js","../../node_modules/sql-formatter/lib/formatter/ExpressionFormatter.js","../../node_modules/sql-formatter/lib/formatter/Formatter.js","../../node_modules/sql-formatter/lib/formatter/formatAliasPositions.js","../../node_modules/sql-formatter/lib/lexer/regexUtil.js","../../node_modules/sql-formatter/lib/lexer/regexFactory.js","../../node_modules/sql-formatter/lib/lexer/TokenizerEngine.js","../../node_modules/sql-formatter/lib/lexer/NestedComment.js","../../node_modules/sql-formatter/lib/lexer/Tokenizer.js","../../node_modules/sql-formatter/lib/expandPhrases.js","../../node_modules/sql-formatter/lib/languages/bigquery/bigquery.keywords.js","../../node_modules/sql-formatter/lib/languages/bigquery/bigquery.functions.js","../../node_modules/sql-formatter/lib/languages/bigquery/bigquery.formatter.js","../../node_modules/sql-formatter/lib/languages/db2/db2.functions.js","../../node_modules/sql-formatter/lib/languages/db2/db2.keywords.js","../../node_modules/sql-formatter/lib/languages/db2/db2.formatter.js","../../node_modules/sql-formatter/lib/languages/hive/hive.functions.js","../../node_modules/sql-formatter/lib/languages/hive/hive.keywords.js","../../node_modules/sql-formatter/lib/languages/hive/hive.formatter.js","../../node_modules/sql-formatter/lib/languages/mariadb/mariadb.keywords.js","../../node_modules/sql-formatter/lib/languages/mariadb/mariadb.functions.js","../../node_modules/sql-formatter/lib/languages/mariadb/mariadb.formatter.js","../../node_modules/sql-formatter/lib/languages/mysql/mysql.keywords.js","../../node_modules/sql-formatter/lib/languages/mysql/mysql.functions.js","../../node_modules/sql-formatter/lib/languages/mysql/mysql.formatter.js","../../node_modules/sql-formatter/lib/languages/n1ql/n1ql.functions.js","../../node_modules/sql-formatter/lib/languages/n1ql/n1ql.keywords.js","../../node_modules/sql-formatter/lib/languages/n1ql/n1ql.formatter.js","../../node_modules/sql-formatter/lib/languages/plsql/plsql.keywords.js","../../node_modules/sql-formatter/lib/languages/plsql/plsql.functions.js","../../node_modules/sql-formatter/lib/languages/plsql/plsql.formatter.js","../../node_modules/sql-formatter/lib/languages/postgresql/postgresql.functions.js","../../node_modules/sql-formatter/lib/languages/postgresql/postgresql.keywords.js","../../node_modules/sql-formatter/lib/languages/postgresql/postgresql.formatter.js","../../node_modules/sql-formatter/lib/languages/redshift/redshift.functions.js","../../node_modules/sql-formatter/lib/languages/redshift/redshift.keywords.js","../../node_modules/sql-formatter/lib/languages/redshift/redshift.formatter.js","../../node_modules/sql-formatter/lib/languages/spark/spark.keywords.js","../../node_modules/sql-formatter/lib/languages/spark/spark.functions.js","../../node_modules/sql-formatter/lib/languages/spark/spark.formatter.js","../../node_modules/sql-formatter/lib/languages/sqlite/sqlite.functions.js","../../node_modules/sql-formatter/lib/languages/sqlite/sqlite.keywords.js","../../node_modules/sql-formatter/lib/languages/sqlite/sqlite.formatter.js","../../node_modules/sql-formatter/lib/languages/sql/sql.functions.js","../../node_modules/sql-formatter/lib/languages/sql/sql.keywords.js","../../node_modules/sql-formatter/lib/languages/sql/sql.formatter.js","../../node_modules/sql-formatter/lib/languages/trino/trino.functions.js","../../node_modules/sql-formatter/lib/languages/trino/trino.keywords.js","../../node_modules/sql-formatter/lib/languages/trino/trino.formatter.js","../../node_modules/sql-formatter/lib/languages/transactsql/transactsql.functions.js","../../node_modules/sql-formatter/lib/languages/transactsql/transactsql.keywords.js","../../node_modules/sql-formatter/lib/languages/transactsql/transactsql.formatter.js","../../node_modules/sql-formatter/lib/languages/singlestoredb/singlestoredb.keywords.js","../../node_modules/sql-formatter/lib/languages/singlestoredb/singlestoredb.functions.js","../../node_modules/sql-formatter/lib/languages/singlestoredb/singlestoredb.formatter.js","../../node_modules/sql-formatter/lib/languages/snowflake/snowflake.functions.js","../../node_modules/sql-formatter/lib/languages/snowflake/snowflake.keywords.js","../../node_modules/sql-formatter/lib/languages/snowflake/snowflake.formatter.js","../../node_modules/sql-formatter/lib/sqlFormatter.js","../../src/ResultTable.svelte","../../node_modules/@monaco-editor/loader/lib/es/_virtual/_rollupPluginBabelHelpers.js","../../node_modules/state-local/lib/es/state-local.js","../../node_modules/@monaco-editor/loader/lib/es/validators/index.js","../../node_modules/@monaco-editor/loader/lib/es/utils/curry.js","../../node_modules/@monaco-editor/loader/lib/es/utils/isObject.js","../../node_modules/@monaco-editor/loader/lib/es/utils/deepMerge.js","../../node_modules/@monaco-editor/loader/lib/es/utils/makeCancelable.js","../../node_modules/@monaco-editor/loader/lib/es/loader/index.js","../../node_modules/@monaco-editor/loader/lib/es/config/index.js","../../node_modules/zod/lib/index.mjs","../../node_modules/@monaco-editor/loader/lib/es/utils/compose.js","../../src/SqlEditor.svelte","../../src/LogEntry.svelte","../../src/Logger.svelte","../../src/Editor.svelte","../../src/utils.ts","../../src/theme.ts","../../src/ThemeToggle.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","// Utility functions for config options\n\n/**\n * Creates a string to use for one step of indentation.\n */\nexport function indentString(cfg) {\n  if (cfg.indentStyle === 'tabularLeft' || cfg.indentStyle === 'tabularRight') {\n    return ' '.repeat(10);\n  }\n\n  if (cfg.useTabs) {\n    return '\\t';\n  }\n\n  return ' '.repeat(cfg.tabWidth);\n}\n/**\n * True when indentStyle is one of the tabular ones.\n */\n\nexport function isTabularStyle(cfg) {\n  return cfg.indentStyle === 'tabularLeft' || cfg.indentStyle === 'tabularRight';\n}\n//# sourceMappingURL=config.js.map","/**\n * Handles placeholder replacement with given params.\n */\nexport default class Params {\n  constructor(params) {\n    this.params = params;\n    this.index = 0;\n  }\n  /**\n   * Returns param value that matches given placeholder with param key.\n   */\n\n\n  get({\n    key,\n    text\n  }) {\n    if (!this.params) {\n      return text;\n    }\n\n    if (key) {\n      return this.params[key];\n    }\n\n    return this.params[this.index++];\n  }\n  /**\n   * Returns index of current positional parameter.\n   */\n\n\n  getPositionalParameterIndex() {\n    return this.index;\n  }\n  /**\n   * Sets index of current positional parameter.\n   */\n\n\n  setPositionalParameterIndex(i) {\n    this.index = i;\n  }\n\n}\n//# sourceMappingURL=Params.js.map","(function(root, factory) {\n    if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        root.nearley = factory();\n    }\n}(this, function() {\n\n    function Rule(name, symbols, postprocess) {\n        this.id = ++Rule.highestId;\n        this.name = name;\n        this.symbols = symbols;        // a list of literal | regex class | nonterminal\n        this.postprocess = postprocess;\n        return this;\n    }\n    Rule.highestId = 0;\n\n    Rule.prototype.toString = function(withCursorAt) {\n        var symbolSequence = (typeof withCursorAt === \"undefined\")\n                             ? this.symbols.map(getSymbolShortDisplay).join(' ')\n                             : (   this.symbols.slice(0, withCursorAt).map(getSymbolShortDisplay).join(' ')\n                                 + \" ● \"\n                                 + this.symbols.slice(withCursorAt).map(getSymbolShortDisplay).join(' ')     );\n        return this.name + \" → \" + symbolSequence;\n    }\n\n\n    // a State is a rule at a position from a given starting point in the input stream (reference)\n    function State(rule, dot, reference, wantedBy) {\n        this.rule = rule;\n        this.dot = dot;\n        this.reference = reference;\n        this.data = [];\n        this.wantedBy = wantedBy;\n        this.isComplete = this.dot === rule.symbols.length;\n    }\n\n    State.prototype.toString = function() {\n        return \"{\" + this.rule.toString(this.dot) + \"}, from: \" + (this.reference || 0);\n    };\n\n    State.prototype.nextState = function(child) {\n        var state = new State(this.rule, this.dot + 1, this.reference, this.wantedBy);\n        state.left = this;\n        state.right = child;\n        if (state.isComplete) {\n            state.data = state.build();\n            // Having right set here will prevent the right state and its children\n            // form being garbage collected\n            state.right = undefined;\n        }\n        return state;\n    };\n\n    State.prototype.build = function() {\n        var children = [];\n        var node = this;\n        do {\n            children.push(node.right.data);\n            node = node.left;\n        } while (node.left);\n        children.reverse();\n        return children;\n    };\n\n    State.prototype.finish = function() {\n        if (this.rule.postprocess) {\n            this.data = this.rule.postprocess(this.data, this.reference, Parser.fail);\n        }\n    };\n\n\n    function Column(grammar, index) {\n        this.grammar = grammar;\n        this.index = index;\n        this.states = [];\n        this.wants = {}; // states indexed by the non-terminal they expect\n        this.scannable = []; // list of states that expect a token\n        this.completed = {}; // states that are nullable\n    }\n\n\n    Column.prototype.process = function(nextColumn) {\n        var states = this.states;\n        var wants = this.wants;\n        var completed = this.completed;\n\n        for (var w = 0; w < states.length; w++) { // nb. we push() during iteration\n            var state = states[w];\n\n            if (state.isComplete) {\n                state.finish();\n                if (state.data !== Parser.fail) {\n                    // complete\n                    var wantedBy = state.wantedBy;\n                    for (var i = wantedBy.length; i--; ) { // this line is hot\n                        var left = wantedBy[i];\n                        this.complete(left, state);\n                    }\n\n                    // special-case nullables\n                    if (state.reference === this.index) {\n                        // make sure future predictors of this rule get completed.\n                        var exp = state.rule.name;\n                        (this.completed[exp] = this.completed[exp] || []).push(state);\n                    }\n                }\n\n            } else {\n                // queue scannable states\n                var exp = state.rule.symbols[state.dot];\n                if (typeof exp !== 'string') {\n                    this.scannable.push(state);\n                    continue;\n                }\n\n                // predict\n                if (wants[exp]) {\n                    wants[exp].push(state);\n\n                    if (completed.hasOwnProperty(exp)) {\n                        var nulls = completed[exp];\n                        for (var i = 0; i < nulls.length; i++) {\n                            var right = nulls[i];\n                            this.complete(state, right);\n                        }\n                    }\n                } else {\n                    wants[exp] = [state];\n                    this.predict(exp);\n                }\n            }\n        }\n    }\n\n    Column.prototype.predict = function(exp) {\n        var rules = this.grammar.byName[exp] || [];\n\n        for (var i = 0; i < rules.length; i++) {\n            var r = rules[i];\n            var wantedBy = this.wants[exp];\n            var s = new State(r, 0, this.index, wantedBy);\n            this.states.push(s);\n        }\n    }\n\n    Column.prototype.complete = function(left, right) {\n        var copy = left.nextState(right);\n        this.states.push(copy);\n    }\n\n\n    function Grammar(rules, start) {\n        this.rules = rules;\n        this.start = start || this.rules[0].name;\n        var byName = this.byName = {};\n        this.rules.forEach(function(rule) {\n            if (!byName.hasOwnProperty(rule.name)) {\n                byName[rule.name] = [];\n            }\n            byName[rule.name].push(rule);\n        });\n    }\n\n    // So we can allow passing (rules, start) directly to Parser for backwards compatibility\n    Grammar.fromCompiled = function(rules, start) {\n        var lexer = rules.Lexer;\n        if (rules.ParserStart) {\n          start = rules.ParserStart;\n          rules = rules.ParserRules;\n        }\n        var rules = rules.map(function (r) { return (new Rule(r.name, r.symbols, r.postprocess)); });\n        var g = new Grammar(rules, start);\n        g.lexer = lexer; // nb. storing lexer on Grammar is iffy, but unavoidable\n        return g;\n    }\n\n\n    function StreamLexer() {\n      this.reset(\"\");\n    }\n\n    StreamLexer.prototype.reset = function(data, state) {\n        this.buffer = data;\n        this.index = 0;\n        this.line = state ? state.line : 1;\n        this.lastLineBreak = state ? -state.col : 0;\n    }\n\n    StreamLexer.prototype.next = function() {\n        if (this.index < this.buffer.length) {\n            var ch = this.buffer[this.index++];\n            if (ch === '\\n') {\n              this.line += 1;\n              this.lastLineBreak = this.index;\n            }\n            return {value: ch};\n        }\n    }\n\n    StreamLexer.prototype.save = function() {\n      return {\n        line: this.line,\n        col: this.index - this.lastLineBreak,\n      }\n    }\n\n    StreamLexer.prototype.formatError = function(token, message) {\n        // nb. this gets called after consuming the offending token,\n        // so the culprit is index-1\n        var buffer = this.buffer;\n        if (typeof buffer === 'string') {\n            var lines = buffer\n                .split(\"\\n\")\n                .slice(\n                    Math.max(0, this.line - 5), \n                    this.line\n                );\n\n            var nextLineBreak = buffer.indexOf('\\n', this.index);\n            if (nextLineBreak === -1) nextLineBreak = buffer.length;\n            var col = this.index - this.lastLineBreak;\n            var lastLineDigits = String(this.line).length;\n            message += \" at line \" + this.line + \" col \" + col + \":\\n\\n\";\n            message += lines\n                .map(function(line, i) {\n                    return pad(this.line - lines.length + i + 1, lastLineDigits) + \" \" + line;\n                }, this)\n                .join(\"\\n\");\n            message += \"\\n\" + pad(\"\", lastLineDigits + col) + \"^\\n\";\n            return message;\n        } else {\n            return message + \" at index \" + (this.index - 1);\n        }\n\n        function pad(n, length) {\n            var s = String(n);\n            return Array(length - s.length + 1).join(\" \") + s;\n        }\n    }\n\n    function Parser(rules, start, options) {\n        if (rules instanceof Grammar) {\n            var grammar = rules;\n            var options = start;\n        } else {\n            var grammar = Grammar.fromCompiled(rules, start);\n        }\n        this.grammar = grammar;\n\n        // Read options\n        this.options = {\n            keepHistory: false,\n            lexer: grammar.lexer || new StreamLexer,\n        };\n        for (var key in (options || {})) {\n            this.options[key] = options[key];\n        }\n\n        // Setup lexer\n        this.lexer = this.options.lexer;\n        this.lexerState = undefined;\n\n        // Setup a table\n        var column = new Column(grammar, 0);\n        var table = this.table = [column];\n\n        // I could be expecting anything.\n        column.wants[grammar.start] = [];\n        column.predict(grammar.start);\n        // TODO what if start rule is nullable?\n        column.process();\n        this.current = 0; // token index\n    }\n\n    // create a reserved token for indicating a parse fail\n    Parser.fail = {};\n\n    Parser.prototype.feed = function(chunk) {\n        var lexer = this.lexer;\n        lexer.reset(chunk, this.lexerState);\n\n        var token;\n        while (true) {\n            try {\n                token = lexer.next();\n                if (!token) {\n                    break;\n                }\n            } catch (e) {\n                // Create the next column so that the error reporter\n                // can display the correctly predicted states.\n                var nextColumn = new Column(this.grammar, this.current + 1);\n                this.table.push(nextColumn);\n                var err = new Error(this.reportLexerError(e));\n                err.offset = this.current;\n                err.token = e.token;\n                throw err;\n            }\n            // We add new states to table[current+1]\n            var column = this.table[this.current];\n\n            // GC unused states\n            if (!this.options.keepHistory) {\n                delete this.table[this.current - 1];\n            }\n\n            var n = this.current + 1;\n            var nextColumn = new Column(this.grammar, n);\n            this.table.push(nextColumn);\n\n            // Advance all tokens that expect the symbol\n            var literal = token.text !== undefined ? token.text : token.value;\n            var value = lexer.constructor === StreamLexer ? token.value : token;\n            var scannable = column.scannable;\n            for (var w = scannable.length; w--; ) {\n                var state = scannable[w];\n                var expect = state.rule.symbols[state.dot];\n                // Try to consume the token\n                // either regex or literal\n                if (expect.test ? expect.test(value) :\n                    expect.type ? expect.type === token.type\n                                : expect.literal === literal) {\n                    // Add it\n                    var next = state.nextState({data: value, token: token, isToken: true, reference: n - 1});\n                    nextColumn.states.push(next);\n                }\n            }\n\n            // Next, for each of the rules, we either\n            // (a) complete it, and try to see if the reference row expected that\n            //     rule\n            // (b) predict the next nonterminal it expects by adding that\n            //     nonterminal's start state\n            // To prevent duplication, we also keep track of rules we have already\n            // added\n\n            nextColumn.process();\n\n            // If needed, throw an error:\n            if (nextColumn.states.length === 0) {\n                // No states at all! This is not good.\n                var err = new Error(this.reportError(token));\n                err.offset = this.current;\n                err.token = token;\n                throw err;\n            }\n\n            // maybe save lexer state\n            if (this.options.keepHistory) {\n              column.lexerState = lexer.save()\n            }\n\n            this.current++;\n        }\n        if (column) {\n          this.lexerState = lexer.save()\n        }\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n\n        // Allow chaining, for whatever it's worth\n        return this;\n    };\n\n    Parser.prototype.reportLexerError = function(lexerError) {\n        var tokenDisplay, lexerMessage;\n        // Planning to add a token property to moo's thrown error\n        // even on erroring tokens to be used in error display below\n        var token = lexerError.token;\n        if (token) {\n            tokenDisplay = \"input \" + JSON.stringify(token.text[0]) + \" (lexer error)\";\n            lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        } else {\n            tokenDisplay = \"input (lexer error)\";\n            lexerMessage = lexerError.message;\n        }\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportError = function(token) {\n        var tokenDisplay = (token.type ? token.type + \" token: \" : \"\") + JSON.stringify(token.value !== undefined ? token.value : token);\n        var lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportErrorCommon = function(lexerMessage, tokenDisplay) {\n        var lines = [];\n        lines.push(lexerMessage);\n        var lastColumnIndex = this.table.length - 2;\n        var lastColumn = this.table[lastColumnIndex];\n        var expectantStates = lastColumn.states\n            .filter(function(state) {\n                var nextSymbol = state.rule.symbols[state.dot];\n                return nextSymbol && typeof nextSymbol !== \"string\";\n            });\n\n        if (expectantStates.length === 0) {\n            lines.push('Unexpected ' + tokenDisplay + '. I did not expect any more input. Here is the state of my parse table:\\n');\n            this.displayStateStack(lastColumn.states, lines);\n        } else {\n            lines.push('Unexpected ' + tokenDisplay + '. Instead, I was expecting to see one of the following:\\n');\n            // Display a \"state stack\" for each expectant state\n            // - which shows you how this state came to be, step by step.\n            // If there is more than one derivation, we only display the first one.\n            var stateStacks = expectantStates\n                .map(function(state) {\n                    return this.buildFirstStateStack(state, []) || [state];\n                }, this);\n            // Display each state that is expecting a terminal symbol next.\n            stateStacks.forEach(function(stateStack) {\n                var state = stateStack[0];\n                var nextSymbol = state.rule.symbols[state.dot];\n                var symbolDisplay = this.getSymbolDisplay(nextSymbol);\n                lines.push('A ' + symbolDisplay + ' based on:');\n                this.displayStateStack(stateStack, lines);\n            }, this);\n        }\n        lines.push(\"\");\n        return lines.join(\"\\n\");\n    }\n    \n    Parser.prototype.displayStateStack = function(stateStack, lines) {\n        var lastDisplay;\n        var sameDisplayCount = 0;\n        for (var j = 0; j < stateStack.length; j++) {\n            var state = stateStack[j];\n            var display = state.rule.toString(state.dot);\n            if (display === lastDisplay) {\n                sameDisplayCount++;\n            } else {\n                if (sameDisplayCount > 0) {\n                    lines.push('    ^ ' + sameDisplayCount + ' more lines identical to this');\n                }\n                sameDisplayCount = 0;\n                lines.push('    ' + display);\n            }\n            lastDisplay = display;\n        }\n    };\n\n    Parser.prototype.getSymbolDisplay = function(symbol) {\n        return getSymbolLongDisplay(symbol);\n    };\n\n    /*\n    Builds a the first state stack. You can think of a state stack as the call stack\n    of the recursive-descent parser which the Nearley parse algorithm simulates.\n    A state stack is represented as an array of state objects. Within a\n    state stack, the first item of the array will be the starting\n    state, with each successive item in the array going further back into history.\n\n    This function needs to be given a starting state and an empty array representing\n    the visited states, and it returns an single state stack.\n\n    */\n    Parser.prototype.buildFirstStateStack = function(state, visited) {\n        if (visited.indexOf(state) !== -1) {\n            // Found cycle, return null\n            // to eliminate this path from the results, because\n            // we don't know how to display it meaningfully\n            return null;\n        }\n        if (state.wantedBy.length === 0) {\n            return [state];\n        }\n        var prevState = state.wantedBy[0];\n        var childVisited = [state].concat(visited);\n        var childResult = this.buildFirstStateStack(prevState, childVisited);\n        if (childResult === null) {\n            return null;\n        }\n        return [state].concat(childResult);\n    };\n\n    Parser.prototype.save = function() {\n        var column = this.table[this.current];\n        column.lexerState = this.lexerState;\n        return column;\n    };\n\n    Parser.prototype.restore = function(column) {\n        var index = column.index;\n        this.current = index;\n        this.table[index] = column;\n        this.table.splice(index + 1);\n        this.lexerState = column.lexerState;\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n    };\n\n    // nb. deprecated: use save/restore instead!\n    Parser.prototype.rewind = function(index) {\n        if (!this.options.keepHistory) {\n            throw new Error('set option `keepHistory` to enable rewinding')\n        }\n        // nb. recall column (table) indicies fall between token indicies.\n        //        col 0   --   token 0   --   col 1\n        this.restore(this.table[index]);\n    };\n\n    Parser.prototype.finish = function() {\n        // Return the possible parsings\n        var considerations = [];\n        var start = this.grammar.start;\n        var column = this.table[this.table.length - 1]\n        column.states.forEach(function (t) {\n            if (t.rule.name === start\n                    && t.dot === t.rule.symbols.length\n                    && t.reference === 0\n                    && t.data !== Parser.fail) {\n                considerations.push(t);\n            }\n        });\n        return considerations.map(function(c) {return c.data; });\n    };\n\n    function getSymbolLongDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return 'character matching ' + symbol;\n            } else if (symbol.type) {\n                return symbol.type + ' token';\n            } else if (symbol.test) {\n                return 'token matching ' + String(symbol.test);\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    function getSymbolShortDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return symbol.toString();\n            } else if (symbol.type) {\n                return '%' + symbol.type;\n            } else if (symbol.test) {\n                return '<' + String(symbol.test) + '>';\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    return {\n        Parser: Parser,\n        Grammar: Grammar,\n        Rule: Rule,\n    };\n\n}));\n","/** Token type enum for all possible Token categories */\nexport let TokenType;\n/** Struct to store the most basic cohesive unit of language grammar */\n\n(function (TokenType) {\n  TokenType[\"QUOTED_IDENTIFIER\"] = \"QUOTED_IDENTIFIER\";\n  TokenType[\"IDENTIFIER\"] = \"IDENTIFIER\";\n  TokenType[\"STRING\"] = \"STRING\";\n  TokenType[\"VARIABLE\"] = \"VARIABLE\";\n  TokenType[\"RESERVED_KEYWORD\"] = \"RESERVED_KEYWORD\";\n  TokenType[\"RESERVED_FUNCTION_NAME\"] = \"RESERVED_FUNCTION_NAME\";\n  TokenType[\"RESERVED_PHRASE\"] = \"RESERVED_PHRASE\";\n  TokenType[\"RESERVED_SET_OPERATION\"] = \"RESERVED_SET_OPERATION\";\n  TokenType[\"RESERVED_CLAUSE\"] = \"RESERVED_CLAUSE\";\n  TokenType[\"RESERVED_SELECT\"] = \"RESERVED_SELECT\";\n  TokenType[\"RESERVED_JOIN\"] = \"RESERVED_JOIN\";\n  TokenType[\"ARRAY_IDENTIFIER\"] = \"ARRAY_IDENTIFIER\";\n  TokenType[\"ARRAY_KEYWORD\"] = \"ARRAY_KEYWORD\";\n  TokenType[\"CASE\"] = \"CASE\";\n  TokenType[\"END\"] = \"END\";\n  TokenType[\"WHEN\"] = \"WHEN\";\n  TokenType[\"ELSE\"] = \"ELSE\";\n  TokenType[\"THEN\"] = \"THEN\";\n  TokenType[\"LIMIT\"] = \"LIMIT\";\n  TokenType[\"BETWEEN\"] = \"BETWEEN\";\n  TokenType[\"AND\"] = \"AND\";\n  TokenType[\"OR\"] = \"OR\";\n  TokenType[\"XOR\"] = \"XOR\";\n  TokenType[\"OPERATOR\"] = \"OPERATOR\";\n  TokenType[\"COMMA\"] = \"COMMA\";\n  TokenType[\"ASTERISK\"] = \"ASTERISK\";\n  TokenType[\"DOT\"] = \"DOT\";\n  TokenType[\"OPEN_PAREN\"] = \"OPEN_PAREN\";\n  TokenType[\"CLOSE_PAREN\"] = \"CLOSE_PAREN\";\n  TokenType[\"LINE_COMMENT\"] = \"LINE_COMMENT\";\n  TokenType[\"BLOCK_COMMENT\"] = \"BLOCK_COMMENT\";\n  TokenType[\"NUMBER\"] = \"NUMBER\";\n  TokenType[\"NAMED_PARAMETER\"] = \"NAMED_PARAMETER\";\n  TokenType[\"QUOTED_PARAMETER\"] = \"QUOTED_PARAMETER\";\n  TokenType[\"NUMBERED_PARAMETER\"] = \"NUMBERED_PARAMETER\";\n  TokenType[\"POSITIONAL_PARAMETER\"] = \"POSITIONAL_PARAMETER\";\n  TokenType[\"DELIMITER\"] = \"DELIMITER\";\n  TokenType[\"EOF\"] = \"EOF\";\n})(TokenType || (TokenType = {}));\n\n/** Creates EOF token positioned at given location */\nexport const createEofToken = index => ({\n  type: TokenType.EOF,\n  raw: '«EOF»',\n  text: '«EOF»',\n  start: index\n});\n/**\n * For use as a \"missing token\"\n * e.g. in lookAhead and lookBehind to avoid dealing with null values\n */\n\nexport const EOF_TOKEN = createEofToken(Infinity);\n/** Checks if two tokens are equivalent */\n\nexport const testToken = compareToken => token => token.type === compareToken.type && token.text === compareToken.text;\n/** Util object that allows for easy checking of Reserved Keywords */\n\nexport const isToken = {\n  ARRAY: testToken({\n    text: 'ARRAY',\n    type: TokenType.RESERVED_KEYWORD\n  }),\n  BY: testToken({\n    text: 'BY',\n    type: TokenType.RESERVED_KEYWORD\n  }),\n  SET: testToken({\n    text: 'SET',\n    type: TokenType.RESERVED_CLAUSE\n  }),\n  STRUCT: testToken({\n    text: 'STRUCT',\n    type: TokenType.RESERVED_KEYWORD\n  }),\n  WINDOW: testToken({\n    text: 'WINDOW',\n    type: TokenType.RESERVED_CLAUSE\n  })\n};\n/** Checks if token is any Reserved Keyword or Clause */\n\nexport const isReserved = type => type === TokenType.RESERVED_KEYWORD || type === TokenType.RESERVED_FUNCTION_NAME || type === TokenType.RESERVED_PHRASE || type === TokenType.RESERVED_CLAUSE || type === TokenType.RESERVED_SELECT || type === TokenType.RESERVED_SET_OPERATION || type === TokenType.RESERVED_JOIN || type === TokenType.ARRAY_KEYWORD || type === TokenType.CASE || type === TokenType.END || type === TokenType.WHEN || type === TokenType.ELSE || type === TokenType.THEN || type === TokenType.LIMIT || type === TokenType.BETWEEN || type === TokenType.AND || type === TokenType.OR || type === TokenType.XOR;\nexport const isLogicalOperator = type => type === TokenType.AND || type === TokenType.OR || type === TokenType.XOR;\n//# sourceMappingURL=token.js.map","import { isReserved, TokenType } from './token.js';\n/**\n * Ensures that no keyword token (RESERVED_*) is preceded by dot (.).\n *\n * Ensures that all RESERVED_FUNCTION_NAME tokens are followed by \"(\".\n * If they're not, converts the token to RESERVED_KEYWORD.\n *\n * When IDENTIFIER and RESERVED_KEYWORD token is followed by \"[\"\n * converts it to ARRAY_IDENTIFIER or ARRAY_KEYWORD accordingly.\n *\n * This is needed to avoid ambiguity in parser which expects function names\n * to always be followed by open-paren, and to distinguish between\n * array accessor `foo[1]` and array literal `[1, 2, 3]`.\n */\n\nexport function disambiguateTokens(tokens) {\n  return tokens.map(dotKeywordToIdent).map(funcNameToKeyword).map(identToArrayIdent).map(keywordToArrayKeyword);\n}\n\nconst dotKeywordToIdent = (token, i, tokens) => {\n  if (isReserved(token.type)) {\n    const prevToken = prevNonCommentToken(tokens, i);\n\n    if (prevToken && prevToken.text === '.') {\n      return { ...token,\n        type: TokenType.IDENTIFIER,\n        text: token.raw\n      };\n    }\n  }\n\n  return token;\n};\n\nconst funcNameToKeyword = (token, i, tokens) => {\n  if (token.type === TokenType.RESERVED_FUNCTION_NAME) {\n    const nextToken = nextNonCommentToken(tokens, i);\n\n    if (!nextToken || !isOpenParen(nextToken)) {\n      return { ...token,\n        type: TokenType.RESERVED_KEYWORD\n      };\n    }\n  }\n\n  return token;\n};\n\nconst identToArrayIdent = (token, i, tokens) => {\n  if (token.type === TokenType.IDENTIFIER) {\n    const nextToken = nextNonCommentToken(tokens, i);\n\n    if (nextToken && isOpenBracket(nextToken)) {\n      return { ...token,\n        type: TokenType.ARRAY_IDENTIFIER\n      };\n    }\n  }\n\n  return token;\n};\n\nconst keywordToArrayKeyword = (token, i, tokens) => {\n  if (token.type === TokenType.RESERVED_KEYWORD) {\n    const nextToken = nextNonCommentToken(tokens, i);\n\n    if (nextToken && isOpenBracket(nextToken)) {\n      return { ...token,\n        type: TokenType.ARRAY_KEYWORD\n      };\n    }\n  }\n\n  return token;\n};\n\nconst prevNonCommentToken = (tokens, index) => nextNonCommentToken(tokens, index, -1);\n\nconst nextNonCommentToken = (tokens, index, dir = 1) => {\n  let i = 1;\n\n  while (tokens[index + i * dir] && isComment(tokens[index + i * dir])) {\n    i++;\n  }\n\n  return tokens[index + i * dir];\n};\n\nconst isOpenParen = t => t.type === TokenType.OPEN_PAREN && t.text === '(';\n\nconst isOpenBracket = t => t.type === TokenType.OPEN_PAREN && t.text === '[';\n\nconst isComment = t => t.type === TokenType.BLOCK_COMMENT || t.type === TokenType.LINE_COMMENT;\n//# sourceMappingURL=disambiguateTokens.js.map","/**\n * Determines line and column number of character index in source code.\n */\nexport function lineColFromIndex(source, index) {\n  const lines = source.slice(0, index).split(/\\n/);\n  return {\n    line: lines.length,\n    col: lines[lines.length - 1].length + 1\n  };\n}\n//# sourceMappingURL=lineColFromIndex.js.map","import { lineColFromIndex } from '../lexer/lineColFromIndex.js';\nimport { TokenType } from '../lexer/token.js'; // Nearly type definitions say that Token must have a value field,\n// which however is wrong.  Instead Nearley expects a text field.\n\nexport default class LexerAdapter {\n  index = 0;\n  tokens = [];\n  input = '';\n\n  constructor(tokenize) {\n    this.tokenize = tokenize;\n  }\n\n  reset(chunk, _info) {\n    this.input = chunk;\n    this.index = 0;\n    this.tokens = this.tokenize(chunk);\n  }\n\n  next() {\n    return this.tokens[this.index++];\n  }\n\n  save() {}\n\n  formatError(token) {\n    const {\n      line,\n      col\n    } = lineColFromIndex(this.input, token.start);\n    return `Parse error at token: ${token.text} at line ${line} column ${col}`;\n  }\n\n  has(name) {\n    return name in TokenType;\n  }\n\n}\n//# sourceMappingURL=LexerAdapter.js.map","export let NodeType;\n\n(function (NodeType) {\n  NodeType[\"statement\"] = \"statement\";\n  NodeType[\"clause\"] = \"clause\";\n  NodeType[\"set_operation\"] = \"set_operation\";\n  NodeType[\"function_call\"] = \"function_call\";\n  NodeType[\"array_subscript\"] = \"array_subscript\";\n  NodeType[\"property_access\"] = \"property_access\";\n  NodeType[\"parenthesis\"] = \"parenthesis\";\n  NodeType[\"between_predicate\"] = \"between_predicate\";\n  NodeType[\"case_expression\"] = \"case_expression\";\n  NodeType[\"case_when\"] = \"case_when\";\n  NodeType[\"case_else\"] = \"case_else\";\n  NodeType[\"limit_clause\"] = \"limit_clause\";\n  NodeType[\"all_columns_asterisk\"] = \"all_columns_asterisk\";\n  NodeType[\"literal\"] = \"literal\";\n  NodeType[\"identifier\"] = \"identifier\";\n  NodeType[\"keyword\"] = \"keyword\";\n  NodeType[\"parameter\"] = \"parameter\";\n  NodeType[\"operator\"] = \"operator\";\n  NodeType[\"comma\"] = \"comma\";\n  NodeType[\"line_comment\"] = \"line_comment\";\n  NodeType[\"block_comment\"] = \"block_comment\";\n})(NodeType || (NodeType = {}));\n//# sourceMappingURL=ast.js.map","// Generated automatically by nearley, version 2.20.1\n// http://github.com/Hardmath123/nearley\n// Bypasses TS6133. Allow declared but unused functions.\n// @ts-ignore\nfunction id(d) {\n  return d[0];\n}\n\nimport LexerAdapter from './LexerAdapter.js';\nimport { NodeType } from './ast.js';\nimport { TokenType } from '../lexer/token.js'; // The lexer here is only to provide the has() method,\n// that's used inside the generated grammar definition.\n// A proper lexer gets passed to Nearley Parser constructor.\n\nconst lexer = new LexerAdapter(chunk => []); // Used for unwrapping grammar rules like:\n//\n//   rule -> ( foo | bar | baz )\n//\n// which otherwise produce single element nested inside two arrays\n\nconst unwrap = ([[el]]) => el;\n\nconst toKeywordNode = token => ({\n  type: NodeType.keyword,\n  tokenType: token.type,\n  text: token.text,\n  raw: token.raw\n});\n\nconst addComments = (node, {\n  leading,\n  trailing\n}) => {\n  if (leading !== null && leading !== void 0 && leading.length) {\n    node = { ...node,\n      leadingComments: leading\n    };\n  }\n\n  if (trailing !== null && trailing !== void 0 && trailing.length) {\n    node = { ...node,\n      trailingComments: trailing\n    };\n  }\n\n  return node;\n};\n\n;\n;\n;\n;\nconst grammar = {\n  Lexer: lexer,\n  ParserRules: [{\n    \"name\": \"main$ebnf$1\",\n    \"symbols\": []\n  }, {\n    \"name\": \"main$ebnf$1\",\n    \"symbols\": [\"main$ebnf$1\", \"statement\"],\n    \"postprocess\": d => d[0].concat([d[1]])\n  }, {\n    \"name\": \"main\",\n    \"symbols\": [\"main$ebnf$1\"],\n    \"postprocess\": ([statements]) => {\n      const last = statements[statements.length - 1];\n\n      if (last && !last.hasSemicolon) {\n        // we have fully parsed the whole file\n        // discard the last statement when it's empty\n        return last.children.length > 0 ? statements : statements.slice(0, -1);\n      } else {\n        // parsing still in progress, do nothing\n        return statements;\n      }\n    }\n  }, {\n    \"name\": \"statement$subexpression$1\",\n    \"symbols\": [lexer.has(\"DELIMITER\") ? {\n      type: \"DELIMITER\"\n    } : DELIMITER]\n  }, {\n    \"name\": \"statement$subexpression$1\",\n    \"symbols\": [lexer.has(\"EOF\") ? {\n      type: \"EOF\"\n    } : EOF]\n  }, {\n    \"name\": \"statement\",\n    \"symbols\": [\"expressions_or_clauses\", \"statement$subexpression$1\"],\n    \"postprocess\": ([children, [delimiter]]) => ({\n      type: NodeType.statement,\n      children,\n      hasSemicolon: delimiter.type === TokenType.DELIMITER\n    })\n  }, {\n    \"name\": \"expressions_or_clauses$ebnf$1\",\n    \"symbols\": []\n  }, {\n    \"name\": \"expressions_or_clauses$ebnf$1\",\n    \"symbols\": [\"expressions_or_clauses$ebnf$1\", \"free_form_sql\"],\n    \"postprocess\": d => d[0].concat([d[1]])\n  }, {\n    \"name\": \"expressions_or_clauses$ebnf$2\",\n    \"symbols\": []\n  }, {\n    \"name\": \"expressions_or_clauses$ebnf$2\",\n    \"symbols\": [\"expressions_or_clauses$ebnf$2\", \"clause\"],\n    \"postprocess\": d => d[0].concat([d[1]])\n  }, {\n    \"name\": \"expressions_or_clauses\",\n    \"symbols\": [\"expressions_or_clauses$ebnf$1\", \"expressions_or_clauses$ebnf$2\"],\n    \"postprocess\": ([expressions, clauses]) => [...expressions, ...clauses]\n  }, {\n    \"name\": \"clause$subexpression$1\",\n    \"symbols\": [\"limit_clause\"]\n  }, {\n    \"name\": \"clause$subexpression$1\",\n    \"symbols\": [\"select_clause\"]\n  }, {\n    \"name\": \"clause$subexpression$1\",\n    \"symbols\": [\"other_clause\"]\n  }, {\n    \"name\": \"clause$subexpression$1\",\n    \"symbols\": [\"set_operation\"]\n  }, {\n    \"name\": \"clause\",\n    \"symbols\": [\"clause$subexpression$1\"],\n    \"postprocess\": unwrap\n  }, {\n    \"name\": \"limit_clause$ebnf$1$subexpression$1$ebnf$1\",\n    \"symbols\": [\"free_form_sql\"]\n  }, {\n    \"name\": \"limit_clause$ebnf$1$subexpression$1$ebnf$1\",\n    \"symbols\": [\"limit_clause$ebnf$1$subexpression$1$ebnf$1\", \"free_form_sql\"],\n    \"postprocess\": d => d[0].concat([d[1]])\n  }, {\n    \"name\": \"limit_clause$ebnf$1$subexpression$1\",\n    \"symbols\": [lexer.has(\"COMMA\") ? {\n      type: \"COMMA\"\n    } : COMMA, \"limit_clause$ebnf$1$subexpression$1$ebnf$1\"]\n  }, {\n    \"name\": \"limit_clause$ebnf$1\",\n    \"symbols\": [\"limit_clause$ebnf$1$subexpression$1\"],\n    \"postprocess\": id\n  }, {\n    \"name\": \"limit_clause$ebnf$1\",\n    \"symbols\": [],\n    \"postprocess\": () => null\n  }, {\n    \"name\": \"limit_clause\",\n    \"symbols\": [lexer.has(\"LIMIT\") ? {\n      type: \"LIMIT\"\n    } : LIMIT, \"_\", \"expression_chain_\", \"limit_clause$ebnf$1\"],\n    \"postprocess\": ([limitToken, _, exp1, optional]) => {\n      if (optional) {\n        const [comma, exp2] = optional;\n        return {\n          type: NodeType.limit_clause,\n          limitKw: addComments(toKeywordNode(limitToken), {\n            trailing: _\n          }),\n          offset: exp1,\n          count: exp2\n        };\n      } else {\n        return {\n          type: NodeType.limit_clause,\n          limitKw: addComments(toKeywordNode(limitToken), {\n            trailing: _\n          }),\n          count: exp1\n        };\n      }\n    }\n  }, {\n    \"name\": \"select_clause$subexpression$1$ebnf$1\",\n    \"symbols\": []\n  }, {\n    \"name\": \"select_clause$subexpression$1$ebnf$1\",\n    \"symbols\": [\"select_clause$subexpression$1$ebnf$1\", \"free_form_sql\"],\n    \"postprocess\": d => d[0].concat([d[1]])\n  }, {\n    \"name\": \"select_clause$subexpression$1\",\n    \"symbols\": [\"all_columns_asterisk\", \"select_clause$subexpression$1$ebnf$1\"]\n  }, {\n    \"name\": \"select_clause$subexpression$1$ebnf$2\",\n    \"symbols\": []\n  }, {\n    \"name\": \"select_clause$subexpression$1$ebnf$2\",\n    \"symbols\": [\"select_clause$subexpression$1$ebnf$2\", \"free_form_sql\"],\n    \"postprocess\": d => d[0].concat([d[1]])\n  }, {\n    \"name\": \"select_clause$subexpression$1\",\n    \"symbols\": [\"asteriskless_free_form_sql\", \"select_clause$subexpression$1$ebnf$2\"]\n  }, {\n    \"name\": \"select_clause\",\n    \"symbols\": [lexer.has(\"RESERVED_SELECT\") ? {\n      type: \"RESERVED_SELECT\"\n    } : RESERVED_SELECT, \"select_clause$subexpression$1\"],\n    \"postprocess\": ([nameToken, [exp, expressions]]) => ({\n      type: NodeType.clause,\n      nameKw: toKeywordNode(nameToken),\n      children: [exp, ...expressions]\n    })\n  }, {\n    \"name\": \"select_clause\",\n    \"symbols\": [lexer.has(\"RESERVED_SELECT\") ? {\n      type: \"RESERVED_SELECT\"\n    } : RESERVED_SELECT],\n    \"postprocess\": ([nameToken]) => ({\n      type: NodeType.clause,\n      nameKw: toKeywordNode(nameToken),\n      children: []\n    })\n  }, {\n    \"name\": \"all_columns_asterisk\",\n    \"symbols\": [lexer.has(\"ASTERISK\") ? {\n      type: \"ASTERISK\"\n    } : ASTERISK],\n    \"postprocess\": () => ({\n      type: NodeType.all_columns_asterisk\n    })\n  }, {\n    \"name\": \"other_clause$ebnf$1\",\n    \"symbols\": []\n  }, {\n    \"name\": \"other_clause$ebnf$1\",\n    \"symbols\": [\"other_clause$ebnf$1\", \"free_form_sql\"],\n    \"postprocess\": d => d[0].concat([d[1]])\n  }, {\n    \"name\": \"other_clause\",\n    \"symbols\": [lexer.has(\"RESERVED_CLAUSE\") ? {\n      type: \"RESERVED_CLAUSE\"\n    } : RESERVED_CLAUSE, \"other_clause$ebnf$1\"],\n    \"postprocess\": ([nameToken, children]) => ({\n      type: NodeType.clause,\n      nameKw: toKeywordNode(nameToken),\n      children\n    })\n  }, {\n    \"name\": \"set_operation$ebnf$1\",\n    \"symbols\": []\n  }, {\n    \"name\": \"set_operation$ebnf$1\",\n    \"symbols\": [\"set_operation$ebnf$1\", \"free_form_sql\"],\n    \"postprocess\": d => d[0].concat([d[1]])\n  }, {\n    \"name\": \"set_operation\",\n    \"symbols\": [lexer.has(\"RESERVED_SET_OPERATION\") ? {\n      type: \"RESERVED_SET_OPERATION\"\n    } : RESERVED_SET_OPERATION, \"set_operation$ebnf$1\"],\n    \"postprocess\": ([nameToken, children]) => ({\n      type: NodeType.set_operation,\n      nameKw: toKeywordNode(nameToken),\n      children\n    })\n  }, {\n    \"name\": \"expression_chain_$ebnf$1\",\n    \"symbols\": [\"expression_with_comments_\"]\n  }, {\n    \"name\": \"expression_chain_$ebnf$1\",\n    \"symbols\": [\"expression_chain_$ebnf$1\", \"expression_with_comments_\"],\n    \"postprocess\": d => d[0].concat([d[1]])\n  }, {\n    \"name\": \"expression_chain_\",\n    \"symbols\": [\"expression_chain_$ebnf$1\"],\n    \"postprocess\": id\n  }, {\n    \"name\": \"expression_with_comments_\",\n    \"symbols\": [\"expression\", \"_\"],\n    \"postprocess\": ([expr, _]) => addComments(expr, {\n      trailing: _\n    })\n  }, {\n    \"name\": \"free_form_sql$subexpression$1\",\n    \"symbols\": [\"asteriskless_free_form_sql\"]\n  }, {\n    \"name\": \"free_form_sql$subexpression$1\",\n    \"symbols\": [\"asterisk\"]\n  }, {\n    \"name\": \"free_form_sql\",\n    \"symbols\": [\"free_form_sql$subexpression$1\"],\n    \"postprocess\": unwrap\n  }, {\n    \"name\": \"asteriskless_free_form_sql$subexpression$1\",\n    \"symbols\": [\"asteriskless_expression\"]\n  }, {\n    \"name\": \"asteriskless_free_form_sql$subexpression$1\",\n    \"symbols\": [\"between_predicate\"]\n  }, {\n    \"name\": \"asteriskless_free_form_sql$subexpression$1\",\n    \"symbols\": [\"case_expression\"]\n  }, {\n    \"name\": \"asteriskless_free_form_sql$subexpression$1\",\n    \"symbols\": [\"comma\"]\n  }, {\n    \"name\": \"asteriskless_free_form_sql$subexpression$1\",\n    \"symbols\": [\"comment\"]\n  }, {\n    \"name\": \"asteriskless_free_form_sql$subexpression$1\",\n    \"symbols\": [\"other_keyword\"]\n  }, {\n    \"name\": \"asteriskless_free_form_sql\",\n    \"symbols\": [\"asteriskless_free_form_sql$subexpression$1\"],\n    \"postprocess\": unwrap\n  }, {\n    \"name\": \"expression$subexpression$1\",\n    \"symbols\": [\"asteriskless_expression\"]\n  }, {\n    \"name\": \"expression$subexpression$1\",\n    \"symbols\": [\"asterisk\"]\n  }, {\n    \"name\": \"expression\",\n    \"symbols\": [\"expression$subexpression$1\"],\n    \"postprocess\": unwrap\n  }, {\n    \"name\": \"asteriskless_expression$subexpression$1\",\n    \"symbols\": [\"array_subscript\"]\n  }, {\n    \"name\": \"asteriskless_expression$subexpression$1\",\n    \"symbols\": [\"function_call\"]\n  }, {\n    \"name\": \"asteriskless_expression$subexpression$1\",\n    \"symbols\": [\"property_access\"]\n  }, {\n    \"name\": \"asteriskless_expression$subexpression$1\",\n    \"symbols\": [\"parenthesis\"]\n  }, {\n    \"name\": \"asteriskless_expression$subexpression$1\",\n    \"symbols\": [\"curly_braces\"]\n  }, {\n    \"name\": \"asteriskless_expression$subexpression$1\",\n    \"symbols\": [\"square_brackets\"]\n  }, {\n    \"name\": \"asteriskless_expression$subexpression$1\",\n    \"symbols\": [\"operator\"]\n  }, {\n    \"name\": \"asteriskless_expression$subexpression$1\",\n    \"symbols\": [\"identifier\"]\n  }, {\n    \"name\": \"asteriskless_expression$subexpression$1\",\n    \"symbols\": [\"parameter\"]\n  }, {\n    \"name\": \"asteriskless_expression$subexpression$1\",\n    \"symbols\": [\"literal\"]\n  }, {\n    \"name\": \"asteriskless_expression$subexpression$1\",\n    \"symbols\": [\"keyword\"]\n  }, {\n    \"name\": \"asteriskless_expression\",\n    \"symbols\": [\"asteriskless_expression$subexpression$1\"],\n    \"postprocess\": unwrap\n  }, {\n    \"name\": \"array_subscript\",\n    \"symbols\": [lexer.has(\"ARRAY_IDENTIFIER\") ? {\n      type: \"ARRAY_IDENTIFIER\"\n    } : ARRAY_IDENTIFIER, \"_\", \"square_brackets\"],\n    \"postprocess\": ([arrayToken, _, brackets]) => ({\n      type: NodeType.array_subscript,\n      array: addComments({\n        type: NodeType.identifier,\n        text: arrayToken.text\n      }, {\n        trailing: _\n      }),\n      parenthesis: brackets\n    })\n  }, {\n    \"name\": \"array_subscript\",\n    \"symbols\": [lexer.has(\"ARRAY_KEYWORD\") ? {\n      type: \"ARRAY_KEYWORD\"\n    } : ARRAY_KEYWORD, \"_\", \"square_brackets\"],\n    \"postprocess\": ([arrayToken, _, brackets]) => ({\n      type: NodeType.array_subscript,\n      array: addComments(toKeywordNode(arrayToken), {\n        trailing: _\n      }),\n      parenthesis: brackets\n    })\n  }, {\n    \"name\": \"function_call\",\n    \"symbols\": [lexer.has(\"RESERVED_FUNCTION_NAME\") ? {\n      type: \"RESERVED_FUNCTION_NAME\"\n    } : RESERVED_FUNCTION_NAME, \"_\", \"parenthesis\"],\n    \"postprocess\": ([nameToken, _, parens]) => ({\n      type: NodeType.function_call,\n      nameKw: addComments(toKeywordNode(nameToken), {\n        trailing: _\n      }),\n      parenthesis: parens\n    })\n  }, {\n    \"name\": \"parenthesis\",\n    \"symbols\": [{\n      \"literal\": \"(\"\n    }, \"expressions_or_clauses\", {\n      \"literal\": \")\"\n    }],\n    \"postprocess\": ([open, children, close]) => ({\n      type: NodeType.parenthesis,\n      children: children,\n      openParen: \"(\",\n      closeParen: \")\"\n    })\n  }, {\n    \"name\": \"curly_braces$ebnf$1\",\n    \"symbols\": []\n  }, {\n    \"name\": \"curly_braces$ebnf$1\",\n    \"symbols\": [\"curly_braces$ebnf$1\", \"free_form_sql\"],\n    \"postprocess\": d => d[0].concat([d[1]])\n  }, {\n    \"name\": \"curly_braces\",\n    \"symbols\": [{\n      \"literal\": \"{\"\n    }, \"curly_braces$ebnf$1\", {\n      \"literal\": \"}\"\n    }],\n    \"postprocess\": ([open, children, close]) => ({\n      type: NodeType.parenthesis,\n      children: children,\n      openParen: \"{\",\n      closeParen: \"}\"\n    })\n  }, {\n    \"name\": \"square_brackets$ebnf$1\",\n    \"symbols\": []\n  }, {\n    \"name\": \"square_brackets$ebnf$1\",\n    \"symbols\": [\"square_brackets$ebnf$1\", \"free_form_sql\"],\n    \"postprocess\": d => d[0].concat([d[1]])\n  }, {\n    \"name\": \"square_brackets\",\n    \"symbols\": [{\n      \"literal\": \"[\"\n    }, \"square_brackets$ebnf$1\", {\n      \"literal\": \"]\"\n    }],\n    \"postprocess\": ([open, children, close]) => ({\n      type: NodeType.parenthesis,\n      children: children,\n      openParen: \"[\",\n      closeParen: \"]\"\n    })\n  }, {\n    \"name\": \"property_access$subexpression$1\",\n    \"symbols\": [\"identifier\"]\n  }, {\n    \"name\": \"property_access$subexpression$1\",\n    \"symbols\": [\"array_subscript\"]\n  }, {\n    \"name\": \"property_access$subexpression$1\",\n    \"symbols\": [\"all_columns_asterisk\"]\n  }, {\n    \"name\": \"property_access\",\n    \"symbols\": [\"expression\", \"_\", lexer.has(\"DOT\") ? {\n      type: \"DOT\"\n    } : DOT, \"_\", \"property_access$subexpression$1\"],\n    \"postprocess\": // Allowing property to be <array_subscript> is currently a hack.\n    // A better way would be to allow <property_access> on the left side of array_subscript,\n    // but we currently can't do that because of another hack that requires\n    // %ARRAY_IDENTIFIER on the left side of <array_subscript>.\n    ([object, _1, dot, _2, [property]]) => {\n      return {\n        type: NodeType.property_access,\n        object: addComments(object, {\n          trailing: _1\n        }),\n        property: addComments(property, {\n          leading: _2\n        })\n      };\n    }\n  }, {\n    \"name\": \"between_predicate\",\n    \"symbols\": [lexer.has(\"BETWEEN\") ? {\n      type: \"BETWEEN\"\n    } : BETWEEN, \"_\", \"expression\", \"_\", lexer.has(\"AND\") ? {\n      type: \"AND\"\n    } : AND, \"_\", \"expression\"],\n    \"postprocess\": ([betweenToken, _1, expr1, _2, andToken, _3, expr2]) => ({\n      type: NodeType.between_predicate,\n      betweenKw: toKeywordNode(betweenToken),\n      expr1: [addComments(expr1, {\n        leading: _1,\n        trailing: _2\n      })],\n      andKw: toKeywordNode(andToken),\n      expr2: [addComments(expr2, {\n        leading: _3\n      })]\n    })\n  }, {\n    \"name\": \"case_expression$ebnf$1\",\n    \"symbols\": [\"expression_chain_\"],\n    \"postprocess\": id\n  }, {\n    \"name\": \"case_expression$ebnf$1\",\n    \"symbols\": [],\n    \"postprocess\": () => null\n  }, {\n    \"name\": \"case_expression$ebnf$2\",\n    \"symbols\": []\n  }, {\n    \"name\": \"case_expression$ebnf$2\",\n    \"symbols\": [\"case_expression$ebnf$2\", \"case_clause\"],\n    \"postprocess\": d => d[0].concat([d[1]])\n  }, {\n    \"name\": \"case_expression\",\n    \"symbols\": [lexer.has(\"CASE\") ? {\n      type: \"CASE\"\n    } : CASE, \"_\", \"case_expression$ebnf$1\", \"case_expression$ebnf$2\", lexer.has(\"END\") ? {\n      type: \"END\"\n    } : END],\n    \"postprocess\": ([caseToken, _, expr, clauses, endToken]) => ({\n      type: NodeType.case_expression,\n      caseKw: addComments(toKeywordNode(caseToken), {\n        trailing: _\n      }),\n      endKw: toKeywordNode(endToken),\n      expr: expr || [],\n      clauses\n    })\n  }, {\n    \"name\": \"case_clause\",\n    \"symbols\": [lexer.has(\"WHEN\") ? {\n      type: \"WHEN\"\n    } : WHEN, \"_\", \"expression_chain_\", lexer.has(\"THEN\") ? {\n      type: \"THEN\"\n    } : THEN, \"_\", \"expression_chain_\"],\n    \"postprocess\": ([whenToken, _1, cond, thenToken, _2, expr]) => ({\n      type: NodeType.case_when,\n      whenKw: addComments(toKeywordNode(whenToken), {\n        trailing: _1\n      }),\n      thenKw: addComments(toKeywordNode(thenToken), {\n        trailing: _2\n      }),\n      condition: cond,\n      result: expr\n    })\n  }, {\n    \"name\": \"case_clause\",\n    \"symbols\": [lexer.has(\"ELSE\") ? {\n      type: \"ELSE\"\n    } : ELSE, \"_\", \"expression_chain_\"],\n    \"postprocess\": ([elseToken, _, expr]) => ({\n      type: NodeType.case_else,\n      elseKw: addComments(toKeywordNode(elseToken), {\n        trailing: _\n      }),\n      result: expr\n    })\n  }, {\n    \"name\": \"comma$subexpression$1\",\n    \"symbols\": [lexer.has(\"COMMA\") ? {\n      type: \"COMMA\"\n    } : COMMA]\n  }, {\n    \"name\": \"comma\",\n    \"symbols\": [\"comma$subexpression$1\"],\n    \"postprocess\": ([[token]]) => ({\n      type: NodeType.comma\n    })\n  }, {\n    \"name\": \"asterisk$subexpression$1\",\n    \"symbols\": [lexer.has(\"ASTERISK\") ? {\n      type: \"ASTERISK\"\n    } : ASTERISK]\n  }, {\n    \"name\": \"asterisk\",\n    \"symbols\": [\"asterisk$subexpression$1\"],\n    \"postprocess\": ([[token]]) => ({\n      type: NodeType.operator,\n      text: token.text\n    })\n  }, {\n    \"name\": \"operator$subexpression$1\",\n    \"symbols\": [lexer.has(\"OPERATOR\") ? {\n      type: \"OPERATOR\"\n    } : OPERATOR]\n  }, {\n    \"name\": \"operator\",\n    \"symbols\": [\"operator$subexpression$1\"],\n    \"postprocess\": ([[token]]) => ({\n      type: NodeType.operator,\n      text: token.text\n    })\n  }, {\n    \"name\": \"identifier$subexpression$1\",\n    \"symbols\": [lexer.has(\"IDENTIFIER\") ? {\n      type: \"IDENTIFIER\"\n    } : IDENTIFIER]\n  }, {\n    \"name\": \"identifier$subexpression$1\",\n    \"symbols\": [lexer.has(\"QUOTED_IDENTIFIER\") ? {\n      type: \"QUOTED_IDENTIFIER\"\n    } : QUOTED_IDENTIFIER]\n  }, {\n    \"name\": \"identifier$subexpression$1\",\n    \"symbols\": [lexer.has(\"VARIABLE\") ? {\n      type: \"VARIABLE\"\n    } : VARIABLE]\n  }, {\n    \"name\": \"identifier\",\n    \"symbols\": [\"identifier$subexpression$1\"],\n    \"postprocess\": ([[token]]) => ({\n      type: NodeType.identifier,\n      text: token.text\n    })\n  }, {\n    \"name\": \"parameter$subexpression$1\",\n    \"symbols\": [lexer.has(\"NAMED_PARAMETER\") ? {\n      type: \"NAMED_PARAMETER\"\n    } : NAMED_PARAMETER]\n  }, {\n    \"name\": \"parameter$subexpression$1\",\n    \"symbols\": [lexer.has(\"QUOTED_PARAMETER\") ? {\n      type: \"QUOTED_PARAMETER\"\n    } : QUOTED_PARAMETER]\n  }, {\n    \"name\": \"parameter$subexpression$1\",\n    \"symbols\": [lexer.has(\"NUMBERED_PARAMETER\") ? {\n      type: \"NUMBERED_PARAMETER\"\n    } : NUMBERED_PARAMETER]\n  }, {\n    \"name\": \"parameter$subexpression$1\",\n    \"symbols\": [lexer.has(\"POSITIONAL_PARAMETER\") ? {\n      type: \"POSITIONAL_PARAMETER\"\n    } : POSITIONAL_PARAMETER]\n  }, {\n    \"name\": \"parameter\",\n    \"symbols\": [\"parameter$subexpression$1\"],\n    \"postprocess\": ([[token]]) => ({\n      type: NodeType.parameter,\n      key: token.key,\n      text: token.text\n    })\n  }, {\n    \"name\": \"literal$subexpression$1\",\n    \"symbols\": [lexer.has(\"NUMBER\") ? {\n      type: \"NUMBER\"\n    } : NUMBER]\n  }, {\n    \"name\": \"literal$subexpression$1\",\n    \"symbols\": [lexer.has(\"STRING\") ? {\n      type: \"STRING\"\n    } : STRING]\n  }, {\n    \"name\": \"literal\",\n    \"symbols\": [\"literal$subexpression$1\"],\n    \"postprocess\": ([[token]]) => ({\n      type: NodeType.literal,\n      text: token.text\n    })\n  }, {\n    \"name\": \"keyword$subexpression$1\",\n    \"symbols\": [lexer.has(\"RESERVED_KEYWORD\") ? {\n      type: \"RESERVED_KEYWORD\"\n    } : RESERVED_KEYWORD]\n  }, {\n    \"name\": \"keyword$subexpression$1\",\n    \"symbols\": [lexer.has(\"RESERVED_PHRASE\") ? {\n      type: \"RESERVED_PHRASE\"\n    } : RESERVED_PHRASE]\n  }, {\n    \"name\": \"keyword$subexpression$1\",\n    \"symbols\": [lexer.has(\"RESERVED_JOIN\") ? {\n      type: \"RESERVED_JOIN\"\n    } : RESERVED_JOIN]\n  }, {\n    \"name\": \"keyword$subexpression$1\",\n    \"symbols\": [lexer.has(\"AND\") ? {\n      type: \"AND\"\n    } : AND]\n  }, {\n    \"name\": \"keyword$subexpression$1\",\n    \"symbols\": [lexer.has(\"OR\") ? {\n      type: \"OR\"\n    } : OR]\n  }, {\n    \"name\": \"keyword$subexpression$1\",\n    \"symbols\": [lexer.has(\"XOR\") ? {\n      type: \"XOR\"\n    } : XOR]\n  }, {\n    \"name\": \"keyword\",\n    \"symbols\": [\"keyword$subexpression$1\"],\n    \"postprocess\": ([[token]]) => toKeywordNode(token)\n  }, {\n    \"name\": \"other_keyword$subexpression$1\",\n    \"symbols\": [lexer.has(\"WHEN\") ? {\n      type: \"WHEN\"\n    } : WHEN]\n  }, {\n    \"name\": \"other_keyword$subexpression$1\",\n    \"symbols\": [lexer.has(\"THEN\") ? {\n      type: \"THEN\"\n    } : THEN]\n  }, {\n    \"name\": \"other_keyword$subexpression$1\",\n    \"symbols\": [lexer.has(\"ELSE\") ? {\n      type: \"ELSE\"\n    } : ELSE]\n  }, {\n    \"name\": \"other_keyword$subexpression$1\",\n    \"symbols\": [lexer.has(\"END\") ? {\n      type: \"END\"\n    } : END]\n  }, {\n    \"name\": \"other_keyword\",\n    \"symbols\": [\"other_keyword$subexpression$1\"],\n    \"postprocess\": ([[token]]) => toKeywordNode(token)\n  }, {\n    \"name\": \"_$ebnf$1\",\n    \"symbols\": []\n  }, {\n    \"name\": \"_$ebnf$1\",\n    \"symbols\": [\"_$ebnf$1\", \"comment\"],\n    \"postprocess\": d => d[0].concat([d[1]])\n  }, {\n    \"name\": \"_\",\n    \"symbols\": [\"_$ebnf$1\"],\n    \"postprocess\": ([comments]) => comments\n  }, {\n    \"name\": \"comment\",\n    \"symbols\": [lexer.has(\"LINE_COMMENT\") ? {\n      type: \"LINE_COMMENT\"\n    } : LINE_COMMENT],\n    \"postprocess\": ([token]) => ({\n      type: NodeType.line_comment,\n      text: token.text,\n      precedingWhitespace: token.precedingWhitespace\n    })\n  }, {\n    \"name\": \"comment\",\n    \"symbols\": [lexer.has(\"BLOCK_COMMENT\") ? {\n      type: \"BLOCK_COMMENT\"\n    } : BLOCK_COMMENT],\n    \"postprocess\": ([token]) => ({\n      type: NodeType.block_comment,\n      text: token.text,\n      precedingWhitespace: token.precedingWhitespace\n    })\n  }],\n  ParserStart: \"main\"\n};\nexport default grammar;\n//# sourceMappingURL=grammar.js.map","import nearley from 'nearley';\nimport { disambiguateTokens } from '../lexer/disambiguateTokens.js';\nimport grammar from './grammar.js';\nimport LexerAdapter from './LexerAdapter.js';\nimport { createEofToken } from '../lexer/token.js';\nconst {\n  Parser: NearleyParser,\n  Grammar\n} = nearley;\n\n/**\n * Creates a parser object which wraps the setup of Nearley parser\n */\nexport function createParser(tokenizer) {\n  let paramTypesOverrides = {};\n  const lexer = new LexerAdapter(chunk => [...disambiguateTokens(tokenizer.tokenize(chunk, paramTypesOverrides)), createEofToken(chunk.length)]);\n  const parser = new NearleyParser(Grammar.fromCompiled(grammar), {\n    lexer\n  });\n  return {\n    parse: (sql, paramTypes) => {\n      // share paramTypesOverrides with Tokenizer\n      paramTypesOverrides = paramTypes;\n      const {\n        results\n      } = parser.feed(sql);\n\n      if (results.length === 1) {\n        return results[0];\n      } else if (results.length === 0) {\n        // Ideally we would report a line number where the parser failed,\n        // but I haven't found a way to get this info from Nearley :(\n        throw new Error('Parse error: Invalid SQL');\n      } else {\n        throw new Error('Parse error: Ambiguous grammar');\n      }\n    }\n  };\n}\n//# sourceMappingURL=createParser.js.map","export const dedupe = arr => [...new Set(arr)]; // Last element from array\n\nexport const last = arr => arr[arr.length - 1]; // Sorts strings by length, so that longer ones are first\n// Also sorts alphabetically after sorting by length.\n\nexport const sortByLengthDesc = strings => strings.sort((a, b) => b.length - a.length || a.localeCompare(b));\n/** Get length of longest string in list of strings */\n\nexport const maxLength = strings => strings.reduce((max, cur) => Math.max(max, cur.length), 0); // replaces long whitespace sequences with just one space\n\nexport const equalizeWhitespace = s => s.replace(/\\s+/gu, ' '); // Used for flattening keyword lists\n\nexport const flatKeywordList = obj => dedupe(Object.values(obj).flat()); // True when string contains multiple lines\n\nexport const isMultiline = text => /\\n/.test(text); // Given a type and a field name, returns a type where this field is optional\n//\n// For example, these two type definitions are equivalent:\n//\n//   type Foo = Optional<{ foo: string, bar: number }, 'foo'>;\n//   type Foo = { foo?: string, bar: number };\n//\n//# sourceMappingURL=utils.js.map","import { maxLength } from '../utils.js';\nconst PRECEDING_WHITESPACE_REGEX = /^\\s+/u;\n/**\n * Handles comma placement - either before, after or tabulated\n */\n\nexport default function formatCommaPositions(query, commaPosition, indent) {\n  return groupCommaDelimitedLines(query.split('\\n')).flatMap(commaLines => {\n    if (commaLines.length === 1) {\n      return commaLines;\n    } else if (commaPosition === 'tabular') {\n      return formatTabular(commaLines);\n    } else if (commaPosition === 'before') {\n      return formatBefore(commaLines, indent);\n    } else {\n      throw new Error(`Unexpected commaPosition: ${commaPosition}`);\n    }\n  }).join('\\n');\n}\n/**\n * Given lines like this:\n *\n *     [\n *       'SELECT',\n *       '  foo,',\n *       '  bar,',\n *       '  baz',\n *       'FROM'\n *     ]\n *\n * Returns groups like this:\n *\n *     [\n *       ['SELECT'],\n *       ['  foo,', '  bar,', '  baz'],\n *       ['FROM']\n *     ]\n */\n\nfunction groupCommaDelimitedLines(lines) {\n  const groups = [];\n\n  for (let i = 0; i < lines.length; i++) {\n    const group = [lines[i]]; // when line ends with comma,\n    // gather together all following lines that also end with comma,\n    // plus one (which doesn't end with comma)\n\n    while (lines[i].match(/.*,$/)) {\n      i++;\n      group.push(lines[i]);\n    }\n\n    groups.push(group);\n  }\n\n  return groups;\n} // makes all lines the same length by appending spaces before comma\n\n\nfunction formatTabular(commaLines) {\n  const maxLineLength = maxLength(commaLines);\n  return trimTrailingCommas(commaLines).map((line, i) => {\n    if (i === commaLines.length - 1) {\n      return line; // do not add comma for last item\n    }\n\n    return line + ' '.repeat(maxLineLength - line.length - 1) + ',';\n  });\n}\n\nfunction formatBefore(commaLines, indent) {\n  return trimTrailingCommas(commaLines).map((line, i) => {\n    if (i === 0) {\n      return line; // do not add comma for first item\n    }\n\n    const [whitespace] = line.match(PRECEDING_WHITESPACE_REGEX) || [''];\n    return removeLastIndent(whitespace, indent) + indent.replace(/ {2}$/, ', ') + // add comma to the end of last indent\n    line.trimStart();\n  });\n}\n\nfunction removeLastIndent(whitespace, indent) {\n  return whitespace.replace(new RegExp(indent + '$'), '');\n}\n\nfunction trimTrailingCommas(lines) {\n  return lines.map(line => line.replace(/,$/, ''));\n}\n//# sourceMappingURL=formatCommaPositions.js.map","import { last } from '../utils.js';\n\n/** Whitespace modifiers to be used with add() method */\nexport let WS;\n\n(function (WS) {\n  WS[WS[\"SPACE\"] = 0] = \"SPACE\";\n  WS[WS[\"NO_SPACE\"] = 1] = \"NO_SPACE\";\n  WS[WS[\"NO_NEWLINE\"] = 2] = \"NO_NEWLINE\";\n  WS[WS[\"NEWLINE\"] = 3] = \"NEWLINE\";\n  WS[WS[\"MANDATORY_NEWLINE\"] = 4] = \"MANDATORY_NEWLINE\";\n  WS[WS[\"INDENT\"] = 5] = \"INDENT\";\n  WS[WS[\"SINGLE_INDENT\"] = 6] = \"SINGLE_INDENT\";\n})(WS || (WS = {}));\n\n/**\n * API for constructing SQL string (especially the whitespace part).\n *\n * It hides the internal implementation.\n * Originally it used plain string concatenation, which was expensive.\n * Now it's storing items to array and builds the string only in the end.\n */\nexport default class Layout {\n  items = [];\n\n  constructor(indentation) {\n    this.indentation = indentation;\n  }\n  /**\n   * Appends token strings and whitespace modifications to SQL string.\n   */\n\n\n  add(...items) {\n    for (const item of items) {\n      switch (item) {\n        case WS.SPACE:\n          this.items.push(WS.SPACE);\n          break;\n\n        case WS.NO_SPACE:\n          this.trimHorizontalWhitespace();\n          break;\n\n        case WS.NO_NEWLINE:\n          this.trimWhitespace();\n          break;\n\n        case WS.NEWLINE:\n          this.trimHorizontalWhitespace();\n          this.addNewline(WS.NEWLINE);\n          break;\n\n        case WS.MANDATORY_NEWLINE:\n          this.trimHorizontalWhitespace();\n          this.addNewline(WS.MANDATORY_NEWLINE);\n          break;\n\n        case WS.INDENT:\n          this.addIndentation();\n          break;\n\n        case WS.SINGLE_INDENT:\n          this.items.push(WS.SINGLE_INDENT);\n          break;\n\n        default:\n          this.items.push(item);\n      }\n    }\n  }\n\n  trimHorizontalWhitespace() {\n    while (isHorizontalWhitespace(last(this.items))) {\n      this.items.pop();\n    }\n  }\n\n  trimWhitespace() {\n    while (isRemovableWhitespace(last(this.items))) {\n      this.items.pop();\n    }\n  }\n\n  addNewline(newline) {\n    if (this.items.length > 0) {\n      switch (last(this.items)) {\n        case WS.NEWLINE:\n          this.items.pop();\n          this.items.push(newline);\n          break;\n\n        case WS.MANDATORY_NEWLINE:\n          // keep as is\n          break;\n\n        default:\n          this.items.push(newline);\n          break;\n      }\n    }\n  }\n\n  addIndentation() {\n    for (let i = 0; i < this.indentation.getLevel(); i++) {\n      this.items.push(WS.SINGLE_INDENT);\n    }\n  }\n  /**\n   * Returns the final SQL string.\n   */\n\n\n  toString() {\n    return this.items.map(item => this.itemToString(item)).join('');\n  }\n  /**\n   * Returns the internal layout data\n   */\n\n\n  getLayoutItems() {\n    return this.items;\n  }\n\n  itemToString(item) {\n    switch (item) {\n      case WS.SPACE:\n        return ' ';\n\n      case WS.NEWLINE:\n      case WS.MANDATORY_NEWLINE:\n        return '\\n';\n\n      case WS.SINGLE_INDENT:\n        return this.indentation.getSingleIndent();\n\n      default:\n        return item;\n    }\n  }\n\n}\n\nconst isHorizontalWhitespace = item => item === WS.SPACE || item === WS.SINGLE_INDENT;\n\nconst isRemovableWhitespace = item => item === WS.SPACE || item === WS.SINGLE_INDENT || item === WS.NEWLINE;\n//# sourceMappingURL=Layout.js.map","import { isLogicalOperator, TokenType } from '../lexer/token.js';\n/**\n * When tabular style enabled,\n * produces a 10-char wide version of token text.\n */\n\nexport default function toTabularFormat(tokenText, indentStyle) {\n  if (indentStyle === 'standard') {\n    return tokenText;\n  }\n\n  let tail = []; // rest of keyword\n\n  if (tokenText.length >= 10 && tokenText.includes(' ')) {\n    // split for long keywords like INNER JOIN or UNION DISTINCT\n    [tokenText, ...tail] = tokenText.split(' ');\n  }\n\n  if (indentStyle === 'tabularLeft') {\n    tokenText = tokenText.padEnd(9, ' ');\n  } else {\n    tokenText = tokenText.padStart(9, ' ');\n  }\n\n  return tokenText + ['', ...tail].join(' ');\n}\n/**\n * True when the token can be formatted in tabular style\n */\n\nexport function isTabularToken(type) {\n  return isLogicalOperator(type) || type === TokenType.RESERVED_CLAUSE || type === TokenType.RESERVED_SELECT || type === TokenType.RESERVED_SET_OPERATION || type === TokenType.RESERVED_JOIN || type === TokenType.LIMIT;\n}\n//# sourceMappingURL=tabularStyle.js.map","import { last } from '../utils.js';\nconst INDENT_TYPE_TOP_LEVEL = 'top-level';\nconst INDENT_TYPE_BLOCK_LEVEL = 'block-level';\n/**\n * Manages indentation levels.\n *\n * There are two types of indentation levels:\n *\n * - BLOCK_LEVEL : increased by open-parenthesis\n * - TOP_LEVEL : increased by RESERVED_CLAUSE words\n */\n\nexport default class Indentation {\n  indentTypes = [];\n  /**\n   * @param {string} indent A string to indent with\n   */\n\n  constructor(indent) {\n    this.indent = indent;\n  }\n  /**\n   * Returns indentation string for single indentation step.\n   */\n\n\n  getSingleIndent() {\n    return this.indent;\n  }\n  /**\n   * Returns current indentation level\n   */\n\n\n  getLevel() {\n    return this.indentTypes.length;\n  }\n  /**\n   * Increases indentation by one top-level indent.\n   */\n\n\n  increaseTopLevel() {\n    this.indentTypes.push(INDENT_TYPE_TOP_LEVEL);\n  }\n  /**\n   * Increases indentation by one block-level indent.\n   */\n\n\n  increaseBlockLevel() {\n    this.indentTypes.push(INDENT_TYPE_BLOCK_LEVEL);\n  }\n  /**\n   * Decreases indentation by one top-level indent.\n   * Does nothing when the previous indent is not top-level.\n   */\n\n\n  decreaseTopLevel() {\n    if (this.indentTypes.length > 0 && last(this.indentTypes) === INDENT_TYPE_TOP_LEVEL) {\n      this.indentTypes.pop();\n    }\n  }\n  /**\n   * Decreases indentation by one block-level indent.\n   * If there are top-level indents within the block-level indent,\n   * throws away these as well.\n   */\n\n\n  decreaseBlockLevel() {\n    while (this.indentTypes.length > 0) {\n      const type = this.indentTypes.pop();\n\n      if (type !== INDENT_TYPE_TOP_LEVEL) {\n        break;\n      }\n    }\n  }\n\n}\n//# sourceMappingURL=Indentation.js.map","// eslint-disable-next-line max-classes-per-file\nimport Indentation from './Indentation.js';\nimport Layout, { WS } from './Layout.js';\n/**\n * Like Layout, but only formats single-line expressions.\n *\n * Throws InlineLayoutError:\n * - when encountering a newline\n * - when exceeding configured expressionWidth\n */\n\nexport default class InlineLayout extends Layout {\n  length = 0; // Keeps track of the trailing whitespace,\n  // so that we can decrease length when encountering WS.NO_SPACE,\n  // but only when there actually is a space to remove.\n\n  trailingSpace = false;\n\n  constructor(expressionWidth) {\n    super(new Indentation('')); // no indentation in inline layout\n\n    this.expressionWidth = expressionWidth;\n  }\n\n  add(...items) {\n    items.forEach(item => this.addToLength(item));\n\n    if (this.length > this.expressionWidth) {\n      // We have exceeded the allowable width\n      throw new InlineLayoutError();\n    }\n\n    super.add(...items);\n  }\n\n  addToLength(item) {\n    if (typeof item === 'string') {\n      this.length += item.length;\n      this.trailingSpace = false;\n    } else if (item === WS.MANDATORY_NEWLINE || item === WS.NEWLINE) {\n      // newlines not allowed within inline block\n      throw new InlineLayoutError();\n    } else if (item === WS.INDENT || item === WS.SINGLE_INDENT || item === WS.SPACE) {\n      if (!this.trailingSpace) {\n        this.length++;\n        this.trailingSpace = true;\n      }\n    } else if (item === WS.NO_NEWLINE || item === WS.NO_SPACE) {\n      if (this.trailingSpace) {\n        this.trailingSpace = false;\n        this.length--;\n      }\n    }\n  }\n\n}\n/**\n * Thrown when block of SQL can't be formatted as a single line.\n */\n\nexport class InlineLayoutError extends Error {}\n//# sourceMappingURL=InlineLayout.js.map","import { equalizeWhitespace, isMultiline } from '../utils.js';\nimport { isTabularStyle } from './config.js';\nimport { TokenType } from '../lexer/token.js';\nimport { NodeType } from '../parser/ast.js';\nimport { WS } from './Layout.js';\nimport toTabularFormat, { isTabularToken } from './tabularStyle.js';\nimport InlineLayout, { InlineLayoutError } from './InlineLayout.js';\n\n/** Formats a generic SQL expression */\nexport default class ExpressionFormatter {\n  inline = false;\n  nodes = [];\n  index = -1;\n\n  constructor({\n    cfg,\n    dialectCfg,\n    params,\n    layout,\n    inline = false\n  }) {\n    this.cfg = cfg;\n    this.dialectCfg = dialectCfg;\n    this.inline = inline;\n    this.params = params;\n    this.layout = layout;\n  }\n\n  format(nodes) {\n    this.nodes = nodes;\n\n    for (this.index = 0; this.index < this.nodes.length; this.index++) {\n      this.formatNode(this.nodes[this.index]);\n    }\n\n    return this.layout;\n  }\n\n  formatNode(node) {\n    this.formatComments(node.leadingComments);\n    this.formatNodeWithoutComments(node);\n    this.formatComments(node.trailingComments);\n  }\n\n  formatNodeWithoutComments(node) {\n    switch (node.type) {\n      case NodeType.function_call:\n        return this.formatFunctionCall(node);\n\n      case NodeType.array_subscript:\n        return this.formatArraySubscript(node);\n\n      case NodeType.property_access:\n        return this.formatPropertyAccess(node);\n\n      case NodeType.parenthesis:\n        return this.formatParenthesis(node);\n\n      case NodeType.between_predicate:\n        return this.formatBetweenPredicate(node);\n\n      case NodeType.case_expression:\n        return this.formatCaseExpression(node);\n\n      case NodeType.case_when:\n        return this.formatCaseWhen(node);\n\n      case NodeType.case_else:\n        return this.formatCaseElse(node);\n\n      case NodeType.clause:\n        return this.formatClause(node);\n\n      case NodeType.set_operation:\n        return this.formatSetOperation(node);\n\n      case NodeType.limit_clause:\n        return this.formatLimitClause(node);\n\n      case NodeType.all_columns_asterisk:\n        return this.formatAllColumnsAsterisk(node);\n\n      case NodeType.literal:\n        return this.formatLiteral(node);\n\n      case NodeType.identifier:\n        return this.formatIdentifier(node);\n\n      case NodeType.parameter:\n        return this.formatParameter(node);\n\n      case NodeType.operator:\n        return this.formatOperator(node);\n\n      case NodeType.comma:\n        return this.formatComma(node);\n\n      case NodeType.line_comment:\n        return this.formatLineComment(node);\n\n      case NodeType.block_comment:\n        return this.formatBlockComment(node);\n\n      case NodeType.keyword:\n        return this.formatKeywordNode(node);\n    }\n  }\n\n  formatFunctionCall(node) {\n    this.withComments(node.nameKw, () => {\n      this.layout.add(this.showKw(node.nameKw));\n    });\n    this.formatNode(node.parenthesis);\n  }\n\n  formatArraySubscript(node) {\n    this.withComments(node.array, () => {\n      this.layout.add(node.array.type === NodeType.keyword ? this.showKw(node.array) : node.array.text);\n    });\n    this.formatNode(node.parenthesis);\n  }\n\n  formatPropertyAccess(node) {\n    this.formatNode(node.object);\n    this.layout.add(WS.NO_SPACE, '.');\n    this.formatNode(node.property);\n  }\n\n  formatParenthesis(node) {\n    const inlineLayout = this.formatInlineExpression(node.children);\n\n    if (inlineLayout) {\n      this.layout.add(node.openParen);\n      this.layout.add(...inlineLayout.getLayoutItems());\n      this.layout.add(WS.NO_SPACE, node.closeParen, WS.SPACE);\n    } else {\n      this.layout.add(node.openParen, WS.NEWLINE);\n\n      if (isTabularStyle(this.cfg)) {\n        this.layout.add(WS.INDENT);\n        this.layout = this.formatSubExpression(node.children);\n      } else {\n        this.layout.indentation.increaseBlockLevel();\n        this.layout.add(WS.INDENT);\n        this.layout = this.formatSubExpression(node.children);\n        this.layout.indentation.decreaseBlockLevel();\n      }\n\n      this.layout.add(WS.NEWLINE, WS.INDENT, node.closeParen, WS.SPACE);\n    }\n  }\n\n  formatBetweenPredicate(node) {\n    this.layout.add(this.showKw(node.betweenKw), WS.SPACE);\n    this.layout = this.formatSubExpression(node.expr1);\n    this.layout.add(WS.NO_SPACE, WS.SPACE, this.showNonTabularKw(node.andKw), WS.SPACE);\n    this.layout = this.formatSubExpression(node.expr2);\n    this.layout.add(WS.SPACE);\n  }\n\n  formatCaseExpression(node) {\n    this.formatNode(node.caseKw);\n    this.layout = this.formatSubExpression(node.expr);\n    this.layout.indentation.increaseBlockLevel();\n    this.layout = this.formatSubExpression(node.clauses);\n    this.layout.indentation.decreaseBlockLevel();\n    this.layout.add(WS.NEWLINE, WS.INDENT);\n    this.formatNode(node.endKw);\n  }\n\n  formatCaseWhen(node) {\n    this.layout.add(WS.NEWLINE, WS.INDENT);\n    this.formatNode(node.whenKw);\n    this.layout = this.formatSubExpression(node.condition);\n    this.formatNode(node.thenKw);\n    this.layout = this.formatSubExpression(node.result);\n  }\n\n  formatCaseElse(node) {\n    this.layout.add(WS.NEWLINE, WS.INDENT);\n    this.formatNode(node.elseKw);\n    this.layout = this.formatSubExpression(node.result);\n  }\n\n  formatClause(node) {\n    if (isTabularStyle(this.cfg)) {\n      this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node.nameKw), WS.SPACE);\n    } else {\n      this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node.nameKw), WS.NEWLINE);\n    }\n\n    this.layout.indentation.increaseTopLevel();\n\n    if (!isTabularStyle(this.cfg)) {\n      this.layout.add(WS.INDENT);\n    }\n\n    this.layout = this.formatSubExpression(node.children);\n    this.layout.indentation.decreaseTopLevel();\n  }\n\n  formatSetOperation(node) {\n    this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node.nameKw), WS.NEWLINE);\n    this.layout.add(WS.INDENT);\n    this.layout = this.formatSubExpression(node.children);\n  }\n\n  formatLimitClause(node) {\n    this.withComments(node.limitKw, () => {\n      this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node.limitKw));\n    });\n    this.layout.indentation.increaseTopLevel();\n\n    if (isTabularStyle(this.cfg)) {\n      this.layout.add(WS.SPACE);\n    } else {\n      this.layout.add(WS.NEWLINE, WS.INDENT);\n    }\n\n    if (node.offset) {\n      this.layout = this.formatSubExpression(node.offset);\n      this.layout.add(WS.NO_SPACE, ',', WS.SPACE);\n      this.layout = this.formatSubExpression(node.count);\n    } else {\n      this.layout = this.formatSubExpression(node.count);\n    }\n\n    this.layout.indentation.decreaseTopLevel();\n  }\n\n  formatAllColumnsAsterisk(_node) {\n    this.layout.add('*', WS.SPACE);\n  }\n\n  formatLiteral(node) {\n    this.layout.add(node.text, WS.SPACE);\n  }\n\n  formatIdentifier(node) {\n    this.layout.add(node.text, WS.SPACE);\n  }\n\n  formatParameter(node) {\n    this.layout.add(this.params.get(node), WS.SPACE);\n  }\n\n  formatOperator({\n    text\n  }) {\n    var _this$dialectCfg$alwa;\n\n    if (this.cfg.denseOperators || (_this$dialectCfg$alwa = this.dialectCfg.alwaysDenseOperators) !== null && _this$dialectCfg$alwa !== void 0 && _this$dialectCfg$alwa.includes(text)) {\n      this.layout.add(WS.NO_SPACE, text);\n    } else if (text === ':') {\n      this.layout.add(WS.NO_SPACE, text, WS.SPACE);\n    } else {\n      this.layout.add(text, WS.SPACE);\n    }\n  }\n\n  formatComma(_node) {\n    if (!this.inline) {\n      this.layout.add(WS.NO_SPACE, ',', WS.NEWLINE, WS.INDENT);\n    } else {\n      this.layout.add(WS.NO_SPACE, ',', WS.SPACE);\n    }\n  }\n\n  withComments(node, fn) {\n    this.formatComments(node.leadingComments);\n    fn();\n    this.formatComments(node.trailingComments);\n  }\n\n  formatComments(comments) {\n    if (!comments) {\n      return;\n    }\n\n    comments.forEach(com => {\n      if (com.type === NodeType.line_comment) {\n        this.formatLineComment(com);\n      } else {\n        this.formatBlockComment(com);\n      }\n    });\n  }\n\n  formatLineComment(node) {\n    if (isMultiline(node.precedingWhitespace || '')) {\n      this.layout.add(WS.NEWLINE, WS.INDENT, node.text, WS.MANDATORY_NEWLINE, WS.INDENT);\n    } else if (this.layout.getLayoutItems().length > 0) {\n      this.layout.add(WS.NO_NEWLINE, WS.SPACE, node.text, WS.MANDATORY_NEWLINE, WS.INDENT);\n    } else {\n      // comment is the first item in code - no need to add preceding spaces\n      this.layout.add(node.text, WS.MANDATORY_NEWLINE, WS.INDENT);\n    }\n  }\n\n  formatBlockComment(node) {\n    if (this.isMultilineBlockComment(node)) {\n      this.splitBlockComment(node.text).forEach(line => {\n        this.layout.add(WS.NEWLINE, WS.INDENT, line);\n      });\n      this.layout.add(WS.NEWLINE, WS.INDENT);\n    } else {\n      this.layout.add(node.text, WS.SPACE);\n    }\n  }\n\n  isMultilineBlockComment(node) {\n    return isMultiline(node.text) || isMultiline(node.precedingWhitespace || '');\n  } // Breaks up block comment to multiple lines.\n  // For example this comment (dots representing leading whitespace):\n  //\n  //   ..../**\n  //   .....* Some description here\n  //   .....* and here too\n  //   .....*/\n  //\n  // gets broken to this array (note the leading single spaces):\n  //\n  //   [ '/**',\n  //     '.* Some description here',\n  //     '.* and here too',\n  //     '.*/' ]\n  //\n\n\n  splitBlockComment(comment) {\n    return comment.split(/\\n/).map(line => {\n      if (/^\\s*\\*/.test(line)) {\n        return ' ' + line.replace(/^\\s*/, '');\n      } else {\n        return line.replace(/^\\s*/, '');\n      }\n    });\n  }\n\n  formatSubExpression(nodes) {\n    return new ExpressionFormatter({\n      cfg: this.cfg,\n      dialectCfg: this.dialectCfg,\n      params: this.params,\n      layout: this.layout,\n      inline: this.inline\n    }).format(nodes);\n  }\n\n  formatInlineExpression(nodes) {\n    const oldParamIndex = this.params.getPositionalParameterIndex();\n\n    try {\n      return new ExpressionFormatter({\n        cfg: this.cfg,\n        dialectCfg: this.dialectCfg,\n        params: this.params,\n        layout: new InlineLayout(this.cfg.expressionWidth),\n        inline: true\n      }).format(nodes);\n    } catch (e) {\n      if (e instanceof InlineLayoutError) {\n        // While formatting, some of the positional parameters might have\n        // been consumed, which increased the current parameter index.\n        // We reset the index to an earlier state, so we can run the\n        // formatting again and re-consume these parameters in non-inline mode.\n        this.params.setPositionalParameterIndex(oldParamIndex);\n        return undefined;\n      } else {\n        // forward all unexpected errors\n        throw e;\n      }\n    }\n  }\n\n  formatKeywordNode(node) {\n    switch (node.tokenType) {\n      case TokenType.RESERVED_JOIN:\n        return this.formatJoin(node);\n\n      case TokenType.AND:\n      case TokenType.OR:\n      case TokenType.XOR:\n        return this.formatLogicalOperator(node);\n\n      default:\n        return this.formatKeyword(node);\n    }\n  }\n\n  formatJoin(node) {\n    if (isTabularStyle(this.cfg)) {\n      // in tabular style JOINs are at the same level as clauses\n      this.layout.indentation.decreaseTopLevel();\n      this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node), WS.SPACE);\n      this.layout.indentation.increaseTopLevel();\n    } else {\n      this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node), WS.SPACE);\n    }\n  }\n\n  formatKeyword(node) {\n    this.layout.add(this.showKw(node), WS.SPACE);\n  }\n\n  formatLogicalOperator(node) {\n    if (this.cfg.logicalOperatorNewline === 'before') {\n      if (isTabularStyle(this.cfg)) {\n        // In tabular style AND/OR is placed on the same level as clauses\n        this.layout.indentation.decreaseTopLevel();\n        this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node), WS.SPACE);\n        this.layout.indentation.increaseTopLevel();\n      } else {\n        this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node), WS.SPACE);\n      }\n    } else {\n      this.layout.add(this.showKw(node), WS.NEWLINE, WS.INDENT);\n    }\n  }\n\n  showKw(node) {\n    if (isTabularToken(node.tokenType)) {\n      return toTabularFormat(this.showNonTabularKw(node), this.cfg.indentStyle);\n    } else {\n      return this.showNonTabularKw(node);\n    }\n  } // Like showKw(), but skips tabular formatting\n\n\n  showNonTabularKw(node) {\n    switch (this.cfg.keywordCase) {\n      case 'preserve':\n        return equalizeWhitespace(node.raw);\n\n      case 'upper':\n        return node.text;\n\n      case 'lower':\n        return node.text.toLowerCase();\n    }\n  }\n\n}\n//# sourceMappingURL=ExpressionFormatter.js.map","import { indentString } from './config.js';\nimport Params from './Params.js';\nimport { createParser } from '../parser/createParser.js';\nimport formatCommaPositions from './formatCommaPositions.js';\nimport formatAliasPositions from './formatAliasPositions.js';\nimport ExpressionFormatter from './ExpressionFormatter.js';\nimport Layout, { WS } from './Layout.js';\nimport Indentation from './Indentation.js';\n/** Main formatter class that produces a final output string from list of tokens */\n\nexport default class Formatter {\n  constructor(cfg) {\n    this.cfg = cfg;\n    this.params = new Params(this.cfg.params);\n  }\n  /**\n   * SQL Tokenizer for this formatter, provided by subclasses.\n   */\n\n\n  tokenizer() {\n    throw new Error('tokenizer() not implemented by subclass');\n  } // Cache the tokenizer for each class (each SQL dialect)\n  // So we wouldn't need to recreate the tokenizer, which is kinda expensive,\n  // for each call to format() function.\n\n\n  cachedTokenizer() {\n    const cls = this.constructor;\n\n    if (!cls.cachedTokenizer) {\n      cls.cachedTokenizer = this.tokenizer();\n    }\n\n    return cls.cachedTokenizer;\n  }\n  /**\n   * Dialect-specific formatting configuration, optionally provided by subclass.\n   */\n\n\n  formatOptions() {\n    return {};\n  }\n  /**\n   * Formats an SQL query.\n   * @param {string} query - The SQL query string to be formatted\n   * @return {string} The formatter query\n   */\n\n\n  format(query) {\n    const ast = this.parse(query);\n    const formattedQuery = this.formatAst(ast);\n    const finalQuery = this.postFormat(formattedQuery);\n    return finalQuery.trimEnd();\n  }\n\n  parse(query) {\n    return createParser(this.cachedTokenizer()).parse(query, this.cfg.paramTypes || {});\n  }\n\n  formatAst(statements) {\n    return statements.map(stat => this.formatStatement(stat)).join('\\n'.repeat(this.cfg.linesBetweenQueries + 1));\n  }\n\n  formatStatement(statement) {\n    const layout = new ExpressionFormatter({\n      cfg: this.cfg,\n      dialectCfg: this.formatOptions(),\n      params: this.params,\n      layout: new Layout(new Indentation(indentString(this.cfg)))\n    }).format(statement.children);\n\n    if (!statement.hasSemicolon) {// do nothing\n    } else if (this.cfg.newlineBeforeSemicolon) {\n      layout.add(WS.NEWLINE, ';');\n    } else {\n      layout.add(WS.NO_NEWLINE, ';');\n    }\n\n    return layout.toString();\n  }\n\n  postFormat(query) {\n    if (this.cfg.tabulateAlias) {\n      query = formatAliasPositions(query);\n    }\n\n    if (this.cfg.commaPosition === 'before' || this.cfg.commaPosition === 'tabular') {\n      query = formatCommaPositions(query, this.cfg.commaPosition, indentString(this.cfg));\n    }\n\n    return query;\n  }\n\n}\n//# sourceMappingURL=Formatter.js.map","import { maxLength } from '../utils.js';\n/**\n * Handles select alias placement - tabulates if enabled\n */\n\nexport default function formatAliasPositions(query) {\n  const lines = query.split('\\n');\n  let newQuery = [];\n\n  for (let i = 0; i < lines.length; i++) {\n    // find SELECT rows with trailing comma, if no comma (only one row) - no-op\n    if (lines[i].match(/^\\s*SELECT/i)) {\n      let aliasLines = [];\n\n      if (lines[i].match(/.*,$/)) {\n        aliasLines = [lines[i]]; // add select to aliasLines in case of tabular formats\n      } else {\n        newQuery.push(lines[i]); // add select to new query\n\n        if (lines[i].match(/^\\s*SELECT\\s+.+(?!,$)/i)) {\n          continue;\n        }\n\n        aliasLines.push(lines[++i]);\n      } // get all lines in SELECT clause\n\n\n      while (lines[i++].match(/.*,$/)) {\n        aliasLines.push(lines[i]);\n      } // break lines into alias with optional AS, and all preceding text\n\n\n      const splitLines = aliasLines.map(line => ({\n        line,\n        matches: line.match(/(^.*?\\S) (AS )?(\\S+,?$)/i)\n      })).map(({\n        line,\n        matches\n      }) => {\n        if (!matches) {\n          return {\n            precedingText: line\n          };\n        }\n\n        return {\n          precedingText: matches[1],\n          as: matches[2],\n          alias: matches[3]\n        };\n      }); // get longest of precedingText, trim trailing comma for non-alias columns\n\n      const aliasMaxLength = maxLength(splitLines.map(({\n        precedingText\n      }) => precedingText.replace(/\\s*,\\s*$/, ''))); // re-construct line, aligning by inserting space before AS or alias\n\n      aliasLines = splitLines.map(({\n        precedingText,\n        as,\n        alias\n      }) => precedingText + (alias ? ' '.repeat(aliasMaxLength - precedingText.length + 1) + (as ?? '') + alias : ''));\n      newQuery = [...newQuery, ...aliasLines];\n    }\n\n    newQuery.push(lines[i]);\n  }\n\n  return newQuery.join('\\n');\n}\n//# sourceMappingURL=formatAliasPositions.js.map","// Escapes regex special chars\nexport const escapeRegExp = string => string.replace(/[.*+?^${}()|[\\]\\\\]/gu, '\\\\$&');\nexport const WHITESPACE_REGEX = /\\s+/uy;\nexport const patternToRegex = pattern => new RegExp(`(?:${pattern})`, 'uy'); // Converts \"ab\" to \"[Aa][Bb]\"\n\nexport const toCaseInsensitivePattern = prefix => prefix.split('').map(char => / /gu.test(char) ? '\\\\s+' : `[${char.toUpperCase()}${char.toLowerCase()}]`).join('');\nexport const withDashes = pattern => pattern + '(?:-' + pattern + ')*'; // Converts [\"a\", \"b\"] to \"(?:[Aa]|[Bb]|)\" or \"(?:[Aa]|[Bb])\" when required = true\n\nexport const prefixesPattern = ({\n  prefixes,\n  requirePrefix\n}) => `(?:${prefixes.map(toCaseInsensitivePattern).join('|')}${requirePrefix ? '' : '|'})`;\n//# sourceMappingURL=regexUtil.js.map","import { sortByLengthDesc } from '../utils.js';\nimport { escapeRegExp, patternToRegex, prefixesPattern, withDashes } from './regexUtil.js';\n/**\n * Builds a RegExp for valid line comments in a SQL dialect\n * @param {string[]} lineCommentTypes - list of character strings that denote line comments\n */\n\nexport const lineComment = lineCommentTypes => new RegExp(`(?:${lineCommentTypes.map(escapeRegExp).join('|')}).*?(?=\\r\\n|\\r|\\n|$)`, 'uy');\n/**\n * Builds a RegExp for matching either open- or close-parenthesis patterns\n */\n\nexport const parenthesis = (kind, extraParens = []) => {\n  const index = kind === 'open' ? 0 : 1;\n  const parens = ['()', ...extraParens].map(pair => pair[index]);\n  return patternToRegex(parens.map(escapeRegExp).join('|'));\n};\n/**\n * Builds a RegExp containing all operators for a SQL dialect\n */\n\nexport const operator = operators => patternToRegex(`${sortByLengthDesc(operators).map(escapeRegExp).join('|')}`); // Negative lookahead to avoid matching a keyword that's actually part of identifier,\n// which can happen when identifier allows word-boundary characters inside it.\n//\n// For example \"SELECT$ME\" should be tokenized as:\n// - [\"SELECT$ME\"] when $ is allowed inside identifiers\n// - [\"SELECT\", \"$\", \"ME\"] when $ can't be part of identifiers.\n\nconst rejectIdentCharsPattern = ({\n  rest,\n  dashes\n}) => rest || dashes ? `(?![${rest || ''}${dashes ? '-' : ''}])` : '';\n/**\n * Builds a RegExp for all Reserved Keywords in a SQL dialect\n */\n\n\nexport const reservedWord = (reservedKeywords, identChars = {}) => {\n  if (reservedKeywords.length === 0) {\n    return /^\\b$/u;\n  }\n\n  const avoidIdentChars = rejectIdentCharsPattern(identChars);\n  const reservedKeywordsPattern = sortByLengthDesc(reservedKeywords).map(escapeRegExp).join('|').replace(/ /gu, '\\\\s+');\n  return new RegExp(`(?:${reservedKeywordsPattern})${avoidIdentChars}\\\\b`, 'iuy');\n};\n/**\n * Builds a RegExp for parameter placeholder patterns\n * @param {string[]} paramTypes - list of strings that denote placeholder types\n * @param {string} pattern - string that denotes placeholder pattern\n */\n\nexport const parameter = (paramTypes, pattern) => {\n  if (!paramTypes.length) {\n    return undefined;\n  }\n\n  const typesRegex = paramTypes.map(escapeRegExp).join('|');\n  return patternToRegex(`(?:${typesRegex})(?:${pattern})`);\n};\n\nconst buildQStringPatterns = () => {\n  const specialDelimiterMap = {\n    '<': '>',\n    '[': ']',\n    '(': ')',\n    '{': '}'\n  }; // base pattern for special delimiters, left must correspond with right\n\n  const singlePattern = \"{left}(?:(?!{right}').)*?{right}\"; // replace {left} and {right} with delimiters, collect as array\n\n  const patternList = Object.entries(specialDelimiterMap).map(([left, right]) => singlePattern.replace(/{left}/g, escapeRegExp(left)).replace(/{right}/g, escapeRegExp(right)));\n  const specialDelimiters = escapeRegExp(Object.keys(specialDelimiterMap).join('')); // standard pattern for common delimiters, ignores special delimiters\n\n  const standardDelimiterPattern = String.raw`(?<tag>[^\\s${specialDelimiters}])(?:(?!\\k<tag>').)*?\\k<tag>`; // constructs final pattern by joining all cases\n\n  const qStringPattern = `[Qq]'(?:${standardDelimiterPattern}|${patternList.join('|')})'`;\n  return qStringPattern;\n}; // Regex patterns for all supported quote styles.\n//\n// Most of them have a single escaping-style built in,\n// but \"\" and '' support multiple versions of escapes,\n// which must be selected with suffixes: -qq, -bs, -qq-bs, -raw\n\n\nexport const quotePatterns = {\n  // - backtick quoted (using `` to escape)\n  '``': '(?:`[^`]*`)+',\n  // - Transact-SQL square bracket quoted (using ]] to escape)\n  '[]': String.raw`(?:\\[[^\\]]*\\])(?:\\][^\\]]*\\])*`,\n  // double-quoted\n  '\"\"-qq': String.raw`(?:\"[^\"]*\")+`,\n  // with repeated quote escapes\n  '\"\"-bs': String.raw`(?:\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")`,\n  // with backslash escapes\n  '\"\"-qq-bs': String.raw`(?:\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")+`,\n  // with repeated quote or backslash escapes\n  '\"\"-raw': String.raw`(?:\"[^\"]*\")`,\n  // no escaping\n  // single-quoted\n  \"''-qq\": String.raw`(?:'[^']*')+`,\n  // with repeated quote escapes\n  \"''-bs\": String.raw`(?:'[^'\\\\]*(?:\\\\.[^'\\\\]*)*')`,\n  // with backslash escapes\n  \"''-qq-bs\": String.raw`(?:'[^'\\\\]*(?:\\\\.[^'\\\\]*)*')+`,\n  // with repeated quote or backslash escapes\n  \"''-raw\": String.raw`(?:'[^']*')`,\n  // no escaping\n  // PostgreSQL dollar-quoted\n  '$$': String.raw`(?<tag>\\$\\w*\\$)[\\s\\S]*?\\k<tag>`,\n  // BigQuery '''triple-quoted''' (using \\' to escape)\n  \"'''..'''\": String.raw`'''[^\\\\]*?(?:\\\\.[^\\\\]*?)*?'''`,\n  // BigQuery \"\"\"triple-quoted\"\"\" (using \\\" to escape)\n  '\"\"\"..\"\"\"': String.raw`\"\"\"[^\\\\]*?(?:\\\\.[^\\\\]*?)*?\"\"\"`,\n  // Hive and Spark variables: ${name}\n  '{}': String.raw`(?:\\{[^\\}]*\\})`,\n  // Oracle q'' strings: q'<text>' q'|text|' ...\n  \"q''\": buildQStringPatterns()\n};\n\nconst singleQuotePattern = quoteTypes => {\n  if (typeof quoteTypes === 'string') {\n    return quotePatterns[quoteTypes];\n  } else {\n    return prefixesPattern(quoteTypes) + quotePatterns[quoteTypes.quote];\n  }\n};\n/** Builds a RegExp for matching variables */\n\n\nexport const variable = varTypes => patternToRegex(varTypes.map(varType => 'regex' in varType ? varType.regex : singleQuotePattern(varType)).join('|'));\n/** Builds a quote-delimited pattern for matching all given quote types */\n\nexport const stringPattern = quoteTypes => quoteTypes.map(singleQuotePattern).join('|');\n/** Builds a RegExp for matching quote-delimited patterns */\n\nexport const string = quoteTypes => patternToRegex(stringPattern(quoteTypes));\n/**\n * Builds a RegExp for valid identifiers in a SQL dialect\n */\n\nexport const identifier = (specialChars = {}) => patternToRegex(identifierPattern(specialChars));\n/**\n * Builds a RegExp string for valid identifiers in a SQL dialect\n */\n\nexport const identifierPattern = ({\n  first,\n  rest,\n  dashes,\n  allowFirstCharNumber\n} = {}) => {\n  // Unicode letters, diacritical marks and underscore\n  const letter = '\\\\p{Alphabetic}\\\\p{Mark}_'; // Numbers 0..9, plus various unicode numbers\n\n  const number = '\\\\p{Decimal_Number}';\n  const firstChars = escapeRegExp(first ?? '');\n  const restChars = escapeRegExp(rest ?? '');\n  const pattern = allowFirstCharNumber ? `[${letter}${number}${firstChars}][${letter}${number}${restChars}]*` : `[${letter}${firstChars}][${letter}${number}${restChars}]*`;\n  return dashes ? withDashes(pattern) : pattern;\n};\n//# sourceMappingURL=regexFactory.js.map","import { lineColFromIndex } from './lineColFromIndex.js';\nimport { WHITESPACE_REGEX } from './regexUtil.js';\nexport default class TokenizerEngine {\n  input = ''; // The input SQL string to process\n\n  index = 0; // Current position in string\n\n  constructor(rules) {\n    this.rules = rules;\n  }\n  /**\n   * Takes a SQL string and breaks it into tokens.\n   * Each token is an object with type and value.\n   *\n   * @param {string} input - The SQL string\n   * @returns {Token[]} output token stream\n   */\n\n\n  tokenize(input) {\n    this.input = input;\n    this.index = 0;\n    const tokens = [];\n    let token; // Keep processing the string until end is reached\n\n    while (this.index < this.input.length) {\n      // skip any preceding whitespace\n      const precedingWhitespace = this.getWhitespace();\n\n      if (this.index < this.input.length) {\n        // Get the next token and the token type\n        token = this.getNextToken();\n\n        if (!token) {\n          throw this.createParseError();\n        }\n\n        tokens.push({ ...token,\n          precedingWhitespace\n        });\n      }\n    }\n\n    return tokens;\n  }\n\n  createParseError() {\n    const text = this.input.slice(this.index, this.index + 10);\n    const {\n      line,\n      col\n    } = lineColFromIndex(this.input, this.index);\n    return new Error(`Parse error: Unexpected \"${text}\" at line ${line} column ${col}`);\n  }\n\n  getWhitespace() {\n    WHITESPACE_REGEX.lastIndex = this.index;\n    const matches = WHITESPACE_REGEX.exec(this.input);\n\n    if (matches) {\n      // Advance current position by matched whitespace length\n      this.index += matches[0].length;\n      return matches[0];\n    }\n\n    return undefined;\n  }\n\n  getNextToken() {\n    for (const rule of this.rules) {\n      const token = this.match(rule);\n\n      if (token) {\n        return token;\n      }\n    }\n\n    return undefined;\n  } // Attempts to match token rule regex at current position in input\n\n\n  match(rule) {\n    rule.regex.lastIndex = this.index;\n    const matches = rule.regex.exec(this.input);\n\n    if (matches) {\n      const matchedText = matches[0];\n      const token = {\n        type: rule.type,\n        raw: matchedText,\n        text: rule.text ? rule.text(matchedText) : matchedText,\n        start: this.index\n      };\n\n      if (rule.key) {\n        token.key = rule.key(matchedText);\n      } // Advance current position by matched token length\n\n\n      this.index += matchedText.length;\n      return token;\n    }\n\n    return undefined;\n  }\n\n}\n//# sourceMappingURL=TokenizerEngine.js.map","/* eslint-disable no-cond-assign */\nconst START = /\\/\\*/uy; // matches: /*\n\nconst MIDDLE = /([^/*]|\\*[^/]|\\/[^*])+/uy; // matches text NOT containing /* or */\n\nconst END = /\\*\\//uy; // matches: */\n\n/**\n * An object mimicking a regular expression,\n * for matching nested block-comments.\n */\n\nexport class NestedComment {\n  lastIndex = 0;\n\n  exec(input) {\n    let result = '';\n    let match;\n    let nestLevel = 0;\n\n    if (match = this.matchSection(START, input)) {\n      result += match;\n      nestLevel++;\n    } else {\n      return null;\n    }\n\n    while (nestLevel > 0) {\n      if (match = this.matchSection(START, input)) {\n        result += match;\n        nestLevel++;\n      } else if (match = this.matchSection(END, input)) {\n        result += match;\n        nestLevel--;\n      } else if (match = this.matchSection(MIDDLE, input)) {\n        result += match;\n      } else {\n        return null;\n      }\n    }\n\n    return [result];\n  }\n\n  matchSection(regex, input) {\n    regex.lastIndex = this.lastIndex;\n    const matches = regex.exec(input);\n\n    if (matches) {\n      this.lastIndex += matches[0].length;\n    }\n\n    return matches ? matches[0] : null;\n  }\n\n}\n//# sourceMappingURL=NestedComment.js.map","import { TokenType } from './token.js';\nimport * as regex from './regexFactory.js';\nimport TokenizerEngine from './TokenizerEngine.js';\nimport { escapeRegExp } from './regexUtil.js';\nimport { equalizeWhitespace } from '../utils.js';\nimport { NestedComment } from './NestedComment.js';\nexport default class Tokenizer {\n  constructor(cfg) {\n    this.cfg = cfg;\n    this.rulesBeforeParams = this.buildRulesBeforeParams(cfg);\n    this.rulesAfterParams = this.buildRulesAfterParams(cfg);\n  }\n\n  tokenize(input, paramTypesOverrides) {\n    const rules = [...this.rulesBeforeParams, ...this.buildParamRules(this.cfg, paramTypesOverrides), ...this.rulesAfterParams];\n    const tokens = new TokenizerEngine(rules).tokenize(input);\n    return this.cfg.postProcess ? this.cfg.postProcess(tokens) : tokens;\n  } // These rules can be cached as they only depend on\n  // the Tokenizer config options specified for each SQL dialect\n\n\n  buildRulesBeforeParams(cfg) {\n    return this.validRules([{\n      type: TokenType.BLOCK_COMMENT,\n      regex: cfg.nestedBlockComments ? new NestedComment() : /(\\/\\*[^]*?\\*\\/)/uy\n    }, {\n      type: TokenType.LINE_COMMENT,\n      regex: regex.lineComment(cfg.lineCommentTypes ?? ['--'])\n    }, {\n      type: TokenType.QUOTED_IDENTIFIER,\n      regex: regex.string(cfg.identTypes)\n    }, {\n      type: TokenType.NUMBER,\n      regex: /(?:0x[0-9a-fA-F]+|0b[01]+|(?:-\\s*)?[0-9]+(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+(?:\\.[0-9]+)?)?)(?!\\w)/uy\n    }, // RESERVED_PHRASE is matched before all other keyword tokens\n    // to e.g. prioritize matching \"TIMESTAMP WITH TIME ZONE\" phrase over \"WITH\" clause.\n    {\n      type: TokenType.RESERVED_PHRASE,\n      regex: regex.reservedWord(cfg.reservedPhrases ?? [], cfg.identChars),\n      text: toCanonical\n    }, {\n      type: TokenType.CASE,\n      regex: /CASE\\b/iuy,\n      text: toCanonical\n    }, {\n      type: TokenType.END,\n      regex: /END\\b/iuy,\n      text: toCanonical\n    }, {\n      type: TokenType.BETWEEN,\n      regex: /BETWEEN\\b/iuy,\n      text: toCanonical\n    }, {\n      type: TokenType.LIMIT,\n      regex: cfg.reservedClauses.includes('LIMIT') ? /LIMIT\\b/iuy : undefined,\n      text: toCanonical\n    }, {\n      type: TokenType.RESERVED_CLAUSE,\n      regex: regex.reservedWord(cfg.reservedClauses, cfg.identChars),\n      text: toCanonical\n    }, {\n      type: TokenType.RESERVED_SELECT,\n      regex: regex.reservedWord(cfg.reservedSelect, cfg.identChars),\n      text: toCanonical\n    }, {\n      type: TokenType.RESERVED_SET_OPERATION,\n      regex: regex.reservedWord(cfg.reservedSetOperations, cfg.identChars),\n      text: toCanonical\n    }, {\n      type: TokenType.WHEN,\n      regex: /WHEN\\b/iuy,\n      text: toCanonical\n    }, {\n      type: TokenType.ELSE,\n      regex: /ELSE\\b/iuy,\n      text: toCanonical\n    }, {\n      type: TokenType.THEN,\n      regex: /THEN\\b/iuy,\n      text: toCanonical\n    }, {\n      type: TokenType.RESERVED_JOIN,\n      regex: regex.reservedWord(cfg.reservedJoins, cfg.identChars),\n      text: toCanonical\n    }, {\n      type: TokenType.AND,\n      regex: /AND\\b/iuy,\n      text: toCanonical\n    }, {\n      type: TokenType.OR,\n      regex: /OR\\b/iuy,\n      text: toCanonical\n    }, {\n      type: TokenType.XOR,\n      regex: cfg.supportsXor ? /XOR\\b/iuy : undefined,\n      text: toCanonical\n    }, {\n      type: TokenType.RESERVED_FUNCTION_NAME,\n      regex: regex.reservedWord(cfg.reservedFunctionNames, cfg.identChars),\n      text: toCanonical\n    }, {\n      type: TokenType.RESERVED_KEYWORD,\n      regex: regex.reservedWord(cfg.reservedKeywords, cfg.identChars),\n      text: toCanonical\n    }]);\n  } // These rules can also be cached as they only depend on\n  // the Tokenizer config options specified for each SQL dialect\n\n\n  buildRulesAfterParams(cfg) {\n    return this.validRules([{\n      type: TokenType.VARIABLE,\n      regex: cfg.variableTypes ? regex.variable(cfg.variableTypes) : undefined\n    }, {\n      type: TokenType.STRING,\n      regex: regex.string(cfg.stringTypes)\n    }, {\n      type: TokenType.IDENTIFIER,\n      regex: regex.identifier(cfg.identChars)\n    }, {\n      type: TokenType.DELIMITER,\n      regex: /[;]/uy\n    }, {\n      type: TokenType.COMMA,\n      regex: /[,]/y\n    }, {\n      type: TokenType.OPEN_PAREN,\n      regex: regex.parenthesis('open', cfg.extraParens)\n    }, {\n      type: TokenType.CLOSE_PAREN,\n      regex: regex.parenthesis('close', cfg.extraParens)\n    }, {\n      type: TokenType.OPERATOR,\n      regex: regex.operator([// standard operators\n      '+', '-', '/', '>', '<', '=', '<>', '<=', '>=', '!=', ...(cfg.operators ?? [])])\n    }, {\n      type: TokenType.ASTERISK,\n      regex: /[*]/uy\n    }, {\n      type: TokenType.DOT,\n      regex: /[.]/uy\n    }]);\n  } // These rules can't be blindly cached as the paramTypesOverrides object\n  // can differ on each invocation of the format() function.\n\n\n  buildParamRules(cfg, paramTypesOverrides) {\n    var _cfg$paramTypes, _cfg$paramTypes2, _cfg$paramTypes3, _cfg$paramTypes4;\n\n    // Each dialect has its own default parameter types (if any),\n    // but these can be overriden by the user of the library.\n    const paramTypes = {\n      named: (paramTypesOverrides === null || paramTypesOverrides === void 0 ? void 0 : paramTypesOverrides.named) || ((_cfg$paramTypes = cfg.paramTypes) === null || _cfg$paramTypes === void 0 ? void 0 : _cfg$paramTypes.named) || [],\n      quoted: (paramTypesOverrides === null || paramTypesOverrides === void 0 ? void 0 : paramTypesOverrides.quoted) || ((_cfg$paramTypes2 = cfg.paramTypes) === null || _cfg$paramTypes2 === void 0 ? void 0 : _cfg$paramTypes2.quoted) || [],\n      numbered: (paramTypesOverrides === null || paramTypesOverrides === void 0 ? void 0 : paramTypesOverrides.numbered) || ((_cfg$paramTypes3 = cfg.paramTypes) === null || _cfg$paramTypes3 === void 0 ? void 0 : _cfg$paramTypes3.numbered) || [],\n      positional: typeof (paramTypesOverrides === null || paramTypesOverrides === void 0 ? void 0 : paramTypesOverrides.positional) === 'boolean' ? paramTypesOverrides.positional : (_cfg$paramTypes4 = cfg.paramTypes) === null || _cfg$paramTypes4 === void 0 ? void 0 : _cfg$paramTypes4.positional\n    };\n    return this.validRules([{\n      type: TokenType.NAMED_PARAMETER,\n      regex: regex.parameter(paramTypes.named, regex.identifierPattern(cfg.paramChars || cfg.identChars)),\n      key: v => v.slice(1)\n    }, {\n      type: TokenType.QUOTED_PARAMETER,\n      regex: regex.parameter(paramTypes.quoted, regex.stringPattern(cfg.identTypes)),\n      key: v => (({\n        tokenKey,\n        quoteChar\n      }) => tokenKey.replace(new RegExp(escapeRegExp('\\\\' + quoteChar), 'gu'), quoteChar))({\n        tokenKey: v.slice(2, -1),\n        quoteChar: v.slice(-1)\n      })\n    }, {\n      type: TokenType.NUMBERED_PARAMETER,\n      regex: regex.parameter(paramTypes.numbered, '[0-9]+'),\n      key: v => v.slice(1)\n    }, {\n      type: TokenType.POSITIONAL_PARAMETER,\n      regex: paramTypes.positional ? /[?]/y : undefined\n    }]);\n  } // filters out rules for token types whose regex is undefined\n\n\n  validRules(rules) {\n    return rules.filter(rule => Boolean(rule.regex));\n  }\n\n}\n/**\n * Converts keywords (and keyword sequences) to canonical form:\n * - in uppercase\n * - single spaces between words\n */\n\nconst toCanonical = v => equalizeWhitespace(v.toUpperCase());\n//# sourceMappingURL=Tokenizer.js.map","/**\n * Performs expandSinglePhrase() on array\n */\nexport const expandPhrases = phrases => phrases.flatMap(expandSinglePhrase);\n/**\n * Expands a syntax description like\n *\n *     \"CREATE [OR REPLACE] [TEMP|TEMPORARY] TABLE\"\n *\n * into an array of all possible combinations like:\n *\n *     [ \"CREATE TABLE\",\n *       \"CREATE TEMP TABLE\",\n *       \"CREATE TEMPORARY TABLE\",\n *       \"CREATE OR REPLACE TABLE\",\n *       \"CREATE OR REPLACE TEMP TABLE\",\n *       \"CREATE OR REPLACE TEMPORARY TABLE\" ]\n */\n\nexport const expandSinglePhrase = phrase => buildCombinations(parsePhrase(phrase)).map(text => text.trim()); // This data type holds variants of a single part in whole phrase.\n// Corresponding to syntax as follows:\n//\n//   \"TABLE\"            --> [\"TABLE\"]\n//   \"[TABLE]\"          --> [\"\", \"TABLE\"]\n//   \"[TEMP|TEMPORARY]\" --> [\"\", \"TEMP\", \"TEMPORARY\"]\n//   \"{TEMP|TEMPORARY}\" --> [\"TEMP\", \"TEMPORARY\"]\n//\n\nconst REQUIRED_PART = /[^[\\]{}]+/y;\nconst REQUIRED_BLOCK = /\\{.*?\\}/y;\nconst OPTIONAL_BLOCK = /\\[.*?\\]/y;\n\nconst parsePhrase = text => {\n  let index = 0;\n  const result = [];\n\n  while (index < text.length) {\n    // Match everything else outside of \"[...]\" or \"{...}\" blocks\n    REQUIRED_PART.lastIndex = index;\n    const requiredMatch = REQUIRED_PART.exec(text);\n\n    if (requiredMatch) {\n      result.push([requiredMatch[0].trim()]);\n      index += requiredMatch[0].length;\n    } // Match \"[...]\" block\n\n\n    OPTIONAL_BLOCK.lastIndex = index;\n    const optionalBlockMatch = OPTIONAL_BLOCK.exec(text);\n\n    if (optionalBlockMatch) {\n      const choices = optionalBlockMatch[0].slice(1, -1).split('|').map(s => s.trim());\n      result.push(['', ...choices]);\n      index += optionalBlockMatch[0].length;\n    } // Match \"{...}\" block\n\n\n    REQUIRED_BLOCK.lastIndex = index;\n    const requiredBlockMatch = REQUIRED_BLOCK.exec(text);\n\n    if (requiredBlockMatch) {\n      const choices = requiredBlockMatch[0].slice(1, -1).split('|').map(s => s.trim());\n      result.push(choices);\n      index += requiredBlockMatch[0].length;\n    }\n\n    if (!requiredMatch && !optionalBlockMatch && !requiredBlockMatch) {\n      throw new Error(`Unbalanced parenthesis in: ${text}`);\n    }\n  }\n\n  return result;\n};\n\nconst buildCombinations = ([first, ...rest]) => {\n  if (first === undefined) {\n    return [''];\n  }\n\n  return buildCombinations(rest).flatMap(tail => first.map(head => head.trim() + ' ' + tail.trim()));\n};\n//# sourceMappingURL=expandPhrases.js.map","import { flatKeywordList } from '../../utils.js';\nexport const keywords = flatKeywordList({\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical#reserved_keywords\n  keywords: ['ALL', 'AND', 'ANY', 'ARRAY', 'AS', 'ASC', 'ASSERT_ROWS_MODIFIED', 'AT', 'BETWEEN', 'BY', 'CASE', 'CAST', 'COLLATE', 'CONTAINS', 'CREATE', 'CROSS', 'CUBE', 'CURRENT', 'DEFAULT', 'DEFINE', 'DESC', 'DISTINCT', 'ELSE', 'END', 'ENUM', 'ESCAPE', 'EXCEPT', 'EXCLUDE', 'EXISTS', 'EXTRACT', 'FALSE', 'FETCH', 'FOLLOWING', 'FOR', 'FROM', 'FULL', 'GROUP', 'GROUPING', 'GROUPS', 'HASH', 'HAVING', 'IF', 'IGNORE', 'IN', 'INNER', 'INTERSECT', 'INTERVAL', 'INTO', 'IS', 'JOIN', 'LATERAL', 'LEFT', 'LIKE', 'LIMIT', 'LOOKUP', 'MERGE', 'NATURAL', 'NEW', 'NO', 'NOT', 'NULL', 'NULLS', 'OF', 'ON', 'OR', 'ORDER', 'OUTER', 'OVER', 'PARTITION', 'PRECEDING', 'PROTO', 'RANGE', 'RECURSIVE', 'RESPECT', 'RIGHT', 'ROLLUP', 'ROWS', 'SELECT', 'SET', 'SOME', 'STRUCT', 'TABLE', 'TABLESAMPLE', 'THEN', 'TO', 'TREAT', 'TRUE', 'UNBOUNDED', 'UNION', 'UNNEST', 'USING', 'WHEN', 'WHERE', 'WINDOW', 'WITH', 'WITHIN'],\n  datatypes: ['ARRAY', // parametric, ARRAY<T>\n  'BOOL', 'BYTES', // parameterised, BYTES(Length)\n  'DATE', 'DATETIME', 'GEOGRAPHY', 'INTERVAL', 'INT64', 'INT', 'SMALLINT', 'INTEGER', 'BIGINT', 'TINYINT', 'BYTEINT', 'NUMERIC', // parameterised, NUMERIC(Precision[, Scale])\n  'DECIMAL', // parameterised, DECIMAL(Precision[, Scale])\n  'BIGNUMERIC', // parameterised, BIGNUMERIC(Precision[, Scale])\n  'BIGDECIMAL', // parameterised, BIGDECIMAL(Precision[, Scale])\n  'FLOAT64', 'STRING', // parameterised, STRING(Length)\n  'STRUCT', // parametric, STRUCT<T>\n  'TIME', 'TIMEZONE'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/conversion_functions#formatting_syntax\n  stringFormat: ['HEX', 'BASEX', 'BASE64M', 'ASCII', 'UTF-8', 'UTF8'],\n  misc: ['SAFE'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language\n  ddl: ['LIKE', // CREATE TABLE LIKE\n  'COPY', // CREATE TABLE COPY\n  'CLONE', // CREATE TABLE CLONE\n  'IN', 'OUT', 'INOUT', 'RETURNS', 'LANGUAGE', 'CASCADE', 'RESTRICT', 'DETERMINISTIC']\n});\n//# sourceMappingURL=bigquery.keywords.js.map","import { flatKeywordList } from '../../utils.js';\nexport const functions = flatKeywordList({\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/aead_encryption_functions\n  aead: ['KEYS.NEW_KEYSET', 'KEYS.ADD_KEY_FROM_RAW_BYTES', 'AEAD.DECRYPT_BYTES', 'AEAD.DECRYPT_STRING', 'AEAD.ENCRYPT', 'KEYS.KEYSET_CHAIN', 'KEYS.KEYSET_FROM_JSON', 'KEYS.KEYSET_TO_JSON', 'KEYS.ROTATE_KEYSET', 'KEYS.KEYSET_LENGTH'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/aggregate_analytic_functions\n  aggregateAnalytic: ['ANY_VALUE', 'ARRAY_AGG', 'AVG', 'CORR', 'COUNT', 'COUNTIF', 'COVAR_POP', 'COVAR_SAMP', 'MAX', 'MIN', 'ST_CLUSTERDBSCAN', 'STDDEV_POP', 'STDDEV_SAMP', 'STRING_AGG', 'SUM', 'VAR_POP', 'VAR_SAMP'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/aggregate_functions\n  aggregate: ['ANY_VALUE', 'ARRAY_AGG', 'ARRAY_CONCAT_AGG', 'AVG', 'BIT_AND', 'BIT_OR', 'BIT_XOR', 'COUNT', 'COUNTIF', 'LOGICAL_AND', 'LOGICAL_OR', 'MAX', 'MIN', 'STRING_AGG', 'SUM'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/approximate_aggregate_functions\n  approximateAggregate: ['APPROX_COUNT_DISTINCT', 'APPROX_QUANTILES', 'APPROX_TOP_COUNT', 'APPROX_TOP_SUM'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/array_functions\n  array: [// 'ARRAY',\n  'ARRAY_CONCAT', 'ARRAY_LENGTH', 'ARRAY_TO_STRING', 'GENERATE_ARRAY', 'GENERATE_DATE_ARRAY', 'GENERATE_TIMESTAMP_ARRAY', 'ARRAY_REVERSE', 'OFFSET', 'SAFE_OFFSET', 'ORDINAL', 'SAFE_ORDINAL'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/bit_functions\n  bitwise: ['BIT_COUNT'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/conversion_functions\n  conversion: [// 'CASE',\n  'PARSE_BIGNUMERIC', 'PARSE_NUMERIC', 'SAFE_CAST'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/date_functions\n  date: ['CURRENT_DATE', 'EXTRACT', 'DATE', 'DATE_ADD', 'DATE_SUB', 'DATE_DIFF', 'DATE_TRUNC', 'DATE_FROM_UNIX_DATE', 'FORMAT_DATE', 'LAST_DAY', 'PARSE_DATE', 'UNIX_DATE'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/datetime_functions\n  datetime: ['CURRENT_DATETIME', 'DATETIME', 'EXTRACT', 'DATETIME_ADD', 'DATETIME_SUB', 'DATETIME_DIFF', 'DATETIME_TRUNC', 'FORMAT_DATETIME', 'LAST_DAY', 'PARSE_DATETIME'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/debugging_functions\n  debugging: ['ERROR'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/federated_query_functions\n  federatedQuery: ['EXTERNAL_QUERY'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/geography_functions\n  geography: ['S2_CELLIDFROMPOINT', 'S2_COVERINGCELLIDS', 'ST_ANGLE', 'ST_AREA', 'ST_ASBINARY', 'ST_ASGEOJSON', 'ST_ASTEXT', 'ST_AZIMUTH', 'ST_BOUNDARY', 'ST_BOUNDINGBOX', 'ST_BUFFER', 'ST_BUFFERWITHTOLERANCE', 'ST_CENTROID', 'ST_CENTROID_AGG', 'ST_CLOSESTPOINT', 'ST_CLUSTERDBSCAN', 'ST_CONTAINS', 'ST_CONVEXHULL', 'ST_COVEREDBY', 'ST_COVERS', 'ST_DIFFERENCE', 'ST_DIMENSION', 'ST_DISJOINT', 'ST_DISTANCE', 'ST_DUMP', 'ST_DWITHIN', 'ST_ENDPOINT', 'ST_EQUALS', 'ST_EXTENT', 'ST_EXTERIORRING', 'ST_GEOGFROM', 'ST_GEOGFROMGEOJSON', 'ST_GEOGFROMTEXT', 'ST_GEOGFROMWKB', 'ST_GEOGPOINT', 'ST_GEOGPOINTFROMGEOHASH', 'ST_GEOHASH', 'ST_GEOMETRYTYPE', 'ST_INTERIORRINGS', 'ST_INTERSECTION', 'ST_INTERSECTS', 'ST_INTERSECTSBOX', 'ST_ISCOLLECTION', 'ST_ISEMPTY', 'ST_LENGTH', 'ST_MAKELINE', 'ST_MAKEPOLYGON', 'ST_MAKEPOLYGONORIENTED', 'ST_MAXDISTANCE', 'ST_NPOINTS', 'ST_NUMGEOMETRIES', 'ST_NUMPOINTS', 'ST_PERIMETER', 'ST_POINTN', 'ST_SIMPLIFY', 'ST_SNAPTOGRID', 'ST_STARTPOINT', 'ST_TOUCHES', 'ST_UNION', 'ST_UNION_AGG', 'ST_WITHIN', 'ST_X', 'ST_Y'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/hash_functions\n  hash: ['FARM_FINGERPRINT', 'MD5', 'SHA1', 'SHA256', 'SHA512'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/hll_functions\n  hll: ['HLL_COUNT.INIT', 'HLL_COUNT.MERGE', 'HLL_COUNT.MERGE_PARTIAL', 'HLL_COUNT.EXTRACT'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/interval_functions\n  interval: ['MAKE_INTERVAL', 'EXTRACT', 'JUSTIFY_DAYS', 'JUSTIFY_HOURS', 'JUSTIFY_INTERVAL'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/json_functions\n  json: ['JSON_EXTRACT', 'JSON_QUERY', 'JSON_EXTRACT_SCALAR', 'JSON_VALUE', 'JSON_EXTRACT_ARRAY', 'JSON_QUERY_ARRAY', 'JSON_EXTRACT_STRING_ARRAY', 'JSON_VALUE_ARRAY', 'TO_JSON_STRING'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/mathematical_functions\n  math: ['ABS', 'SIGN', 'IS_INF', 'IS_NAN', 'IEEE_DIVIDE', 'RAND', 'SQRT', 'POW', 'POWER', 'EXP', 'LN', 'LOG', 'LOG10', 'GREATEST', 'LEAST', 'DIV', 'SAFE_DIVIDE', 'SAFE_MULTIPLY', 'SAFE_NEGATE', 'SAFE_ADD', 'SAFE_SUBTRACT', 'MOD', 'ROUND', 'TRUNC', 'CEIL', 'CEILING', 'FLOOR', 'COS', 'COSH', 'ACOS', 'ACOSH', 'SIN', 'SINH', 'ASIN', 'ASINH', 'TAN', 'TANH', 'ATAN', 'ATANH', 'ATAN2', 'RANGE_BUCKET'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/navigation_functions\n  navigation: ['FIRST_VALUE', 'LAST_VALUE', 'NTH_VALUE', 'LEAD', 'LAG', 'PERCENTILE_CONT', 'PERCENTILE_DISC'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/net_functions\n  net: ['NET.IP_FROM_STRING', 'NET.SAFE_IP_FROM_STRING', 'NET.IP_TO_STRING', 'NET.IP_NET_MASK', 'NET.IP_TRUNC', 'NET.IPV4_FROM_INT64', 'NET.IPV4_TO_INT64', 'NET.HOST', 'NET.PUBLIC_SUFFIX', 'NET.REG_DOMAIN'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/numbering_functions\n  numbering: ['RANK', 'DENSE_RANK', 'PERCENT_RANK', 'CUME_DIST', 'NTILE', 'ROW_NUMBER'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/security_functions\n  security: ['SESSION_USER'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/statistical_aggregate_functions\n  statisticalAggregate: ['CORR', 'COVAR_POP', 'COVAR_SAMP', 'STDDEV_POP', 'STDDEV_SAMP', 'STDDEV', 'VAR_POP', 'VAR_SAMP', 'VARIANCE'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/string_functions\n  string: ['ASCII', 'BYTE_LENGTH', 'CHAR_LENGTH', 'CHARACTER_LENGTH', 'CHR', 'CODE_POINTS_TO_BYTES', 'CODE_POINTS_TO_STRING', 'CONCAT', 'CONTAINS_SUBSTR', 'ENDS_WITH', 'FORMAT', 'FROM_BASE32', 'FROM_BASE64', 'FROM_HEX', 'INITCAP', 'INSTR', 'LEFT', 'LENGTH', 'LPAD', 'LOWER', 'LTRIM', 'NORMALIZE', 'NORMALIZE_AND_CASEFOLD', 'OCTET_LENGTH', 'REGEXP_CONTAINS', 'REGEXP_EXTRACT', 'REGEXP_EXTRACT_ALL', 'REGEXP_INSTR', 'REGEXP_REPLACE', 'REGEXP_SUBSTR', 'REPLACE', 'REPEAT', 'REVERSE', 'RIGHT', 'RPAD', 'RTRIM', 'SAFE_CONVERT_BYTES_TO_STRING', 'SOUNDEX', 'SPLIT', 'STARTS_WITH', 'STRPOS', 'SUBSTR', 'SUBSTRING', 'TO_BASE32', 'TO_BASE64', 'TO_CODE_POINTS', 'TO_HEX', 'TRANSLATE', 'TRIM', 'UNICODE', 'UPPER'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/time_functions\n  time: ['CURRENT_TIME', 'TIME', 'EXTRACT', 'TIME_ADD', 'TIME_SUB', 'TIME_DIFF', 'TIME_TRUNC', 'FORMAT_TIME', 'PARSE_TIME'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/timestamp_functions\n  timestamp: ['CURRENT_TIMESTAMP', 'EXTRACT', 'STRING', 'TIMESTAMP', 'TIMESTAMP_ADD', 'TIMESTAMP_SUB', 'TIMESTAMP_DIFF', 'TIMESTAMP_TRUNC', 'FORMAT_TIMESTAMP', 'PARSE_TIMESTAMP', 'TIMESTAMP_SECONDS', 'TIMESTAMP_MILLIS', 'TIMESTAMP_MICROS', 'UNIX_SECONDS', 'UNIX_MILLIS', 'UNIX_MICROS'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/uuid_functions\n  uuid: ['GENERATE_UUID'],\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/conditional_expressions\n  conditional: ['COALESCE', 'IF', 'IFNULL', 'NULLIF'],\n  // https://cloud.google.com/bigquery/docs/reference/legacy-sql\n  legacyAggregate: ['AVG', 'BIT_AND', 'BIT_OR', 'BIT_XOR', 'CORR', 'COUNT', 'COVAR_POP', 'COVAR_SAMP', 'EXACT_COUNT_DISTINCT', 'FIRST', 'GROUP_CONCAT', 'GROUP_CONCAT_UNQUOTED', 'LAST', 'MAX', 'MIN', 'NEST', 'NTH', 'QUANTILES', 'STDDEV', 'STDDEV_POP', 'STDDEV_SAMP', 'SUM', 'TOP', 'UNIQUE', 'VARIANCE', 'VAR_POP', 'VAR_SAMP'],\n  legacyBitwise: ['BIT_COUNT'],\n  legacyCasting: ['BOOLEAN', 'BYTES', 'CAST', 'FLOAT', 'HEX_STRING', 'INTEGER', 'STRING'],\n  legacyComparison: [// expr 'IN',\n  'COALESCE', 'GREATEST', 'IFNULL', 'IS_INF', 'IS_NAN', 'IS_EXPLICITLY_DEFINED', 'LEAST', 'NVL'],\n  legacyDatetime: ['CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'DATE', 'DATE_ADD', 'DATEDIFF', 'DAY', 'DAYOFWEEK', 'DAYOFYEAR', 'FORMAT_UTC_USEC', 'HOUR', 'MINUTE', 'MONTH', 'MSEC_TO_TIMESTAMP', 'NOW', 'PARSE_UTC_USEC', 'QUARTER', 'SEC_TO_TIMESTAMP', 'SECOND', 'STRFTIME_UTC_USEC', 'TIME', 'TIMESTAMP', 'TIMESTAMP_TO_MSEC', 'TIMESTAMP_TO_SEC', 'TIMESTAMP_TO_USEC', 'USEC_TO_TIMESTAMP', 'UTC_USEC_TO_DAY', 'UTC_USEC_TO_HOUR', 'UTC_USEC_TO_MONTH', 'UTC_USEC_TO_WEEK', 'UTC_USEC_TO_YEAR', 'WEEK', 'YEAR'],\n  legacyIp: ['FORMAT_IP', 'PARSE_IP', 'FORMAT_PACKED_IP', 'PARSE_PACKED_IP'],\n  legacyJson: ['JSON_EXTRACT', 'JSON_EXTRACT_SCALAR'],\n  legacyMath: ['ABS', 'ACOS', 'ACOSH', 'ASIN', 'ASINH', 'ATAN', 'ATANH', 'ATAN2', 'CEIL', 'COS', 'COSH', 'DEGREES', 'EXP', 'FLOOR', 'LN', 'LOG', 'LOG2', 'LOG10', 'PI', 'POW', 'RADIANS', 'RAND', 'ROUND', 'SIN', 'SINH', 'SQRT', 'TAN', 'TANH'],\n  legacyRegex: ['REGEXP_MATCH', 'REGEXP_EXTRACT', 'REGEXP_REPLACE'],\n  legacyString: ['CONCAT', // expr CONTAINS 'str'\n  'INSTR', 'LEFT', 'LENGTH', 'LOWER', 'LPAD', 'LTRIM', 'REPLACE', 'RIGHT', 'RPAD', 'RTRIM', 'SPLIT', 'SUBSTR', 'UPPER'],\n  legacyTableWildcard: ['TABLE_DATE_RANGE', 'TABLE_DATE_RANGE_STRICT', 'TABLE_QUERY'],\n  legacyUrl: ['HOST', 'DOMAIN', 'TLD'],\n  legacyWindow: ['AVG', 'COUNT', 'MAX', 'MIN', 'STDDEV', 'SUM', 'CUME_DIST', 'DENSE_RANK', 'FIRST_VALUE', 'LAG', 'LAST_VALUE', 'LEAD', 'NTH_VALUE', 'NTILE', 'PERCENT_RANK', 'PERCENTILE_CONT', 'PERCENTILE_DISC', 'RANK', 'RATIO_TO_REPORT', 'ROW_NUMBER'],\n  legacyMisc: ['CURRENT_USER', 'EVERY', 'FROM_BASE64', 'HASH', 'FARM_FINGERPRINT', 'IF', 'POSITION', 'SHA1', 'SOME', 'TO_BASE64'],\n  other: ['BQ.JOBS.CANCEL', 'BQ.REFRESH_MATERIALIZED_VIEW'],\n  ddl: ['OPTIONS'],\n  pivot: ['PIVOT', 'UNPIVOT'],\n  // Data types with parameters like VARCHAR(100)\n  // https://cloud.google.com/bigquery/docs/reference/standard-sql/data-types#parameterized_data_types\n  dataTypes: ['BYTES', 'NUMERIC', 'DECIMAL', 'BIGNUMERIC', 'BIGDECIMAL', 'STRING']\n});\n//# sourceMappingURL=bigquery.functions.js.map","import Formatter from '../../formatter/Formatter.js';\nimport Tokenizer from '../../lexer/Tokenizer.js';\nimport { EOF_TOKEN, isToken, TokenType } from '../../lexer/token.js';\nimport { expandPhrases } from '../../expandPhrases.js';\nimport { keywords } from './bigquery.keywords.js';\nimport { functions } from './bigquery.functions.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT] [AS STRUCT | AS VALUE]']);\nconst reservedClauses = expandPhrases([// Queries: https://cloud.google.com/bigquery/docs/reference/standard-sql/query-syntax\n'WITH [RECURSIVE]', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'QUALIFY', 'WINDOW', 'PARTITION BY', 'ORDER BY', 'LIMIT', 'OFFSET', 'OMIT RECORD IF', // legacy\n// Data modification: https://cloud.google.com/bigquery/docs/reference/standard-sql/dml-syntax\n// - insert:\n'INSERT [INTO]', 'VALUES', // - update:\n'UPDATE', 'SET', // - delete:\n'DELETE [FROM]', // - truncate:\n'TRUNCATE TABLE', // - merge:\n'MERGE [INTO]', 'WHEN [NOT] MATCHED [BY SOURCE | BY TARGET] [THEN]', 'UPDATE SET', // Data definition, https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language\n'CREATE [OR REPLACE] [MATERIALIZED] VIEW [IF NOT EXISTS]', 'CREATE [OR REPLACE] [TEMP|TEMPORARY|SNAPSHOT|EXTERNAL] TABLE [IF NOT EXISTS]', 'DROP [SNAPSHOT | EXTERNAL] TABLE [IF EXISTS]', // - alter table:\n'ALTER TABLE [IF EXISTS]', 'ADD COLUMN [IF NOT EXISTS]', 'DROP COLUMN [IF EXISTS]', 'RENAME TO', 'ALTER COLUMN [IF EXISTS]', 'SET DEFAULT COLLATE', // for alter column\n'SET OPTIONS', // for alter column\n'DROP NOT NULL', // for alter column\n'SET DATA TYPE', // for alter column\n'CREATE SCHEMA [IF NOT EXISTS]', 'DEFAULT COLLATE', 'CLUSTER BY', 'FOR SYSTEM_TIME AS OF', // CREATE SNAPSHOT TABLE\n'WITH CONNECTION', 'WITH PARTITION COLUMNS', 'CREATE [OR REPLACE] [TEMP|TEMPORARY|TABLE] FUNCTION [IF NOT EXISTS]', 'REMOTE WITH CONNECTION', 'RETURNS TABLE', 'CREATE [OR REPLACE] PROCEDURE [IF NOT EXISTS]', 'CREATE [OR REPLACE] ROW ACCESS POLICY [IF NOT EXISTS]', 'GRANT TO', 'FILTER USING', 'CREATE CAPACITY', 'AS JSON', 'CREATE RESERVATION', 'CREATE ASSIGNMENT', 'CREATE SEARCH INDEX [IF NOT EXISTS]', 'ALTER SCHEMA [IF EXISTS]', 'ALTER [MATERIALIZED] VIEW [IF EXISTS]', 'ALTER BI_CAPACITY', 'DROP SCHEMA [IF EXISTS]', 'DROP [MATERIALIZED] VIEW [IF EXISTS]', 'DROP [TABLE] FUNCTION [IF EXISTS]', 'DROP PROCEDURE [IF EXISTS]', 'DROP ROW ACCESS POLICY', 'DROP ALL ROW ACCESS POLICIES', 'DROP CAPACITY [IF EXISTS]', 'DROP RESERVATION [IF EXISTS]', 'DROP ASSIGNMENT [IF EXISTS]', 'DROP SEARCH INDEX [IF EXISTS]', 'DROP [IF EXISTS]', // DCL, https://cloud.google.com/bigquery/docs/reference/standard-sql/data-control-language\n'GRANT', 'REVOKE', // Script, https://cloud.google.com/bigquery/docs/reference/standard-sql/scripting\n'DECLARE', 'EXECUTE IMMEDIATE', 'LOOP', 'END LOOP', 'REPEAT', 'END REPEAT', 'WHILE', 'END WHILE', 'BREAK', 'LEAVE', 'CONTINUE', 'ITERATE', 'FOR', 'END FOR', 'BEGIN', 'BEGIN TRANSACTION', 'COMMIT TRANSACTION', 'ROLLBACK TRANSACTION', 'RAISE', 'RETURN', 'CALL', // Debug, https://cloud.google.com/bigquery/docs/reference/standard-sql/debugging-statements\n'ASSERT', // Other, https://cloud.google.com/bigquery/docs/reference/standard-sql/other-statements\n'EXPORT DATA']);\nconst reservedSetOperations = expandPhrases(['UNION {ALL | DISTINCT}', 'EXCEPT DISTINCT', 'INTERSECT DISTINCT']);\nconst reservedJoins = expandPhrases(['JOIN', '{LEFT | RIGHT | FULL} [OUTER] JOIN', '{INNER | CROSS} JOIN']);\nconst reservedPhrases = expandPhrases([// https://cloud.google.com/bigquery/docs/reference/standard-sql/query-syntax#tablesample_operator\n'TABLESAMPLE SYSTEM', // From DDL: https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language\n'ANY TYPE', 'ALL COLUMNS', 'NOT DETERMINISTIC', // inside window definitions\n'{ROWS | RANGE} BETWEEN']); // https://cloud.google.com/bigquery/docs/reference/#standard-sql-reference\n\nexport default class BigQueryFormatter extends Formatter {\n  // TODO: handle trailing comma in select clause\n  tokenizer() {\n    return new Tokenizer({\n      reservedClauses,\n      reservedSelect,\n      reservedSetOperations,\n      reservedJoins,\n      reservedPhrases,\n      reservedKeywords: keywords,\n      reservedFunctionNames: functions,\n      extraParens: ['[]'],\n      stringTypes: [// The triple-quoted strings are listed first, so they get matched first.\n      // Otherwise the first two quotes of \"\"\" will get matched as an empty \"\" string.\n      {\n        quote: '\"\"\"..\"\"\"',\n        prefixes: ['R', 'B', 'RB', 'BR']\n      }, {\n        quote: \"'''..'''\",\n        prefixes: ['R', 'B', 'RB', 'BR']\n      }, '\"\"-bs', \"''-bs\", {\n        quote: '\"\"-raw',\n        prefixes: ['R', 'B', 'RB', 'BR'],\n        requirePrefix: true\n      }, {\n        quote: \"''-raw\",\n        prefixes: ['R', 'B', 'RB', 'BR'],\n        requirePrefix: true\n      }],\n      identTypes: ['``'],\n      identChars: {\n        dashes: true\n      },\n      paramTypes: {\n        positional: true,\n        named: ['@'],\n        quoted: ['@']\n      },\n      lineCommentTypes: ['--', '#'],\n      operators: ['&', '|', '^', '~', '>>', '<<', '||'],\n      postProcess\n    });\n  }\n\n}\n\nfunction postProcess(tokens) {\n  return detectArraySubscripts(combineParameterizedTypes(tokens));\n} // Converts OFFSET token inside array from RESERVED_CLAUSE to RESERVED_FUNCTION_NAME\n// See: https://cloud.google.com/bigquery/docs/reference/standard-sql/functions-and-operators#array_subscript_operator\n\n\nfunction detectArraySubscripts(tokens) {\n  let prevToken = EOF_TOKEN;\n  return tokens.map(token => {\n    if (token.text === 'OFFSET' && prevToken.text === '[') {\n      prevToken = token;\n      return { ...token,\n        type: TokenType.RESERVED_FUNCTION_NAME\n      };\n    } else {\n      prevToken = token;\n      return token;\n    }\n  });\n} // Combines multiple tokens forming a parameterized type like STRUCT<ARRAY<INT64>> into a single token\n\n\nfunction combineParameterizedTypes(tokens) {\n  const processed = [];\n\n  for (let i = 0; i < tokens.length; i++) {\n    var _tokens;\n\n    const token = tokens[i];\n\n    if ((isToken.ARRAY(token) || isToken.STRUCT(token)) && ((_tokens = tokens[i + 1]) === null || _tokens === void 0 ? void 0 : _tokens.text) === '<') {\n      const endIndex = findClosingAngleBracketIndex(tokens, i + 1);\n      const typeDefTokens = tokens.slice(i, endIndex + 1);\n      processed.push({\n        type: TokenType.IDENTIFIER,\n        raw: typeDefTokens.map(formatTypeDefToken('raw')).join(''),\n        text: typeDefTokens.map(formatTypeDefToken('text')).join(''),\n        start: token.start\n      });\n      i = endIndex;\n    } else {\n      processed.push(token);\n    }\n  }\n\n  return processed;\n}\n\nconst formatTypeDefToken = key => token => {\n  if (token.type === TokenType.IDENTIFIER || token.type === TokenType.COMMA) {\n    return token[key] + ' ';\n  } else {\n    return token[key];\n  }\n};\n\nfunction findClosingAngleBracketIndex(tokens, startIndex) {\n  let level = 0;\n\n  for (let i = startIndex; i < tokens.length; i++) {\n    const token = tokens[i];\n\n    if (token.text === '<') {\n      level++;\n    } else if (token.text === '>') {\n      level--;\n    } else if (token.text === '>>') {\n      level -= 2;\n    }\n\n    if (level === 0) {\n      return i;\n    }\n  }\n\n  return tokens.length - 1;\n}\n//# sourceMappingURL=bigquery.formatter.js.map","import { flatKeywordList } from '../../utils.js';\nexport const functions = flatKeywordList({\n  // https://www.ibm.com/docs/en/db2-for-zos/11?topic=functions-aggregate\n  aggregate: ['ARRAY_AGG', 'AVG', 'CORR', 'CORRELATION', 'COUNT', 'COUNT_BIG', 'COVAR_POP', 'COVARIANCE', 'COVAR', 'COVAR_SAMP', 'COVARIANCE_SAMP', 'CUME_DIST', 'GROUPING', 'LISTAGG', 'MAX', 'MEDIAN', 'MIN', 'PERCENTILE_CONT', 'PERCENTILE_DISC', 'PERCENT_RANK', 'REGR_AVGX', 'REGR_AVGY', 'REGR_COUNT', 'REGR_INTERCEPT', 'REGR_ICPT', 'REGR_R2', 'REGR_SLOPE', 'REGR_SXX', 'REGR_SXY', 'REGR_SYY', 'STDDEV_POP', 'STDDEV', 'STDDEV_SAMP', 'SUM', 'VAR_POP', 'VARIANCE', 'VAR', 'VAR_SAMP', 'VARIANCE_SAMP', 'XMLAGG'],\n  // https://www.ibm.com/docs/en/db2-for-zos/11?topic=functions-scalar\n  scalar: ['ABS', 'ABSVAL', 'ACOS', 'ADD_DAYS', 'ADD_MONTHS', 'ARRAY_DELETE', 'ARRAY_FIRST', 'ARRAY_LAST', 'ARRAY_NEXT', 'ARRAY_PRIOR', 'ARRAY_TRIM', 'ASCII', 'ASCII_CHR', 'ASCII_STR', 'ASCIISTR', 'ASIN', 'ATAN', 'ATANH', 'ATAN2', 'BIGINT', 'BINARY', 'BITAND', 'BITANDNOT', 'BITOR', 'BITXOR', 'BITNOT', 'BLOB', 'BTRIM', 'CARDINALITY', 'CCSID_ENCODING', 'CEILING', 'CEIL', 'CHAR', 'CHAR9', 'CHARACTER_LENGTH', 'CHAR_LENGTH', 'CHR', 'CLOB', 'COALESCE', 'COLLATION_KEY', 'COMPARE_DECFLOAT', 'CONCAT', 'CONTAINS', 'COS', 'COSH', 'DATE', 'DAY', 'DAYOFMONTH', 'DAYOFWEEK', 'DAYOFWEEK_ISO', 'DAYOFYEAR', 'DAYS', 'DAYS_BETWEEN', 'DBCLOB', 'DECFLOAT', 'DECFLOAT_FORMAT', 'DECFLOAT_SORTKEY', 'DECIMAL', 'DEC', 'DECODE', 'DECRYPT_BINARY', 'DECRYPT_BIT', 'DECRYPT_CHAR', 'DECRYPT_DB', 'DECRYPT_DATAKEY_BIGINT', 'DECRYPT_DATAKEY_BIT', 'DECRYPT_DATAKEY_CLOB', 'DECRYPT_DATAKEY_DBCLOB', 'DECRYPT_DATAKEY_DECIMAL', 'DECRYPT_DATAKEY_INTEGER', 'DECRYPT_DATAKEY_VARCHAR', 'DECRYPT_DATAKEY_VARGRAPHIC', 'DEGREES', 'DIFFERENCE', 'DIGITS', 'DOUBLE_PRECISION', 'DOUBLE', 'DSN_XMLVALIDATE', 'EBCDIC_CHR', 'EBCDIC_STR', 'ENCRYPT_DATAKEY', 'ENCRYPT_TDES', 'EXP', 'EXTRACT', 'FLOAT', 'FLOOR', 'GENERATE_UNIQUE', 'GENERATE_UNIQUE_BINARY', 'GETHINT', 'GETVARIABLE', 'GRAPHIC', 'GREATEST', 'HASH', 'HASH_CRC32', 'HASH_MD5', 'HASH_SHA1', 'HASH_SHA256', 'HEX', 'HOUR', 'IDENTITY_VAL_LOCAL', 'IFNULL', 'INSERT', 'INSTR', 'INTEGER', 'INT', 'JULIAN_DAY', 'LAST_DAY', 'LCASE', 'LEAST', 'LEFT', 'LENGTH', 'LN', 'LOCATE', 'LOCATE_IN_STRING', 'LOG10', 'LOWER', 'LPAD', 'LTRIM', 'MAX', 'MAX_CARDINALITY', 'MICROSECOND', 'MIDNIGHT_SECONDS', 'MIN', 'MINUTE', 'MOD', 'MONTH', 'MONTHS_BETWEEN', 'MQREAD', 'MQREADCLOB', 'MQRECEIVE', 'MQRECEIVECLOB', 'MQSEND', 'MULTIPLY_ALT', 'NEXT_DAY', 'NEXT_MONTH', 'NORMALIZE_DECFLOAT', 'NORMALIZE_STRING', 'NULLIF', 'NVL', 'OVERLAY', 'PACK', 'POSITION', 'POSSTR', 'POWER', 'POW', 'QUANTIZE', 'QUARTER', 'RADIANS', 'RAISE_ERROR', 'RANDOM', 'RAND', 'REAL', 'REGEXP_COUNT', 'REGEXP_INSTR', 'REGEXP_LIKE', 'REGEXP_REPLACE', 'REGEXP_SUBSTR', 'REPEAT', 'REPLACE', 'RID', 'RIGHT', 'ROUND', 'ROUND_TIMESTAMP', 'ROWID', 'RPAD', 'RTRIM', 'SCORE', 'SECOND', 'SIGN', 'SIN', 'SINH', 'SMALLINT', 'SOUNDEX', 'SOAPHTTPC', 'SOAPHTTPV', 'SOAPHTTPNC', 'SOAPHTTPNV', 'SPACE', 'SQRT', 'STRIP', 'STRLEFT', 'STRPOS', 'STRRIGHT', 'SUBSTR', 'SUBSTRING', 'TAN', 'TANH', 'TIME', 'TIMESTAMP', 'TIMESTAMPADD', 'TIMESTAMPDIFF', 'TIMESTAMP_FORMAT', 'TIMESTAMP_ISO', 'TIMESTAMP_TZ', 'TO_CHAR', 'TO_CLOB', 'TO_DATE', 'TO_NUMBER', 'TOTALORDER', 'TO_TIMESTAMP', 'TRANSLATE', 'TRIM', 'TRIM_ARRAY', 'TRUNCATE', 'TRUNC', 'TRUNC_TIMESTAMP', 'UCASE', 'UNICODE', 'UNICODE_STR', 'UNISTR', 'UPPER', 'VALUE', 'VARBINARY', 'VARCHAR', 'VARCHAR9', 'VARCHAR_BIT_FORMAT', 'VARCHAR_FORMAT', 'VARGRAPHIC', 'VERIFY_GROUP_FOR_USER', 'VERIFY_ROLE_FOR_USER', 'VERIFY_TRUSTED_CONTEXT_ROLE_FOR_USER', 'WEEK', 'WEEK_ISO', 'WRAP', 'XMLATTRIBUTES', 'XMLCOMMENT', 'XMLCONCAT', 'XMLDOCUMENT', 'XMLELEMENT', 'XMLFOREST', 'XMLMODIFY', 'XMLNAMESPACES', 'XMLPARSE', 'XMLPI', 'XMLQUERY', 'XMLSERIALIZE', 'XMLTEXT', 'XMLXSROBJECTID', 'XSLTRANSFORM', 'YEAR'],\n  // https://www.ibm.com/docs/en/db2-for-zos/11?topic=functions-table\n  table: ['ADMIN_TASK_LIST', 'ADMIN_TASK_OUTPUT', 'ADMIN_TASK_STATUS', 'BLOCKING_THREADS', 'MQREADALL', 'MQREADALLCLOB', 'MQRECEIVEALL', 'MQRECEIVEALLCLOB', 'XMLTABLE'],\n  // https://www.ibm.com/docs/en/db2-for-zos/11?topic=functions-row\n  row: ['UNPACK'],\n  // https://www.ibm.com/docs/en/db2-for-zos/12?topic=expressions-olap-specification\n  olap: ['CUME_DIST', 'PERCENT_RANK', 'RANK', 'DENSE_RANK', 'NTILE', 'LAG', 'LEAD', 'ROW_NUMBER', 'FIRST_VALUE', 'LAST_VALUE', 'NTH_VALUE', 'RATIO_TO_REPORT'],\n  // Type casting\n  cast: ['CAST']\n});\n//# sourceMappingURL=db2.functions.js.map","import { flatKeywordList } from '../../utils.js';\nexport const keywords = flatKeywordList({\n  // https://www.ibm.com/docs/en/db2-for-zos/11?topic=words-reserved#db2z_reservedwords__newresword\n  standard: ['ALL', 'ALLOCATE', 'ALLOW', 'ALTERAND', 'ANY', 'AS', 'ARRAY', 'ARRAY_EXISTS', 'ASENSITIVE', 'ASSOCIATE', 'ASUTIME', 'AT', 'AUDIT', 'AUX', 'AUXILIARY', 'BEFORE', 'BEGIN', 'BETWEEN', 'BUFFERPOOL', 'BY', 'CAPTURE', 'CASCADED', 'CAST', 'CCSID', 'CHARACTER', 'CHECK', 'CLONE', 'CLUSTER', 'COLLECTION', 'COLLID', 'COLUMN', 'CONDITION', 'CONNECTION', 'CONSTRAINT', 'CONTENT', 'CONTINUE', 'CREATE', 'CUBE', 'CURRENT', 'CURRENT_DATE', 'CURRENT_LC_CTYPE', 'CURRENT_PATH', 'CURRENT_SCHEMA', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRVAL', 'CURSOR', 'DATA', 'DATABASE', 'DBINFO', 'DECLARE', 'DEFAULT', 'DESCRIPTOR', 'DETERMINISTIC', 'DISABLE', 'DISALLOW', 'DISTINCT', 'DO', 'DOCUMENT', 'DSSIZE', 'DYNAMIC', 'EDITPROC', 'ELSE', 'ELSEIF', 'ENCODING', 'ENCRYPTION', 'ENDING', 'END-EXEC', 'ERASE', 'ESCAPE', 'EXCEPTION', 'EXISTS', 'EXIT', 'EXTERNAL', 'FENCED', 'FIELDPROC', 'FINAL', 'FIRST', 'FOR', 'FREE', 'FULL', 'FUNCTION', 'GENERATED', 'GET', 'GLOBAL', 'GOTO', 'GROUP', 'HANDLER', 'HOLD', 'HOURS', 'IF', 'IMMEDIATE', 'IN', 'INCLUSIVE', 'INDEX', 'INHERIT', 'INNER', 'INOUT', 'INSENSITIVE', 'INTO', 'IS', 'ISOBID', 'ITERATE', 'JAR', 'KEEP', 'KEY', 'LANGUAGE', 'LAST', 'LC_CTYPE', 'LEAVE', 'LIKE', 'LOCAL', 'LOCALE', 'LOCATOR', 'LOCATORS', 'LOCK', 'LOCKMAX', 'LOCKSIZE', 'LONG', 'LOOP', 'MAINTAINED', 'MATERIALIZED', 'MICROSECONDS', 'MINUTEMINUTES', 'MODIFIES', 'MONTHS', 'NEXT', 'NEXTVAL', 'NO', 'NONE', 'NOT', 'NULL', 'NULLS', 'NUMPARTS', 'OBID', 'OF', 'OLD', 'ON', 'OPTIMIZATION', 'OPTIMIZE', 'ORDER', 'ORGANIZATION', 'OUT', 'OUTER', 'PACKAGE', 'PARAMETER', 'PART', 'PADDED', 'PARTITION', 'PARTITIONED', 'PARTITIONING', 'PATH', 'PIECESIZE', 'PERIOD', 'PLAN', 'PRECISION', 'PREVVAL', 'PRIOR', 'PRIQTY', 'PRIVILEGES', 'PROCEDURE', 'PROGRAM', 'PSID', 'PUBLIC', 'QUERY', 'QUERYNO', 'READS', 'REFERENCES', 'RESIGNAL', 'RESTRICT', 'RESULT', 'RESULT_SET_LOCATOR', 'RETURN', 'RETURNS', 'ROLE', 'ROLLUP', 'ROUND_CEILING', 'ROUND_DOWN', 'ROUND_FLOOR', 'ROUND_HALF_DOWN', 'ROUND_HALF_EVEN', 'ROUND_HALF_UP', 'ROUND_UP', 'ROW', 'ROWSET', 'SCHEMA', 'SCRATCHPAD', 'SECONDS', 'SECQTY', 'SECURITY', 'SEQUENCE', 'SENSITIVE', 'SESSION_USER', 'SIMPLE', 'SOME', 'SOURCE', 'SPECIFIC', 'STANDARD', 'STATIC', 'STATEMENT', 'STAY', 'STOGROUP', 'STORES', 'STYLE', 'SUMMARY', 'SYNONYM', 'SYSDATE', 'SYSTEM', 'SYSTIMESTAMP', 'TABLE', 'TABLESPACE', 'THEN', 'TO', 'TRIGGER', 'TYPE', 'UNDO', 'UNIQUE', 'UNTIL', 'USER', 'USING', 'VALIDPROC', 'VARIABLE', 'VARIANT', 'VCAT', 'VERSIONING', 'VIEW', 'VOLATILE', 'VOLUMES', 'WHILE', 'WLM', 'XMLEXISTS', 'XMLCAST', 'YEARS', 'ZONE']\n});\n//# sourceMappingURL=db2.keywords.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport Formatter from '../../formatter/Formatter.js';\nimport Tokenizer from '../../lexer/Tokenizer.js';\nimport { functions } from './db2.functions.js';\nimport { keywords } from './db2.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([// queries\n'WITH', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'PARTITION BY', 'ORDER BY [INPUT SEQUENCE]', 'FETCH FIRST', // Data modification\n// - insert:\n'INSERT INTO', 'VALUES', // - update:\n'UPDATE', 'SET', 'WHERE CURRENT OF', 'WITH {RR | RS | CS | UR}', // - delete:\n'DELETE FROM', // - truncate:\n'TRUNCATE [TABLE]', // - merge:\n'MERGE INTO', 'WHEN [NOT] MATCHED [THEN]', 'UPDATE SET', 'INSERT', // Data definition\n'CREATE [OR REPLACE] VIEW', 'CREATE [GLOBAL TEMPORARY] TABLE', 'DROP TABLE [HIERARCHY]', // alter table:\n'ALTER TABLE', 'ADD [COLUMN]', 'DROP [COLUMN]', 'RENAME [COLUMN]', 'ALTER [COLUMN]', 'SET DATA TYPE', // for alter column\n'SET NOT NULL', // for alter column\n'DROP {IDENTITY | EXPRESSION | DEFAULT | NOT NULL}', // for alter column\n// https://www.ibm.com/docs/en/db2-for-zos/11?topic=statements-list-supported\n'ALLOCATE CURSOR', 'ALTER DATABASE', 'ALTER FUNCTION', 'ALTER INDEX', 'ALTER MASK', 'ALTER PERMISSION', 'ALTER PROCEDURE', 'ALTER SEQUENCE', 'ALTER STOGROUP', 'ALTER TABLESPACE', 'ALTER TRIGGER', 'ALTER TRUSTED CONTEXT', 'ALTER VIEW', 'ASSOCIATE LOCATORS', 'BEGIN DECLARE SECTION', 'CALL', 'CLOSE', 'COMMENT', 'COMMIT', 'CONNECT', 'CREATE ALIAS', 'CREATE AUXILIARY TABLE', 'CREATE DATABASE', 'CREATE FUNCTION', 'CREATE GLOBAL TEMPORARY TABLE', 'CREATE INDEX', 'CREATE LOB TABLESPACE', 'CREATE MASK', 'CREATE PERMISSION', 'CREATE PROCEDURE', 'CREATE ROLE', 'CREATE SEQUENCE', 'CREATE STOGROUP', 'CREATE SYNONYM', 'CREATE TABLESPACE', 'CREATE TRIGGER', 'CREATE TRUSTED CONTEXT', 'CREATE TYPE', 'CREATE VARIABLE', 'DECLARE CURSOR', 'DECLARE GLOBAL TEMPORARY TABLE', 'DECLARE STATEMENT', 'DECLARE TABLE', 'DECLARE VARIABLE', 'DESCRIBE CURSOR', 'DESCRIBE INPUT', 'DESCRIBE OUTPUT', 'DESCRIBE PROCEDURE', 'DESCRIBE TABLE', 'DROP', 'END DECLARE SECTION', 'EXCHANGE', 'EXECUTE', 'EXECUTE IMMEDIATE', 'EXPLAIN', 'FETCH', 'FREE LOCATOR', 'GET DIAGNOSTICS', 'GRANT', 'HOLD LOCATOR', 'INCLUDE', 'LABEL', 'LOCK TABLE', 'OPEN', 'PREPARE', 'REFRESH', 'RELEASE', 'RELEASE SAVEPOINT', 'RENAME', 'REVOKE', 'ROLLBACK', 'SAVEPOINT', 'SELECT INTO', 'SET CONNECTION', 'SET CURRENT ACCELERATOR', 'SET CURRENT APPLICATION COMPATIBILITY', 'SET CURRENT APPLICATION ENCODING SCHEME', 'SET CURRENT DEBUG MODE', 'SET CURRENT DECFLOAT ROUNDING MODE', 'SET CURRENT DEGREE', 'SET CURRENT EXPLAIN MODE', 'SET CURRENT GET_ACCEL_ARCHIVE', 'SET CURRENT LOCALE LC_CTYPE', 'SET CURRENT MAINTAINED TABLE TYPES FOR OPTIMIZATION', 'SET CURRENT OPTIMIZATION HINT', 'SET CURRENT PACKAGE PATH', 'SET CURRENT PACKAGESET', 'SET CURRENT PRECISION', 'SET CURRENT QUERY ACCELERATION', 'SET CURRENT QUERY ACCELERATION WAITFORDATA', 'SET CURRENT REFRESH AGE', 'SET CURRENT ROUTINE VERSION', 'SET CURRENT RULES', 'SET CURRENT SQLID', 'SET CURRENT TEMPORAL BUSINESS_TIME', 'SET CURRENT TEMPORAL SYSTEM_TIME', 'SET ENCRYPTION PASSWORD', 'SET PATH', 'SET SCHEMA', 'SET SESSION TIME ZONE', 'SIGNAL', 'VALUES INTO', 'WHENEVER', // other\n'AFTER', 'GO', 'SET CURRENT SCHEMA']);\nconst reservedSetOperations = expandPhrases(['UNION [ALL]', 'EXCEPT [ALL]', 'INTERSECT [ALL]']);\nconst reservedJoins = expandPhrases(['JOIN', '{LEFT | RIGHT | FULL} [OUTER] JOIN', '{INNER | CROSS} JOIN']);\nconst reservedPhrases = expandPhrases(['ON DELETE', 'ON UPDATE', 'SET NULL', '{ROWS | RANGE} BETWEEN']); // https://www.ibm.com/support/knowledgecenter/en/ssw_ibm_i_72/db2/rbafzintro.htm\n\nexport default class Db2Formatter extends Formatter {\n  tokenizer() {\n    return new Tokenizer({\n      reservedClauses,\n      reservedSelect,\n      reservedSetOperations,\n      reservedJoins,\n      reservedPhrases,\n      reservedKeywords: keywords,\n      reservedFunctionNames: functions,\n      stringTypes: [{\n        quote: \"''-qq\",\n        prefixes: ['G', 'N', 'U&']\n      }, {\n        quote: \"''-raw\",\n        prefixes: ['X', 'BX', 'GX', 'UX'],\n        requirePrefix: true\n      }],\n      identTypes: [`\"\"-qq`],\n      paramTypes: {\n        positional: true,\n        named: [':']\n      },\n      paramChars: {\n        first: '@#$',\n        rest: '@#$'\n      },\n      operators: ['**', '¬=', '¬>', '¬<', '!>', '!<', '||']\n    });\n  }\n\n}\n//# sourceMappingURL=db2.formatter.js.map","import { flatKeywordList } from '../../utils.js';\nexport const functions = flatKeywordList({\n  // https://cwiki.apache.org/confluence/display/Hive/LanguageManual+UDF\n  math: ['ABS', 'ACOS', 'ASIN', 'ATAN', 'BIN', 'BROUND', 'CBRT', 'CEIL', 'CEILING', 'CONV', 'COS', 'DEGREES', // 'E',\n  'EXP', 'FACTORIAL', 'FLOOR', 'GREATEST', 'HEX', 'LEAST', 'LN', 'LOG', 'LOG10', 'LOG2', 'NEGATIVE', 'PI', 'PMOD', 'POSITIVE', 'POW', 'POWER', 'RADIANS', 'RAND', 'ROUND', 'SHIFTLEFT', 'SHIFTRIGHT', 'SHIFTRIGHTUNSIGNED', 'SIGN', 'SIN', 'SQRT', 'TAN', 'UNHEX', 'WIDTH_BUCKET'],\n  array: ['ARRAY_CONTAINS', 'MAP_KEYS', 'MAP_VALUES', 'SIZE', 'SORT_ARRAY'],\n  conversion: ['BINARY', 'CAST'],\n  date: ['ADD_MONTHS', 'DATE', 'DATE_ADD', 'DATE_FORMAT', 'DATE_SUB', 'DATEDIFF', 'DAY', 'DAYNAME', 'DAYOFMONTH', 'DAYOFYEAR', 'EXTRACT', 'FROM_UNIXTIME', 'FROM_UTC_TIMESTAMP', 'HOUR', 'LAST_DAY', 'MINUTE', 'MONTH', 'MONTHS_BETWEEN', 'NEXT_DAY', 'QUARTER', 'SECOND', 'TIMESTAMP', 'TO_DATE', 'TO_UTC_TIMESTAMP', 'TRUNC', 'UNIX_TIMESTAMP', 'WEEKOFYEAR', 'YEAR'],\n  conditional: ['ASSERT_TRUE', 'COALESCE', 'IF', 'ISNOTNULL', 'ISNULL', 'NULLIF', 'NVL'],\n  string: ['ASCII', 'BASE64', 'CHARACTER_LENGTH', 'CHR', 'CONCAT', 'CONCAT_WS', 'CONTEXT_NGRAMS', 'DECODE', 'ELT', 'ENCODE', 'FIELD', 'FIND_IN_SET', 'FORMAT_NUMBER', 'GET_JSON_OBJECT', 'IN_FILE', 'INITCAP', 'INSTR', 'LCASE', 'LENGTH', 'LEVENSHTEIN', 'LOCATE', 'LOWER', 'LPAD', 'LTRIM', 'NGRAMS', 'OCTET_LENGTH', 'PARSE_URL', 'PRINTF', 'QUOTE', 'REGEXP_EXTRACT', 'REGEXP_REPLACE', 'REPEAT', 'REVERSE', 'RPAD', 'RTRIM', 'SENTENCES', 'SOUNDEX', 'SPACE', 'SPLIT', 'STR_TO_MAP', 'SUBSTR', 'SUBSTRING', 'TRANSLATE', 'TRIM', 'UCASE', 'UNBASE64', 'UPPER'],\n  masking: ['MASK', 'MASK_FIRST_N', 'MASK_HASH', 'MASK_LAST_N', 'MASK_SHOW_FIRST_N', 'MASK_SHOW_LAST_N'],\n  misc: ['AES_DECRYPT', 'AES_ENCRYPT', 'CRC32', 'CURRENT_DATABASE', 'CURRENT_USER', 'HASH', 'JAVA_METHOD', 'LOGGED_IN_USER', 'MD5', 'REFLECT', 'SHA', 'SHA1', 'SHA2', 'SURROGATE_KEY', 'VERSION'],\n  aggregate: ['AVG', 'COLLECT_LIST', 'COLLECT_SET', 'CORR', 'COUNT', 'COVAR_POP', 'COVAR_SAMP', 'HISTOGRAM_NUMERIC', 'MAX', 'MIN', 'NTILE', 'PERCENTILE', 'PERCENTILE_APPROX', 'REGR_AVGX', 'REGR_AVGY', 'REGR_COUNT', 'REGR_INTERCEPT', 'REGR_R2', 'REGR_SLOPE', 'REGR_SXX', 'REGR_SXY', 'REGR_SYY', 'STDDEV_POP', 'STDDEV_SAMP', 'SUM', 'VAR_POP', 'VAR_SAMP', 'VARIANCE'],\n  table: ['EXPLODE', 'INLINE', 'JSON_TUPLE', 'PARSE_URL_TUPLE', 'POSEXPLODE', 'STACK'],\n  // https://cwiki.apache.org/confluence/display/Hive/LanguageManual+WindowingAndAnalytics\n  window: ['LEAD', 'LAG', 'FIRST_VALUE', 'LAST_VALUE', 'RANK', 'ROW_NUMBER', 'DENSE_RANK', 'CUME_DIST', 'PERCENT_RANK', 'NTILE'],\n  // Parameterized data types\n  // https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=82706456\n  // Though in reality Hive only supports parameters for DECIMAL(),\n  // it doesn't hurt to allow others in here as well.\n  dataTypes: ['DECIMAL', 'NUMERIC', 'VARCHAR', 'CHAR']\n});\n//# sourceMappingURL=hive.functions.js.map","import { flatKeywordList } from '../../utils.js';\nexport const keywords = flatKeywordList({\n  // https://cwiki.apache.org/confluence/display/hive/languagemanual+ddl\n  // Non-reserved keywords have proscribed meanings in. HiveQL, but can still be used as table or column names\n  nonReserved: ['ADD', 'ADMIN', 'AFTER', 'ANALYZE', 'ARCHIVE', 'ASC', 'BEFORE', 'BUCKET', 'BUCKETS', 'CASCADE', 'CHANGE', 'CLUSTER', 'CLUSTERED', 'CLUSTERSTATUS', 'COLLECTION', 'COLUMNS', 'COMMENT', 'COMPACT', 'COMPACTIONS', 'COMPUTE', 'CONCATENATE', 'CONTINUE', 'DATA', 'DATABASES', 'DATETIME', 'DAY', 'DBPROPERTIES', 'DEFERRED', 'DEFINED', 'DELIMITED', 'DEPENDENCY', 'DESC', 'DIRECTORIES', 'DIRECTORY', 'DISABLE', 'DISTRIBUTE', 'ELEM_TYPE', 'ENABLE', 'ESCAPED', 'EXCLUSIVE', 'EXPLAIN', 'EXPORT', 'FIELDS', 'FILE', 'FILEFORMAT', 'FIRST', 'FORMAT', 'FORMATTED', 'FUNCTIONS', 'HOLD_DDLTIME', 'HOUR', 'IDXPROPERTIES', 'IGNORE', 'INDEX', 'INDEXES', 'INPATH', 'INPUTDRIVER', 'INPUTFORMAT', 'ITEMS', 'JAR', 'KEYS', 'KEY_TYPE', 'LIMIT', 'LINES', 'LOAD', 'LOCATION', 'LOCK', 'LOCKS', 'LOGICAL', 'LONG', 'MAPJOIN', 'MATERIALIZED', 'METADATA', 'MINUS', 'MINUTE', 'MONTH', 'MSCK', 'NOSCAN', 'NO_DROP', 'OFFLINE', 'OPTION', 'OUTPUTDRIVER', 'OUTPUTFORMAT', 'OVERWRITE', 'OWNER', 'PARTITIONED', 'PARTITIONS', 'PLUS', 'PRETTY', 'PRINCIPALS', 'PROTECTION', 'PURGE', 'READ', 'READONLY', 'REBUILD', 'RECORDREADER', 'RECORDWRITER', 'RELOAD', 'RENAME', 'REPAIR', 'REPLACE', 'REPLICATION', 'RESTRICT', 'REWRITE', 'ROLE', 'ROLES', 'SCHEMA', 'SCHEMAS', 'SECOND', 'SEMI', 'SERDE', 'SERDEPROPERTIES', 'SERVER', 'SETS', 'SHARED', 'SHOW', 'SHOW_DATABASE', 'SKEWED', 'SORT', 'SORTED', 'SSL', 'STATISTICS', 'STORED', 'STREAMTABLE', 'STRING', 'STRUCT', 'TABLES', 'TBLPROPERTIES', 'TEMPORARY', 'TERMINATED', 'TINYINT', 'TOUCH', 'TRANSACTIONS', 'UNARCHIVE', 'UNDO', 'UNIONTYPE', 'UNLOCK', 'UNSET', 'UNSIGNED', 'URI', 'USE', 'UTC', 'UTCTIMESTAMP', 'VALUE_TYPE', 'VIEW', 'WHILE', 'YEAR', 'AUTOCOMMIT', 'ISOLATION', 'LEVEL', 'OFFSET', 'SNAPSHOT', 'TRANSACTION', 'WORK', 'WRITE', 'ABORT', 'KEY', 'LAST', 'NORELY', 'NOVALIDATE', 'NULLS', 'RELY', 'VALIDATE', 'DETAIL', 'DOW', 'EXPRESSION', 'OPERATOR', 'QUARTER', 'SUMMARY', 'VECTORIZATION', 'WEEK', 'YEARS', 'MONTHS', 'WEEKS', 'DAYS', 'HOURS', 'MINUTES', 'SECONDS', 'TIMESTAMPTZ', 'ZONE'],\n  reserved: ['ALL', 'ALTER', 'AND', 'ARRAY', 'AS', 'AUTHORIZATION', 'BETWEEN', 'BIGINT', 'BINARY', 'BOOLEAN', 'BOTH', 'BY', 'CASE', 'CAST', 'CHAR', 'COLUMN', 'CONF', 'CREATE', 'CROSS', 'CUBE', 'CURRENT', 'CURRENT_DATE', 'CURRENT_TIMESTAMP', 'CURSOR', 'DATABASE', 'DATE', 'DECIMAL', 'DELETE', 'DESCRIBE', 'DISTINCT', 'DOUBLE', 'DROP', 'ELSE', 'END', 'EXCHANGE', 'EXISTS', 'EXTENDED', 'EXTERNAL', 'FALSE', 'FETCH', 'FLOAT', 'FOLLOWING', 'FOR', 'FROM', 'FULL', 'FUNCTION', 'GRANT', 'GROUP', 'GROUPING', 'HAVING', 'IF', 'IMPORT', 'IN', 'INNER', 'INSERT', 'INT', 'INTERSECT', 'INTERVAL', 'INTO', 'IS', 'JOIN', 'LATERAL', 'LEFT', 'LESS', 'LIKE', 'LOCAL', 'MACRO', 'MAP', 'MORE', 'NONE', 'NOT', 'NULL', 'OF', 'ON', 'OR', 'ORDER', 'OUT', 'OUTER', 'OVER', 'PARTIALSCAN', 'PARTITION', 'PERCENT', 'PRECEDING', 'PRESERVE', 'PROCEDURE', 'RANGE', 'READS', 'REDUCE', 'REVOKE', 'RIGHT', 'ROLLUP', 'ROW', 'ROWS', 'SELECT', 'SET', 'SMALLINT', 'TABLE', 'TABLESAMPLE', 'THEN', 'TIMESTAMP', 'TO', 'TRANSFORM', 'TRIGGER', 'TRUE', 'TRUNCATE', 'UNBOUNDED', 'UNION', 'UNIQUEJOIN', 'UPDATE', 'USER', 'USING', 'UTC_TMESTAMP', 'VALUES', 'VARCHAR', 'WHEN', 'WHERE', 'WINDOW', 'WITH', 'COMMIT', 'ONLY', 'REGEXP', 'RLIKE', 'ROLLBACK', 'START', 'CACHE', 'CONSTRAINT', 'FOREIGN', 'PRIMARY', 'REFERENCES', 'DAYOFWEEK', 'EXTRACT', 'FLOOR', 'INTEGER', 'PRECISION', 'VIEWS', 'TIME', 'NUMERIC', 'SYNC'],\n  fileTypes: ['TEXTFILE', 'SEQUENCEFILE', 'ORC', 'CSV', 'TSV', 'PARQUET', 'AVRO', 'RCFILE', 'JSONFILE', 'INPUTFORMAT', 'OUTPUTFORMAT']\n});\n//# sourceMappingURL=hive.keywords.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport Formatter from '../../formatter/Formatter.js';\nimport Tokenizer from '../../lexer/Tokenizer.js';\nimport { functions } from './hive.functions.js';\nimport { keywords } from './hive.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([// queries\n'WITH', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'WINDOW', 'PARTITION BY', 'ORDER BY', 'SORT BY', 'CLUSTER BY', 'DISTRIBUTE BY', 'LIMIT', // Data manipulation\n// - insert:\n//   Hive does not actually support plain INSERT INTO, only INSERT INTO TABLE\n//   but it's a nuisance to not support it, as all other dialects do.\n'INSERT INTO [TABLE]', 'VALUES', // - update:\n'UPDATE', 'SET', // - delete:\n'DELETE FROM', // - truncate:\n'TRUNCATE [TABLE]', // - merge:\n'MERGE INTO', 'WHEN [NOT] MATCHED [THEN]', 'UPDATE SET', 'INSERT [VALUES]', // - insert overwrite directory:\n//   https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DML#LanguageManualDML-Writingdataintothefilesystemfromqueries\n'INSERT OVERWRITE [LOCAL] DIRECTORY', // - load:\n//   https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DML#LanguageManualDML-Loadingfilesintotables\n'LOAD DATA [LOCAL] INPATH', '[OVERWRITE] INTO TABLE', // Data definition\n'CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]', 'CREATE [TEMPORARY] [EXTERNAL] TABLE [IF NOT EXISTS]', 'DROP TABLE [IF EXISTS]', // - alter table:\n'ALTER TABLE', 'RENAME TO', // other\n'ALTER', 'CREATE', 'USE', 'DESCRIBE', 'DROP', 'FETCH', 'SET SCHEMA', // added\n'SHOW', // newline keywords\n'STORED AS', 'STORED BY', 'ROW FORMAT']);\nconst reservedSetOperations = expandPhrases(['UNION [ALL | DISTINCT]']);\nconst reservedJoins = expandPhrases(['JOIN', '{LEFT | RIGHT | FULL} [OUTER] JOIN', '{INNER | CROSS} JOIN', // non-standard joins\n'LEFT SEMI JOIN']);\nconst reservedPhrases = expandPhrases(['{ROWS | RANGE} BETWEEN']); // https://cwiki.apache.org/confluence/display/Hive/LanguageManual\n\nexport default class HiveFormatter extends Formatter {\n  tokenizer() {\n    return new Tokenizer({\n      reservedClauses,\n      reservedSelect,\n      reservedSetOperations,\n      reservedJoins,\n      reservedPhrases,\n      reservedKeywords: keywords,\n      reservedFunctionNames: functions,\n      extraParens: ['[]'],\n      stringTypes: ['\"\"-bs', \"''-bs\"],\n      identTypes: ['``'],\n      variableTypes: [{\n        quote: '{}',\n        prefixes: ['$'],\n        requirePrefix: true\n      }],\n      operators: ['%', '~', '^', '|', '&', '<=>', '==', '!', '||']\n    });\n  }\n\n}\n//# sourceMappingURL=hive.formatter.js.map","import { flatKeywordList } from '../../utils.js';\nexport const keywords = flatKeywordList({\n  // https://mariadb.com/kb/en/information-schema-keywords-table/\n  all: ['ACCESSIBLE', 'ACCOUNT', 'ACTION', 'ADD', 'ADMIN', 'AFTER', 'AGAINST', 'AGGREGATE', 'ALL', 'ALGORITHM', 'ALTER', 'ALWAYS', 'ANALYZE', 'AND', 'ANY', 'AS', 'ASC', 'ASCII', 'ASENSITIVE', 'AT', 'ATOMIC', 'AUTHORS', 'AUTO_INCREMENT', 'AUTOEXTEND_SIZE', 'AUTO', 'AVG', 'AVG_ROW_LENGTH', 'BACKUP', 'BEFORE', 'BEGIN', 'BETWEEN', 'BIGINT', 'BINARY', 'BINLOG', 'BIT', 'BLOB', 'BLOCK', 'BODY', 'BOOL', 'BOOLEAN', 'BOTH', 'BTREE', 'BY', 'BYTE', 'CACHE', 'CALL', 'CASCADE', 'CASCADED', 'CASE', 'CATALOG_NAME', 'CHAIN', 'CHANGE', 'CHANGED', 'CHAR', 'CHARACTER', 'CHARSET', 'CHECK', 'CHECKPOINT', 'CHECKSUM', 'CIPHER', 'CLASS_ORIGIN', 'CLIENT', 'CLOB', 'CLOSE', 'COALESCE', 'CODE', 'COLLATE', 'COLLATION', 'COLUMN', 'COLUMN_NAME', 'COLUMNS', 'COLUMN_ADD', 'COLUMN_CHECK', 'COLUMN_CREATE', 'COLUMN_DELETE', 'COLUMN_GET', 'COMMENT', 'COMMIT', 'COMMITTED', 'COMPACT', 'COMPLETION', 'COMPRESSED', 'CONCURRENT', 'CONDITION', 'CONNECTION', 'CONSISTENT', 'CONSTRAINT', 'CONSTRAINT_CATALOG', 'CONSTRAINT_NAME', 'CONSTRAINT_SCHEMA', 'CONTAINS', 'CONTEXT', 'CONTINUE', 'CONTRIBUTORS', 'CONVERT', 'CPU', 'CREATE', 'CROSS', 'CUBE', 'CURRENT', 'CURRENT_DATE', 'CURRENT_POS', 'CURRENT_ROLE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'CURSOR', 'CURSOR_NAME', 'CYCLE', 'DATA', 'DATABASE', 'DATABASES', 'DATAFILE', 'DATE', 'DATETIME', 'DAY', 'DAY_HOUR', 'DAY_MICROSECOND', 'DAY_MINUTE', 'DAY_SECOND', 'DEALLOCATE', 'DEC', 'DECIMAL', 'DECLARE', 'DEFAULT', 'DEFINER', 'DELAYED', 'DELAY_KEY_WRITE', 'DELETE', 'DELETE_DOMAIN_ID', 'DESC', 'DESCRIBE', 'DES_KEY_FILE', 'DETERMINISTIC', 'DIAGNOSTICS', 'DIRECTORY', 'DISABLE', 'DISCARD', 'DISK', 'DISTINCT', 'DISTINCTROW', 'DIV', 'DO', 'DOUBLE', 'DO_DOMAIN_IDS', 'DROP', 'DUAL', 'DUMPFILE', 'DUPLICATE', 'DYNAMIC', 'EACH', 'ELSE', 'ELSEIF', 'ELSIF', 'EMPTY', 'ENABLE', 'ENCLOSED', 'END', 'ENDS', 'ENGINE', 'ENGINES', 'ENUM', 'ERROR', 'ERRORS', 'ESCAPE', 'ESCAPED', 'EVENT', 'EVENTS', 'EVERY', 'EXAMINED', 'EXCEPT', 'EXCHANGE', 'EXCLUDE', 'EXECUTE', 'EXCEPTION', 'EXISTS', 'EXIT', 'EXPANSION', 'EXPIRE', 'EXPORT', 'EXPLAIN', 'EXTENDED', 'EXTENT_SIZE', 'FALSE', 'FAST', 'FAULTS', 'FEDERATED', 'FETCH', 'FIELDS', 'FILE', 'FIRST', 'FIXED', 'FLOAT', 'FLOAT4', 'FLOAT8', 'FLUSH', 'FOLLOWING', 'FOLLOWS', 'FOR', 'FORCE', 'FOREIGN', 'FORMAT', 'FOUND', 'FROM', 'FULL', 'FULLTEXT', 'FUNCTION', 'GENERAL', 'GENERATED', 'GET_FORMAT', 'GET', 'GLOBAL', 'GOTO', 'GRANT', 'GRANTS', 'GROUP', 'HANDLER', 'HARD', 'HASH', 'HAVING', 'HELP', 'HIGH_PRIORITY', 'HISTORY', 'HOST', 'HOSTS', 'HOUR', 'HOUR_MICROSECOND', 'HOUR_MINUTE', 'HOUR_SECOND', // 'ID', // conflicts with common column name\n  'IDENTIFIED', 'IF', 'IGNORE', 'IGNORED', 'IGNORE_DOMAIN_IDS', 'IGNORE_SERVER_IDS', 'IMMEDIATE', 'IMPORT', 'INTERSECT', 'IN', 'INCREMENT', 'INDEX', 'INDEXES', 'INFILE', 'INITIAL_SIZE', 'INNER', 'INOUT', 'INSENSITIVE', 'INSERT', 'INSERT_METHOD', 'INSTALL', 'INT', 'INT1', 'INT2', 'INT3', 'INT4', 'INT8', 'INTEGER', 'INTERVAL', 'INVISIBLE', 'INTO', 'IO', 'IO_THREAD', 'IPC', 'IS', 'ISOLATION', 'ISOPEN', 'ISSUER', 'ITERATE', 'INVOKER', 'JOIN', 'JSON', 'JSON_TABLE', 'KEY', 'KEYS', 'KEY_BLOCK_SIZE', 'KILL', 'LANGUAGE', 'LAST', 'LAST_VALUE', 'LASTVAL', 'LEADING', 'LEAVE', 'LEAVES', 'LEFT', 'LESS', 'LEVEL', 'LIKE', 'LIMIT', 'LINEAR', 'LINES', 'LIST', 'LOAD', 'LOCAL', 'LOCALTIME', 'LOCALTIMESTAMP', 'LOCK', 'LOCKED', 'LOCKS', 'LOGFILE', 'LOGS', 'LONG', 'LONGBLOB', 'LONGTEXT', 'LOOP', 'LOW_PRIORITY', 'MASTER', 'MASTER_CONNECT_RETRY', 'MASTER_DELAY', 'MASTER_GTID_POS', 'MASTER_HOST', 'MASTER_LOG_FILE', 'MASTER_LOG_POS', 'MASTER_PASSWORD', 'MASTER_PORT', 'MASTER_SERVER_ID', 'MASTER_SSL', 'MASTER_SSL_CA', 'MASTER_SSL_CAPATH', 'MASTER_SSL_CERT', 'MASTER_SSL_CIPHER', 'MASTER_SSL_CRL', 'MASTER_SSL_CRLPATH', 'MASTER_SSL_KEY', 'MASTER_SSL_VERIFY_SERVER_CERT', 'MASTER_USER', 'MASTER_USE_GTID', 'MASTER_HEARTBEAT_PERIOD', 'MATCH', 'MAX_CONNECTIONS_PER_HOUR', 'MAX_QUERIES_PER_HOUR', 'MAX_ROWS', 'MAX_SIZE', 'MAX_STATEMENT_TIME', 'MAX_UPDATES_PER_HOUR', 'MAX_USER_CONNECTIONS', 'MAXVALUE', 'MEDIUM', 'MEDIUMBLOB', 'MEDIUMINT', 'MEDIUMTEXT', 'MEMORY', 'MERGE', 'MESSAGE_TEXT', 'MICROSECOND', 'MIDDLEINT', 'MIGRATE', 'MINUS', 'MINUTE', 'MINUTE_MICROSECOND', 'MINUTE_SECOND', 'MINVALUE', 'MIN_ROWS', 'MOD', 'MODE', 'MODIFIES', 'MODIFY', 'MONITOR', 'MONTH', 'MUTEX', 'MYSQL', 'MYSQL_ERRNO', 'NAME', 'NAMES', 'NATIONAL', 'NATURAL', 'NCHAR', 'NESTED', 'NEVER', 'NEW', 'NEXT', 'NEXTVAL', 'NO', 'NOMAXVALUE', 'NOMINVALUE', 'NOCACHE', 'NOCYCLE', 'NO_WAIT', 'NOWAIT', 'NODEGROUP', 'NONE', 'NOT', 'NOTFOUND', 'NO_WRITE_TO_BINLOG', 'NULL', 'NUMBER', 'NUMERIC', 'NVARCHAR', 'OF', 'OFFSET', 'OLD_PASSWORD', 'ON', 'ONE', 'ONLINE', 'ONLY', 'OPEN', 'OPTIMIZE', 'OPTIONS', 'OPTION', 'OPTIONALLY', 'OR', 'ORDER', 'ORDINALITY', 'OTHERS', 'OUT', 'OUTER', 'OUTFILE', 'OVER', 'OVERLAPS', 'OWNER', 'PACKAGE', 'PACK_KEYS', 'PAGE', 'PAGE_CHECKSUM', 'PARSER', 'PARSE_VCOL_EXPR', 'PATH', 'PERIOD', 'PARTIAL', 'PARTITION', 'PARTITIONING', 'PARTITIONS', 'PASSWORD', 'PERSISTENT', 'PHASE', 'PLUGIN', 'PLUGINS', 'PORT', 'PORTION', 'PRECEDES', 'PRECEDING', 'PRECISION', 'PREPARE', 'PRESERVE', 'PREV', 'PREVIOUS', 'PRIMARY', 'PRIVILEGES', 'PROCEDURE', 'PROCESS', 'PROCESSLIST', 'PROFILE', 'PROFILES', 'PROXY', 'PURGE', 'QUARTER', 'QUERY', 'QUICK', 'RAISE', 'RANGE', 'RAW', 'READ', 'READ_ONLY', 'READ_WRITE', 'READS', 'REAL', 'REBUILD', 'RECOVER', 'RECURSIVE', 'REDO_BUFFER_SIZE', 'REDOFILE', 'REDUNDANT', 'REFERENCES', 'REGEXP', 'RELAY', 'RELAYLOG', 'RELAY_LOG_FILE', 'RELAY_LOG_POS', 'RELAY_THREAD', 'RELEASE', 'RELOAD', 'REMOVE', 'RENAME', 'REORGANIZE', 'REPAIR', 'REPEATABLE', 'REPLACE', 'REPLAY', 'REPLICA', 'REPLICAS', 'REPLICA_POS', 'REPLICATION', 'REPEAT', 'REQUIRE', 'RESET', 'RESIGNAL', 'RESTART', 'RESTORE', 'RESTRICT', 'RESUME', 'RETURNED_SQLSTATE', 'RETURN', 'RETURNING', 'RETURNS', 'REUSE', 'REVERSE', 'REVOKE', 'RIGHT', 'RLIKE', 'ROLE', 'ROLLBACK', 'ROLLUP', 'ROUTINE', 'ROW', 'ROWCOUNT', 'ROWNUM', 'ROWS', 'ROWTYPE', 'ROW_COUNT', 'ROW_FORMAT', 'RTREE', 'SAVEPOINT', 'SCHEDULE', 'SCHEMA', 'SCHEMA_NAME', 'SCHEMAS', 'SECOND', 'SECOND_MICROSECOND', 'SECURITY', 'SELECT', 'SENSITIVE', 'SEPARATOR', 'SEQUENCE', 'SERIAL', 'SERIALIZABLE', 'SESSION', 'SERVER', 'SET', 'SETVAL', 'SHARE', 'SHOW', 'SHUTDOWN', 'SIGNAL', 'SIGNED', 'SIMPLE', 'SKIP', 'SLAVE', 'SLAVES', 'SLAVE_POS', 'SLOW', 'SNAPSHOT', 'SMALLINT', 'SOCKET', 'SOFT', 'SOME', 'SONAME', 'SOUNDS', 'SOURCE', 'STAGE', 'STORED', 'SPATIAL', 'SPECIFIC', 'REF_SYSTEM_ID', 'SQL', 'SQLEXCEPTION', 'SQLSTATE', 'SQLWARNING', 'SQL_BIG_RESULT', 'SQL_BUFFER_RESULT', 'SQL_CACHE', 'SQL_CALC_FOUND_ROWS', 'SQL_NO_CACHE', 'SQL_SMALL_RESULT', 'SQL_THREAD', 'SQL_TSI_SECOND', 'SQL_TSI_MINUTE', 'SQL_TSI_HOUR', 'SQL_TSI_DAY', 'SQL_TSI_WEEK', 'SQL_TSI_MONTH', 'SQL_TSI_QUARTER', 'SQL_TSI_YEAR', 'SSL', 'START', 'STARTING', 'STARTS', 'STATEMENT', 'STATS_AUTO_RECALC', 'STATS_PERSISTENT', 'STATS_SAMPLE_PAGES', 'STATUS', 'STOP', 'STORAGE', 'STRAIGHT_JOIN', 'STRING', 'SUBCLASS_ORIGIN', 'SUBJECT', 'SUBPARTITION', 'SUBPARTITIONS', 'SUPER', 'SUSPEND', 'SWAPS', 'SWITCHES', 'SYSDATE', 'SYSTEM', 'SYSTEM_TIME', 'TABLE', 'TABLE_NAME', 'TABLES', 'TABLESPACE', 'TABLE_CHECKSUM', 'TEMPORARY', 'TEMPTABLE', 'TERMINATED', 'TEXT', 'THAN', 'THEN', 'TIES', 'TIME', 'TIMESTAMP', 'TIMESTAMPADD', 'TIMESTAMPDIFF', 'TINYBLOB', 'TINYINT', 'TINYTEXT', 'TO', 'TRAILING', 'TRANSACTION', 'TRANSACTIONAL', 'THREADS', 'TRIGGER', 'TRIGGERS', 'TRUE', 'TRUNCATE', 'TYPE', 'TYPES', 'UNBOUNDED', 'UNCOMMITTED', 'UNDEFINED', 'UNDO_BUFFER_SIZE', 'UNDOFILE', 'UNDO', 'UNICODE', 'UNION', 'UNIQUE', 'UNKNOWN', 'UNLOCK', 'UNINSTALL', 'UNSIGNED', 'UNTIL', 'UPDATE', 'UPGRADE', 'USAGE', 'USE', 'USER', 'USER_RESOURCES', 'USE_FRM', 'USING', 'UTC_DATE', 'UTC_TIME', 'UTC_TIMESTAMP', 'VALUE', 'VALUES', 'VARBINARY', 'VARCHAR', 'VARCHARACTER', 'VARCHAR2', 'VARIABLES', 'VARYING', 'VIA', 'VIEW', 'VIRTUAL', 'VISIBLE', 'VERSIONING', 'WAIT', 'WARNINGS', 'WEEK', 'WEIGHT_STRING', 'WHEN', 'WHERE', 'WHILE', 'WINDOW', 'WITH', 'WITHIN', 'WITHOUT', 'WORK', 'WRAPPER', 'WRITE', 'X509', 'XOR', 'XA', 'XML', 'YEAR', 'YEAR_MONTH', 'ZEROFILL']\n});\n//# sourceMappingURL=mariadb.keywords.js.map","import { flatKeywordList } from '../../utils.js';\nexport const functions = flatKeywordList({\n  // https://mariadb.com/kb/en/information-schema-sql_functions-table/\n  all: ['ADDDATE', 'ADD_MONTHS', 'BIT_AND', 'BIT_OR', 'BIT_XOR', 'CAST', 'COUNT', 'CUME_DIST', 'CURDATE', 'CURTIME', 'DATE_ADD', 'DATE_SUB', 'DATE_FORMAT', 'DECODE', 'DENSE_RANK', 'EXTRACT', 'FIRST_VALUE', 'GROUP_CONCAT', 'JSON_ARRAYAGG', 'JSON_OBJECTAGG', 'LAG', 'LEAD', 'MAX', 'MEDIAN', 'MID', 'MIN', 'NOW', 'NTH_VALUE', 'NTILE', 'POSITION', 'PERCENT_RANK', 'PERCENTILE_CONT', 'PERCENTILE_DISC', 'RANK', 'ROW_NUMBER', 'SESSION_USER', 'STD', 'STDDEV', 'STDDEV_POP', 'STDDEV_SAMP', 'SUBDATE', 'SUBSTR', 'SUBSTRING', 'SUM', 'SYSTEM_USER', 'TRIM', 'TRIM_ORACLE', 'VARIANCE', 'VAR_POP', 'VAR_SAMP', 'ABS', 'ACOS', 'ADDTIME', 'AES_DECRYPT', 'AES_ENCRYPT', 'ASIN', 'ATAN', 'ATAN2', 'BENCHMARK', 'BIN', 'BINLOG_GTID_POS', 'BIT_COUNT', 'BIT_LENGTH', 'CEIL', 'CEILING', 'CHARACTER_LENGTH', 'CHAR_LENGTH', 'CHR', 'COERCIBILITY', 'COLUMN_CHECK', 'COLUMN_EXISTS', 'COLUMN_LIST', 'COLUMN_JSON', 'COMPRESS', 'CONCAT', 'CONCAT_OPERATOR_ORACLE', 'CONCAT_WS', 'CONNECTION_ID', 'CONV', 'CONVERT_TZ', 'COS', 'COT', 'CRC32', 'DATEDIFF', 'DAYNAME', 'DAYOFMONTH', 'DAYOFWEEK', 'DAYOFYEAR', 'DEGREES', 'DECODE_HISTOGRAM', 'DECODE_ORACLE', 'DES_DECRYPT', 'DES_ENCRYPT', 'ELT', 'ENCODE', 'ENCRYPT', 'EXP', 'EXPORT_SET', 'EXTRACTVALUE', 'FIELD', 'FIND_IN_SET', 'FLOOR', 'FORMAT', 'FOUND_ROWS', 'FROM_BASE64', 'FROM_DAYS', 'FROM_UNIXTIME', 'GET_LOCK', 'GREATEST', 'HEX', 'IFNULL', 'INSTR', 'ISNULL', 'IS_FREE_LOCK', 'IS_USED_LOCK', 'JSON_ARRAY', 'JSON_ARRAY_APPEND', 'JSON_ARRAY_INSERT', 'JSON_COMPACT', 'JSON_CONTAINS', 'JSON_CONTAINS_PATH', 'JSON_DEPTH', 'JSON_DETAILED', 'JSON_EXISTS', 'JSON_EXTRACT', 'JSON_INSERT', 'JSON_KEYS', 'JSON_LENGTH', 'JSON_LOOSE', 'JSON_MERGE', 'JSON_MERGE_PATCH', 'JSON_MERGE_PRESERVE', 'JSON_QUERY', 'JSON_QUOTE', 'JSON_OBJECT', 'JSON_REMOVE', 'JSON_REPLACE', 'JSON_SET', 'JSON_SEARCH', 'JSON_TYPE', 'JSON_UNQUOTE', 'JSON_VALID', 'JSON_VALUE', 'LAST_DAY', 'LAST_INSERT_ID', 'LCASE', 'LEAST', 'LENGTH', 'LENGTHB', 'LN', 'LOAD_FILE', 'LOCATE', 'LOG', 'LOG10', 'LOG2', 'LOWER', 'LPAD', 'LPAD_ORACLE', 'LTRIM', 'LTRIM_ORACLE', 'MAKEDATE', 'MAKETIME', 'MAKE_SET', 'MASTER_GTID_WAIT', 'MASTER_POS_WAIT', 'MD5', 'MONTHNAME', 'NAME_CONST', 'NVL', 'NVL2', 'OCT', 'OCTET_LENGTH', 'ORD', 'PERIOD_ADD', 'PERIOD_DIFF', 'PI', 'POW', 'POWER', 'QUOTE', 'REGEXP_INSTR', 'REGEXP_REPLACE', 'REGEXP_SUBSTR', 'RADIANS', 'RAND', 'RELEASE_ALL_LOCKS', 'RELEASE_LOCK', 'REPLACE_ORACLE', 'REVERSE', 'ROUND', 'RPAD', 'RPAD_ORACLE', 'RTRIM', 'RTRIM_ORACLE', 'SEC_TO_TIME', 'SHA', 'SHA1', 'SHA2', 'SIGN', 'SIN', 'SLEEP', 'SOUNDEX', 'SPACE', 'SQRT', 'STRCMP', 'STR_TO_DATE', 'SUBSTR_ORACLE', 'SUBSTRING_INDEX', 'SUBTIME', 'SYS_GUID', 'TAN', 'TIMEDIFF', 'TIME_FORMAT', 'TIME_TO_SEC', 'TO_BASE64', 'TO_CHAR', 'TO_DAYS', 'TO_SECONDS', 'UCASE', 'UNCOMPRESS', 'UNCOMPRESSED_LENGTH', 'UNHEX', 'UNIX_TIMESTAMP', 'UPDATEXML', 'UPPER', 'UUID', 'UUID_SHORT', 'VERSION', 'WEEKDAY', 'WEEKOFYEAR', 'WSREP_LAST_WRITTEN_GTID', 'WSREP_LAST_SEEN_GTID', 'WSREP_SYNC_WAIT_UPTO_GTID', 'YEARWEEK', // CASE expression shorthands\n  'COALESCE', 'NULLIF', // Data types with parameters\n  // https://mariadb.com/kb/en/data-types/\n  'TINYINT', 'SMALLINT', 'MEDIUMINT', 'INT', 'INTEGER', 'BIGINT', 'DECIMAL', 'DEC', 'NUMERIC', 'FIXED', // 'NUMBER', // ?? In oracle mode only\n  'FLOAT', 'DOUBLE', 'DOUBLE PRECISION', 'REAL', 'BIT', 'BINARY', 'BLOB', 'CHAR', 'NATIONAL CHAR', 'CHAR BYTE', 'ENUM', 'VARBINARY', 'VARCHAR', 'NATIONAL VARCHAR', // 'SET' // handled as special-case in postProcess\n  'TIME', 'DATETIME', 'TIMESTAMP', 'YEAR']\n});\n//# sourceMappingURL=mariadb.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport Formatter from '../../formatter/Formatter.js';\nimport Tokenizer from '../../lexer/Tokenizer.js';\nimport { EOF_TOKEN, isToken, TokenType } from '../../lexer/token.js';\nimport { keywords } from './mariadb.keywords.js';\nimport { functions } from './mariadb.functions.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT | DISTINCTROW]']);\nconst reservedClauses = expandPhrases([// queries\n'WITH [RECURSIVE]', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'PARTITION BY', 'ORDER BY', 'LIMIT', 'OFFSET', 'FETCH {FIRST | NEXT}', // Data manipulation\n// - insert:\n'INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]', 'REPLACE [LOW_PRIORITY | DELAYED] [INTO]', 'VALUES', // - update:\n'UPDATE [LOW_PRIORITY] [IGNORE]', 'SET', // - delete:\n'DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM', // - truncate:\n'TRUNCATE [TABLE]', // Data definition\n'CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]', 'CREATE [OR REPLACE] [TEMPORARY] TABLE [IF NOT EXISTS]', 'DROP [TEMPORARY] TABLE [IF EXISTS]', // - alter table:\n'ALTER [ONLINE] [IGNORE] TABLE [IF EXISTS]', 'ADD [COLUMN] [IF NOT EXISTS]', '{CHANGE | MODIFY} [COLUMN] [IF EXISTS]', 'DROP [COLUMN] [IF EXISTS]', 'RENAME [TO]', 'RENAME COLUMN', 'ALTER [COLUMN]', '{SET | DROP} DEFAULT', // for alter column\n'SET {VISIBLE | INVISIBLE}', // for alter column\n// https://mariadb.com/docs/reference/mdb/sql-statements/\n'ALTER DATABASE', 'ALTER DATABASE COMMENT', 'ALTER EVENT', 'ALTER FUNCTION', 'ALTER PROCEDURE', 'ALTER SCHEMA', 'ALTER SCHEMA COMMENT', 'ALTER SEQUENCE', 'ALTER SERVER', 'ALTER USER', 'ALTER VIEW', 'ANALYZE', 'ANALYZE TABLE', 'BACKUP LOCK', 'BACKUP STAGE', 'BACKUP UNLOCK', 'BEGIN', 'BINLOG', 'CACHE INDEX', 'CALL', 'CHANGE MASTER TO', 'CHECK TABLE', 'CHECK VIEW', 'CHECKSUM TABLE', 'COMMIT', 'CREATE AGGREGATE FUNCTION', 'CREATE DATABASE', 'CREATE EVENT', 'CREATE FUNCTION', 'CREATE INDEX', 'CREATE PROCEDURE', 'CREATE ROLE', 'CREATE SEQUENCE', 'CREATE SERVER', 'CREATE SPATIAL INDEX', 'CREATE TRIGGER', 'CREATE UNIQUE INDEX', 'CREATE USER', 'DEALLOCATE PREPARE', 'DESCRIBE', 'DO', 'DROP DATABASE', 'DROP EVENT', 'DROP FUNCTION', 'DROP INDEX', 'DROP PREPARE', 'DROP PROCEDURE', 'DROP ROLE', 'DROP SEQUENCE', 'DROP SERVER', 'DROP TRIGGER', 'DROP USER', 'DROP VIEW', 'EXECUTE', 'EXPLAIN', 'FLUSH', 'GET DIAGNOSTICS', 'GET DIAGNOSTICS CONDITION', 'GRANT', 'HANDLER', 'HELP', 'INSTALL PLUGIN', 'INSTALL SONAME', 'KILL', 'LOAD DATA INFILE', 'LOAD INDEX INTO CACHE', 'LOAD XML INFILE', 'LOCK TABLE', 'OPTIMIZE TABLE', 'PREPARE', 'PURGE BINARY LOGS', 'PURGE MASTER LOGS', 'RELEASE SAVEPOINT', 'RENAME TABLE', 'RENAME USER', 'REPAIR TABLE', 'REPAIR VIEW', 'RESET MASTER', 'RESET QUERY CACHE', 'RESET REPLICA', 'RESET SLAVE', 'RESIGNAL', 'RETURNING', 'REVOKE', 'ROLLBACK', 'SAVEPOINT', 'SET CHARACTER SET', 'SET DEFAULT ROLE', 'SET GLOBAL TRANSACTION', 'SET NAMES', 'SET PASSWORD', 'SET ROLE', 'SET STATEMENT', 'SET TRANSACTION', 'SHOW', 'SHOW ALL REPLICAS STATUS', 'SHOW ALL SLAVES STATUS', 'SHOW AUTHORS', 'SHOW BINARY LOGS', 'SHOW BINLOG EVENTS', 'SHOW BINLOG STATUS', 'SHOW CHARACTER SET', 'SHOW CLIENT_STATISTICS', 'SHOW COLLATION', 'SHOW COLUMNS', 'SHOW CONTRIBUTORS', 'SHOW CREATE DATABASE', 'SHOW CREATE EVENT', 'SHOW CREATE FUNCTION', 'SHOW CREATE PACKAGE', 'SHOW CREATE PACKAGE BODY', 'SHOW CREATE PROCEDURE', 'SHOW CREATE SEQUENCE', 'SHOW CREATE TABLE', 'SHOW CREATE TRIGGER', 'SHOW CREATE USER', 'SHOW CREATE VIEW', 'SHOW DATABASES', 'SHOW ENGINE', 'SHOW ENGINE INNODB STATUS', 'SHOW ENGINES', 'SHOW ERRORS', 'SHOW EVENTS', 'SHOW EXPLAIN', 'SHOW FUNCTION CODE', 'SHOW FUNCTION STATUS', 'SHOW GRANTS', 'SHOW INDEX', 'SHOW INDEXES', 'SHOW INDEX_STATISTICS', 'SHOW KEYS', 'SHOW LOCALES', 'SHOW MASTER LOGS', 'SHOW MASTER STATUS', 'SHOW OPEN TABLES', 'SHOW PACKAGE BODY CODE', 'SHOW PACKAGE BODY STATUS', 'SHOW PACKAGE STATUS', 'SHOW PLUGINS', 'SHOW PLUGINS SONAME', 'SHOW PRIVILEGES', 'SHOW PROCEDURE CODE', 'SHOW PROCEDURE STATUS', 'SHOW PROCESSLIST', 'SHOW PROFILE', 'SHOW PROFILES', 'SHOW QUERY_RESPONSE_TIME', 'SHOW RELAYLOG EVENTS', 'SHOW REPLICA', 'SHOW REPLICA HOSTS', 'SHOW REPLICA STATUS', 'SHOW SCHEMAS', 'SHOW SLAVE', 'SHOW SLAVE HOSTS', 'SHOW SLAVE STATUS', 'SHOW STATUS', 'SHOW STORAGE ENGINES', 'SHOW TABLE STATUS', 'SHOW TABLES', 'SHOW TRIGGERS', 'SHOW USER_STATISTICS', 'SHOW VARIABLES', 'SHOW WARNINGS', 'SHOW WSREP_MEMBERSHIP', 'SHOW WSREP_STATUS', 'SHUTDOWN', 'SIGNAL', 'START ALL REPLICAS', 'START ALL SLAVES', 'START REPLICA', 'START SLAVE', 'START TRANSACTION', 'STOP ALL REPLICAS', 'STOP ALL SLAVES', 'STOP REPLICA', 'STOP SLAVE', 'UNINSTALL PLUGIN', 'UNINSTALL SONAME', 'UNLOCK TABLE', 'USE', 'XA BEGIN', 'XA COMMIT', 'XA END', 'XA PREPARE', 'XA RECOVER', 'XA ROLLBACK', 'XA START']);\nconst reservedSetOperations = expandPhrases(['UNION [ALL | DISTINCT]', 'EXCEPT [ALL | DISTINCT]', 'INTERSECT [ALL | DISTINCT]', 'MINUS [ALL | DISTINCT]']);\nconst reservedJoins = expandPhrases(['JOIN', '{LEFT | RIGHT} [OUTER] JOIN', '{INNER | CROSS} JOIN', 'NATURAL JOIN', 'NATURAL {LEFT | RIGHT} [OUTER] JOIN', // non-standard joins\n'STRAIGHT_JOIN']);\nconst reservedPhrases = expandPhrases(['ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]', 'CHARACTER SET', '{ROWS | RANGE} BETWEEN']); // For reference: https://mariadb.com/kb/en/sql-statements-structure/\n\nexport default class MariaDbFormatter extends Formatter {\n  tokenizer() {\n    return new Tokenizer({\n      reservedClauses,\n      reservedSelect,\n      reservedSetOperations,\n      reservedJoins,\n      reservedPhrases,\n      supportsXor: true,\n      reservedKeywords: keywords,\n      reservedFunctionNames: functions,\n      // TODO: support _ char set prefixes such as _utf8, _latin1, _binary, _utf8mb4, etc.\n      stringTypes: ['\"\"-qq-bs', \"''-qq-bs\", {\n        quote: \"''-raw\",\n        prefixes: ['B', 'X'],\n        requirePrefix: true\n      }],\n      identTypes: ['``'],\n      identChars: {\n        first: '$',\n        rest: '$',\n        allowFirstCharNumber: true\n      },\n      variableTypes: [{\n        regex: '@@?[A-Za-z0-9_.$]+'\n      }, {\n        quote: '\"\"-qq-bs',\n        prefixes: ['@'],\n        requirePrefix: true\n      }, {\n        quote: \"''-qq-bs\",\n        prefixes: ['@'],\n        requirePrefix: true\n      }, {\n        quote: '``',\n        prefixes: ['@'],\n        requirePrefix: true\n      }],\n      paramTypes: {\n        positional: true\n      },\n      lineCommentTypes: ['--', '#'],\n      operators: ['%', ':=', '&', '|', '^', '~', '<<', '>>', '<=>', '&&', '||', '!'],\n      postProcess\n    });\n  }\n\n}\n\nfunction postProcess(tokens) {\n  return tokens.map((token, i) => {\n    const nextToken = tokens[i + 1] || EOF_TOKEN;\n\n    if (isToken.SET(token) && nextToken.text === '(') {\n      // This is SET datatype, not SET statement\n      return { ...token,\n        type: TokenType.RESERVED_FUNCTION_NAME\n      };\n    }\n\n    return token;\n  });\n}\n//# sourceMappingURL=mariadb.formatter.js.map","import { flatKeywordList } from '../../utils.js';\nexport const keywords = flatKeywordList({\n  // https://dev.mysql.com/doc/refman/8.0/en/keywords.html\n  all: ['ACCESSIBLE', // (R)\n  'ACCOUNT', 'ACTION', 'ACTIVE', 'ADD', // (R)\n  'ADMIN', 'AFTER', 'AGAINST', 'AGGREGATE', 'ALGORITHM', 'ALL', // (R)\n  'ALTER', // (R)\n  'ALWAYS', 'ANALYZE', // (R)\n  'AND', // (R)\n  'ANY', 'ARRAY', 'AS', // (R)\n  'ASC', // (R)\n  'ASCII', 'ASENSITIVE', // (R)\n  'AT', 'ATTRIBUTE', 'AUTHENTICATION', 'AUTOEXTEND_SIZE', 'AUTO_INCREMENT', 'AVG', 'AVG_ROW_LENGTH', 'BACKUP', 'BEFORE', // (R)\n  'BEGIN', 'BETWEEN', // (R)\n  'BIGINT', // (R)\n  'BINARY', // (R)\n  'BINLOG', 'BIT', 'BLOB', // (R)\n  'BLOCK', 'BOOL', 'BOOLEAN', 'BOTH', // (R)\n  'BTREE', 'BUCKETS', 'BY', // (R)\n  'BYTE', 'CACHE', 'CALL', // (R)\n  'CASCADE', // (R)\n  'CASCADED', 'CASE', // (R)\n  'CATALOG_NAME', 'CHAIN', 'CHALLENGE_RESPONSE', 'CHANGE', // (R)\n  'CHANGED', 'CHANNEL', 'CHAR', // (R)\n  'CHARACTER', // (R)\n  'CHARSET', 'CHECK', // (R)\n  'CHECKSUM', 'CIPHER', 'CLASS_ORIGIN', 'CLIENT', 'CLONE', 'CLOSE', 'COALESCE', 'CODE', 'COLLATE', // (R)\n  'COLLATION', 'COLUMN', // (R)\n  'COLUMNS', 'COLUMN_FORMAT', 'COLUMN_NAME', 'COMMENT', 'COMMIT', 'COMMITTED', 'COMPACT', 'COMPLETION', 'COMPONENT', 'COMPRESSED', 'COMPRESSION', 'CONCURRENT', 'CONDITION', // (R)\n  'CONNECTION', 'CONSISTENT', 'CONSTRAINT', // (R)\n  'CONSTRAINT_CATALOG', 'CONSTRAINT_NAME', 'CONSTRAINT_SCHEMA', 'CONTAINS', 'CONTEXT', 'CONTINUE', // (R)\n  'CONVERT', // (R)\n  'CPU', 'CREATE', // (R)\n  'CROSS', // (R)\n  'CUBE', // (R)\n  'CUME_DIST', // (R)\n  'CURRENT', 'CURRENT_DATE', // (R)\n  'CURRENT_TIME', // (R)\n  'CURRENT_TIMESTAMP', // (R)\n  'CURRENT_USER', // (R)\n  'CURSOR', // (R)\n  'CURSOR_NAME', 'DATA', 'DATABASE', // (R)\n  'DATABASES', // (R)\n  'DATAFILE', 'DATE', 'DATETIME', 'DAY', 'DAY_HOUR', // (R)\n  'DAY_MICROSECOND', // (R)\n  'DAY_MINUTE', // (R)\n  'DAY_SECOND', // (R)\n  'DEALLOCATE', 'DEC', // (R)\n  'DECIMAL', // (R)\n  'DECLARE', // (R)\n  'DEFAULT', // (R)\n  'DEFAULT_AUTH', 'DEFINER', 'DEFINITION', 'DELAYED', // (R)\n  'DELAY_KEY_WRITE', 'DELETE', // (R)\n  'DENSE_RANK', // (R)\n  'DESC', // (R)\n  'DESCRIBE', // (R)\n  'DESCRIPTION', 'DETERMINISTIC', // (R)\n  'DIAGNOSTICS', 'DIRECTORY', 'DISABLE', 'DISCARD', 'DISK', 'DISTINCT', // (R)\n  'DISTINCTROW', // (R)\n  'DIV', // (R)\n  'DO', 'DOUBLE', // (R)\n  'DROP', // (R)\n  'DUAL', // (R)\n  'DUMPFILE', 'DUPLICATE', 'DYNAMIC', 'EACH', // (R)\n  'ELSE', // (R)\n  'ELSEIF', // (R)\n  'EMPTY', // (R)\n  'ENABLE', 'ENCLOSED', // (R)\n  'ENCRYPTION', 'END', 'ENDS', 'ENFORCED', 'ENGINE', 'ENGINES', 'ENGINE_ATTRIBUTE', 'ENUM', 'ERROR', 'ERRORS', 'ESCAPE', 'ESCAPED', // (R)\n  'EVENT', 'EVENTS', 'EVERY', 'EXCEPT', // (R)\n  'EXCHANGE', 'EXCLUDE', 'EXECUTE', 'EXISTS', // (R)\n  'EXIT', // (R)\n  'EXPANSION', 'EXPIRE', 'EXPLAIN', // (R)\n  'EXPORT', 'EXTENDED', 'EXTENT_SIZE', 'FACTOR', 'FAILED_LOGIN_ATTEMPTS', 'FALSE', // (R)\n  'FAST', 'FAULTS', 'FETCH', // (R)\n  'FIELDS', 'FILE', 'FILE_BLOCK_SIZE', 'FILTER', 'FINISH', 'FIRST', 'FIRST_VALUE', // (R)\n  'FIXED', 'FLOAT', // (R)\n  'FLOAT4', // (R)\n  'FLOAT8', // (R)\n  'FLUSH', 'FOLLOWING', 'FOLLOWS', 'FOR', // (R)\n  'FORCE', // (R)\n  'FOREIGN', // (R)\n  'FORMAT', 'FOUND', 'FROM', // (R)\n  'FULL', 'FULLTEXT', // (R)\n  'FUNCTION', // (R)\n  'GENERAL', 'GENERATED', // (R)\n  'GEOMCOLLECTION', 'GEOMETRY', 'GEOMETRYCOLLECTION', 'GET', // (R)\n  'GET_FORMAT', 'GET_MASTER_PUBLIC_KEY', 'GET_SOURCE_PUBLIC_KEY', 'GLOBAL', 'GRANT', // (R)\n  'GRANTS', 'GROUP', // (R)\n  'GROUPING', // (R)\n  'GROUPS', // (R)\n  'GROUP_REPLICATION', 'GTID_ONLY', 'HANDLER', 'HASH', 'HAVING', // (R)\n  'HELP', 'HIGH_PRIORITY', // (R)\n  'HISTOGRAM', 'HISTORY', 'HOST', 'HOSTS', 'HOUR', 'HOUR_MICROSECOND', // (R)\n  'HOUR_MINUTE', // (R)\n  'HOUR_SECOND', // (R)\n  'IDENTIFIED', 'IF', // (R)\n  'IGNORE', // (R)\n  'IGNORE_SERVER_IDS', 'IMPORT', 'IN', // (R)\n  'INACTIVE', 'INDEX', // (R)\n  'INDEXES', 'INFILE', // (R)\n  'INITIAL', 'INITIAL_SIZE', 'INITIATE', 'INNER', // (R)\n  'INOUT', // (R)\n  'INSENSITIVE', // (R)\n  'INSERT', // (R)\n  'INSERT_METHOD', 'INSTALL', 'INSTANCE', 'IN', // <-- moved over from functions\n  'INT', // (R)\n  'INT1', // (R)\n  'INT2', // (R)\n  'INT3', // (R)\n  'INT4', // (R)\n  'INT8', // (R)\n  'INTEGER', // (R)\n  'INTERSECT', // (R)\n  'INTERVAL', // (R)\n  'INTO', // (R)\n  'INVISIBLE', 'INVOKER', 'IO', 'IO_AFTER_GTIDS', // (R)\n  'IO_BEFORE_GTIDS', // (R)\n  'IO_THREAD', 'IPC', 'IS', // (R)\n  'ISOLATION', 'ISSUER', 'ITERATE', // (R)\n  'JOIN', // (R)\n  'JSON', 'JSON_TABLE', // (R)\n  'JSON_VALUE', 'KEY', // (R)\n  'KEYRING', 'KEYS', // (R)\n  'KEY_BLOCK_SIZE', 'KILL', // (R)\n  'LAG', // (R)\n  'LANGUAGE', 'LAST', 'LAST_VALUE', // (R)\n  'LATERAL', // (R)\n  'LEAD', // (R)\n  'LEADING', // (R)\n  'LEAVE', // (R)\n  'LEAVES', 'LEFT', // (R)\n  'LESS', 'LEVEL', 'LIKE', // (R)\n  'LIMIT', // (R)\n  'LINEAR', // (R)\n  'LINES', // (R)\n  'LINESTRING', 'LIST', 'LOAD', // (R)\n  'LOCAL', 'LOCALTIME', // (R)\n  'LOCALTIMESTAMP', // (R)\n  'LOCK', // (R)\n  'LOCKED', 'LOCKS', 'LOGFILE', 'LOGS', 'LONG', // (R)\n  'LONGBLOB', // (R)\n  'LONGTEXT', // (R)\n  'LOOP', // (R)\n  'LOW_PRIORITY', // (R)\n  'MASTER', 'MASTER_AUTO_POSITION', 'MASTER_BIND', // (R)\n  'MASTER_COMPRESSION_ALGORITHMS', 'MASTER_CONNECT_RETRY', 'MASTER_DELAY', 'MASTER_HEARTBEAT_PERIOD', 'MASTER_HOST', 'MASTER_LOG_FILE', 'MASTER_LOG_POS', 'MASTER_PASSWORD', 'MASTER_PORT', 'MASTER_PUBLIC_KEY_PATH', 'MASTER_RETRY_COUNT', 'MASTER_SSL', 'MASTER_SSL_CA', 'MASTER_SSL_CAPATH', 'MASTER_SSL_CERT', 'MASTER_SSL_CIPHER', 'MASTER_SSL_CRL', 'MASTER_SSL_CRLPATH', 'MASTER_SSL_KEY', 'MASTER_SSL_VERIFY_SERVER_CERT', // (R)\n  'MASTER_TLS_CIPHERSUITES', 'MASTER_TLS_VERSION', 'MASTER_USER', 'MASTER_ZSTD_COMPRESSION_LEVEL', 'MATCH', // (R)\n  'MAXVALUE', // (R)\n  'MAX_CONNECTIONS_PER_HOUR', 'MAX_QUERIES_PER_HOUR', 'MAX_ROWS', 'MAX_SIZE', 'MAX_UPDATES_PER_HOUR', 'MAX_USER_CONNECTIONS', 'MEDIUM', 'MEDIUMBLOB', // (R)\n  'MEDIUMINT', // (R)\n  'MEDIUMTEXT', // (R)\n  'MEMBER', 'MEMORY', 'MERGE', 'MESSAGE_TEXT', 'MICROSECOND', 'MIDDLEINT', // (R)\n  'MIGRATE', 'MINUTE', 'MINUTE_MICROSECOND', // (R)\n  'MINUTE_SECOND', // (R)\n  'MIN_ROWS', 'MOD', // (R)\n  'MODE', 'MODIFIES', // (R)\n  'MODIFY', 'MONTH', 'MULTILINESTRING', 'MULTIPOINT', 'MULTIPOLYGON', 'MUTEX', 'MYSQL_ERRNO', 'NAME', 'NAMES', 'NATIONAL', 'NATURAL', // (R)\n  'NCHAR', 'NDB', 'NDBCLUSTER', 'NESTED', 'NETWORK_NAMESPACE', 'NEVER', 'NEW', 'NEXT', 'NO', 'NODEGROUP', 'NONE', 'NOT', // (R)\n  'NOWAIT', 'NO_WAIT', 'NO_WRITE_TO_BINLOG', // (R)\n  'NTH_VALUE', // (R)\n  'NTILE', // (R)\n  'NULL', // (R)\n  'NULLS', 'NUMBER', 'NUMERIC', // (R)\n  'NVARCHAR', 'OF', // (R)\n  'OFF', 'OFFSET', 'OJ', 'OLD', 'ON', // (R)\n  'ONE', 'ONLY', 'OPEN', 'OPTIMIZE', // (R)\n  'OPTIMIZER_COSTS', // (R)\n  'OPTION', // (R)\n  'OPTIONAL', 'OPTIONALLY', // (R)\n  'OPTIONS', 'OR', // (R)\n  'ORDER', // (R)\n  'ORDINALITY', 'ORGANIZATION', 'OTHERS', 'OUT', // (R)\n  'OUTER', // (R)\n  'OUTFILE', // (R)\n  'OVER', // (R)\n  'OWNER', 'PACK_KEYS', 'PAGE', 'PARSER', 'PARTIAL', 'PARTITION', // (R)\n  'PARTITIONING', 'PARTITIONS', 'PASSWORD', 'PASSWORD_LOCK_TIME', 'PATH', 'PERCENT_RANK', // (R)\n  'PERSIST', 'PERSIST_ONLY', 'PHASE', 'PLUGIN', 'PLUGINS', 'PLUGIN_DIR', 'POINT', 'POLYGON', 'PORT', 'PRECEDES', 'PRECEDING', 'PRECISION', // (R)\n  'PREPARE', 'PRESERVE', 'PREV', 'PRIMARY', // (R)\n  'PRIVILEGES', 'PRIVILEGE_CHECKS_USER', 'PROCEDURE', // (R)\n  'PROCESS', 'PROCESSLIST', 'PROFILE', 'PROFILES', 'PROXY', 'PURGE', // (R)\n  'QUARTER', 'QUERY', 'QUICK', 'RANDOM', 'RANGE', // (R)\n  'RANK', // (R)\n  'READ', // (R)\n  'READS', // (R)\n  'READ_ONLY', 'READ_WRITE', // (R)\n  'REAL', // (R)\n  'REBUILD', 'RECOVER', 'RECURSIVE', // (R)\n  'REDO_BUFFER_SIZE', 'REDUNDANT', 'REFERENCE', 'REFERENCES', // (R)\n  'REGEXP', // (R)\n  'REGISTRATION', 'RELAY', 'RELAYLOG', 'RELAY_LOG_FILE', 'RELAY_LOG_POS', 'RELAY_THREAD', 'RELEASE', // (R)\n  'RELOAD', 'REMOVE', 'RENAME', // (R)\n  'REORGANIZE', 'REPAIR', 'REPEAT', // (R)\n  'REPEATABLE', 'REPLACE', // (R)\n  'REPLICA', 'REPLICAS', 'REPLICATE_DO_DB', 'REPLICATE_DO_TABLE', 'REPLICATE_IGNORE_DB', 'REPLICATE_IGNORE_TABLE', 'REPLICATE_REWRITE_DB', 'REPLICATE_WILD_DO_TABLE', 'REPLICATE_WILD_IGNORE_TABLE', 'REPLICATION', 'REQUIRE', // (R)\n  'REQUIRE_ROW_FORMAT', 'RESET', 'RESIGNAL', // (R)\n  'RESOURCE', 'RESPECT', 'RESTART', 'RESTORE', 'RESTRICT', // (R)\n  'RESUME', 'RETAIN', 'RETURN', // (R)\n  'RETURNED_SQLSTATE', 'RETURNING', 'RETURNS', 'REUSE', 'REVERSE', 'REVOKE', // (R)\n  'RIGHT', // (R)\n  'RLIKE', // (R)\n  'ROLE', 'ROLLBACK', 'ROLLUP', 'ROTATE', 'ROUTINE', 'ROW', // (R)\n  'ROWS', // (R)\n  'ROW_COUNT', 'ROW_FORMAT', 'ROW_NUMBER', // (R)\n  'RTREE', 'SAVEPOINT', 'SCHEDULE', 'SCHEMA', // (R)\n  'SCHEMAS', // (R)\n  'SCHEMA_NAME', 'SECOND', 'SECONDARY', 'SECONDARY_ENGINE', 'SECONDARY_ENGINE_ATTRIBUTE', 'SECONDARY_LOAD', 'SECONDARY_UNLOAD', 'SECOND_MICROSECOND', // (R)\n  'SECURITY', 'SELECT', // (R)\n  'SENSITIVE', // (R)\n  'SEPARATOR', // (R)\n  'SERIAL', 'SERIALIZABLE', 'SERVER', 'SESSION', 'SET', // (R)\n  'SHARE', 'SHOW', // (R)\n  'SHUTDOWN', 'SIGNAL', // (R)\n  'SIGNED', 'SIMPLE', 'SKIP', 'SLAVE', 'SLOW', 'SMALLINT', // (R)\n  'SNAPSHOT', 'SOCKET', 'SOME', 'SONAME', 'SOUNDS', 'SOURCE', 'SOURCE_AUTO_POSITION', 'SOURCE_BIND', 'SOURCE_COMPRESSION_ALGORITHMS', 'SOURCE_CONNECT_RETRY', 'SOURCE_DELAY', 'SOURCE_HEARTBEAT_PERIOD', 'SOURCE_HOST', 'SOURCE_LOG_FILE', 'SOURCE_LOG_POS', 'SOURCE_PASSWORD', 'SOURCE_PORT', 'SOURCE_PUBLIC_KEY_PATH', 'SOURCE_RETRY_COUNT', 'SOURCE_SSL', 'SOURCE_SSL_CA', 'SOURCE_SSL_CAPATH', 'SOURCE_SSL_CERT', 'SOURCE_SSL_CIPHER', 'SOURCE_SSL_CRL', 'SOURCE_SSL_CRLPATH', 'SOURCE_SSL_KEY', 'SOURCE_SSL_VERIFY_SERVER_CERT', 'SOURCE_TLS_CIPHERSUITES', 'SOURCE_TLS_VERSION', 'SOURCE_USER', 'SOURCE_ZSTD_COMPRESSION_LEVEL', 'SPATIAL', // (R)\n  'SPECIFIC', // (R)\n  'SQL', // (R)\n  'SQLEXCEPTION', // (R)\n  'SQLSTATE', // (R)\n  'SQLWARNING', // (R)\n  'SQL_AFTER_GTIDS', 'SQL_AFTER_MTS_GAPS', 'SQL_BEFORE_GTIDS', 'SQL_BIG_RESULT', // (R)\n  'SQL_BUFFER_RESULT', 'SQL_CALC_FOUND_ROWS', // (R)\n  'SQL_NO_CACHE', 'SQL_SMALL_RESULT', // (R)\n  'SQL_THREAD', 'SQL_TSI_DAY', 'SQL_TSI_HOUR', 'SQL_TSI_MINUTE', 'SQL_TSI_MONTH', 'SQL_TSI_QUARTER', 'SQL_TSI_SECOND', 'SQL_TSI_WEEK', 'SQL_TSI_YEAR', 'SRID', 'SSL', // (R)\n  'STACKED', 'START', 'STARTING', // (R)\n  'STARTS', 'STATS_AUTO_RECALC', 'STATS_PERSISTENT', 'STATS_SAMPLE_PAGES', 'STATUS', 'STOP', 'STORAGE', 'STORED', // (R)\n  'STRAIGHT_JOIN', // (R)\n  'STREAM', 'STRING', 'SUBCLASS_ORIGIN', 'SUBJECT', 'SUBPARTITION', 'SUBPARTITIONS', 'SUPER', 'SUSPEND', 'SWAPS', 'SWITCHES', 'SYSTEM', // (R)\n  'TABLE', // (R)\n  'TABLES', 'TABLESPACE', 'TABLE_CHECKSUM', 'TABLE_NAME', 'TEMPORARY', 'TEMPTABLE', 'TERMINATED', // (R)\n  'TEXT', 'THAN', 'THEN', // (R)\n  'THREAD_PRIORITY', 'TIES', 'TIME', 'TIMESTAMP', 'TIMESTAMPADD', 'TIMESTAMPDIFF', 'TINYBLOB', // (R)\n  'TINYINT', // (R)\n  'TINYTEXT', // (R)\n  'TLS', 'TO', // (R)\n  'TRAILING', // (R)\n  'TRANSACTION', 'TRIGGER', // (R)\n  'TRIGGERS', 'TRUE', // (R)\n  'TRUNCATE', 'TYPE', 'TYPES', 'UNBOUNDED', 'UNCOMMITTED', 'UNDEFINED', 'UNDO', // (R)\n  'UNDOFILE', 'UNDO_BUFFER_SIZE', 'UNICODE', 'UNINSTALL', 'UNION', // (R)\n  'UNIQUE', // (R)\n  'UNKNOWN', 'UNLOCK', // (R)\n  'UNREGISTER', 'UNSIGNED', // (R)\n  'UNTIL', 'UPDATE', // (R)\n  'UPGRADE', 'USAGE', // (R)\n  'USE', // (R)\n  'USER', 'USER_RESOURCES', 'USE_FRM', 'USING', // (R)\n  'UTC_DATE', // (R)\n  'UTC_TIME', // (R)\n  'UTC_TIMESTAMP', // (R)\n  'VALIDATION', 'VALUE', 'VALUES', // (R)\n  'VARBINARY', // (R)\n  'VARCHAR', // (R)\n  'VARCHARACTER', // (R)\n  'VARIABLES', 'VARYING', // (R)\n  'VCPU', 'VIEW', 'VIRTUAL', // (R)\n  'VISIBLE', 'WAIT', 'WARNINGS', 'WEEK', 'WEIGHT_STRING', 'WHEN', // (R)\n  'WHERE', // (R)\n  'WHILE', // (R)\n  'WINDOW', // (R)\n  'WITH', // (R)\n  'WITHOUT', 'WORK', 'WRAPPER', 'WRITE', // (R)\n  'X509', 'XA', 'XID', 'XML', 'XOR', // (R)\n  'YEAR', 'YEAR_MONTH', // (R)\n  'ZEROFILL', // (R)\n  'ZONE']\n});\n//# sourceMappingURL=mysql.keywords.js.map","import { flatKeywordList } from '../../utils.js';\nexport const functions = flatKeywordList({\n  // https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html\n  all: ['ABS', 'ACOS', 'ADDDATE', 'ADDTIME', 'AES_DECRYPT', 'AES_ENCRYPT', // 'AND',\n  'ANY_VALUE', 'ASCII', 'ASIN', 'ATAN', 'ATAN2', 'AVG', 'BENCHMARK', 'BIN', 'BIN_TO_UUID', 'BINARY', 'BIT_AND', 'BIT_COUNT', 'BIT_LENGTH', 'BIT_OR', 'BIT_XOR', 'CAN_ACCESS_COLUMN', 'CAN_ACCESS_DATABASE', 'CAN_ACCESS_TABLE', 'CAN_ACCESS_USER', 'CAN_ACCESS_VIEW', 'CAST', 'CEIL', 'CEILING', 'CHAR', 'CHAR_LENGTH', 'CHARACTER_LENGTH', 'CHARSET', 'COALESCE', 'COERCIBILITY', 'COLLATION', 'COMPRESS', 'CONCAT', 'CONCAT_WS', 'CONNECTION_ID', 'CONV', 'CONVERT', 'CONVERT_TZ', 'COS', 'COT', 'COUNT', 'CRC32', 'CUME_DIST', 'CURDATE', 'CURRENT_DATE', 'CURRENT_ROLE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'CURTIME', 'DATABASE', 'DATE', 'DATE_ADD', 'DATE_FORMAT', 'DATE_SUB', 'DATEDIFF', 'DAY', 'DAYNAME', 'DAYOFMONTH', 'DAYOFWEEK', 'DAYOFYEAR', 'DEFAULT', 'DEGREES', 'DENSE_RANK', 'DIV', 'ELT', 'EXP', 'EXPORT_SET', 'EXTRACT', 'EXTRACTVALUE', 'FIELD', 'FIND_IN_SET', 'FIRST_VALUE', 'FLOOR', 'FORMAT', 'FORMAT_BYTES', 'FORMAT_PICO_TIME', 'FOUND_ROWS', 'FROM_BASE64', 'FROM_DAYS', 'FROM_UNIXTIME', 'GEOMCOLLECTION', 'GEOMETRYCOLLECTION', 'GET_DD_COLUMN_PRIVILEGES', 'GET_DD_CREATE_OPTIONS', 'GET_DD_INDEX_SUB_PART_LENGTH', 'GET_FORMAT', 'GET_LOCK', 'GREATEST', 'GROUP_CONCAT', 'GROUPING', 'GTID_SUBSET', 'GTID_SUBTRACT', 'HEX', 'HOUR', 'ICU_VERSION', 'IF', 'IFNULL', // 'IN',\n  'INET_ATON', 'INET_NTOA', 'INET6_ATON', 'INET6_NTOA', 'INSERT', 'INSTR', 'INTERNAL_AUTO_INCREMENT', 'INTERNAL_AVG_ROW_LENGTH', 'INTERNAL_CHECK_TIME', 'INTERNAL_CHECKSUM', 'INTERNAL_DATA_FREE', 'INTERNAL_DATA_LENGTH', 'INTERNAL_DD_CHAR_LENGTH', 'INTERNAL_GET_COMMENT_OR_ERROR', 'INTERNAL_GET_ENABLED_ROLE_JSON', 'INTERNAL_GET_HOSTNAME', 'INTERNAL_GET_USERNAME', 'INTERNAL_GET_VIEW_WARNING_OR_ERROR', 'INTERNAL_INDEX_COLUMN_CARDINALITY', 'INTERNAL_INDEX_LENGTH', 'INTERNAL_IS_ENABLED_ROLE', 'INTERNAL_IS_MANDATORY_ROLE', 'INTERNAL_KEYS_DISABLED', 'INTERNAL_MAX_DATA_LENGTH', 'INTERNAL_TABLE_ROWS', 'INTERNAL_UPDATE_TIME', 'INTERVAL', 'IS', 'IS_FREE_LOCK', 'IS_IPV4', 'IS_IPV4_COMPAT', 'IS_IPV4_MAPPED', 'IS_IPV6', 'IS NOT', 'IS NOT NULL', 'IS NULL', 'IS_USED_LOCK', 'IS_UUID', 'ISNULL', 'JSON_ARRAY', 'JSON_ARRAY_APPEND', 'JSON_ARRAY_INSERT', 'JSON_ARRAYAGG', 'JSON_CONTAINS', 'JSON_CONTAINS_PATH', 'JSON_DEPTH', 'JSON_EXTRACT', 'JSON_INSERT', 'JSON_KEYS', 'JSON_LENGTH', 'JSON_MERGE', 'JSON_MERGE_PATCH', 'JSON_MERGE_PRESERVE', 'JSON_OBJECT', 'JSON_OBJECTAGG', 'JSON_OVERLAPS', 'JSON_PRETTY', 'JSON_QUOTE', 'JSON_REMOVE', 'JSON_REPLACE', 'JSON_SCHEMA_VALID', 'JSON_SCHEMA_VALIDATION_REPORT', 'JSON_SEARCH', 'JSON_SET', 'JSON_STORAGE_FREE', 'JSON_STORAGE_SIZE', 'JSON_TABLE', 'JSON_TYPE', 'JSON_UNQUOTE', 'JSON_VALID', 'JSON_VALUE', 'LAG', 'LAST_DAY', 'LAST_INSERT_ID', 'LAST_VALUE', 'LCASE', 'LEAD', 'LEAST', 'LEFT', 'LENGTH', 'LIKE', 'LINESTRING', 'LN', 'LOAD_FILE', 'LOCALTIME', 'LOCALTIMESTAMP', 'LOCATE', 'LOG', 'LOG10', 'LOG2', 'LOWER', 'LPAD', 'LTRIM', 'MAKE_SET', 'MAKEDATE', 'MAKETIME', 'MASTER_POS_WAIT', 'MATCH', 'MAX', 'MBRCONTAINS', 'MBRCOVEREDBY', 'MBRCOVERS', 'MBRDISJOINT', 'MBREQUALS', 'MBRINTERSECTS', 'MBROVERLAPS', 'MBRTOUCHES', 'MBRWITHIN', 'MD5', 'MEMBER OF', 'MICROSECOND', 'MID', 'MIN', 'MINUTE', 'MOD', 'MONTH', 'MONTHNAME', 'MULTILINESTRING', 'MULTIPOINT', 'MULTIPOLYGON', 'NAME_CONST', 'NOT', 'NOT IN', 'NOT LIKE', 'NOT REGEXP', 'NOW', 'NTH_VALUE', 'NTILE', 'NULLIF', 'OCT', 'OCTET_LENGTH', // 'OR',\n  'ORD', 'PERCENT_RANK', 'PERIOD_ADD', 'PERIOD_DIFF', 'PI', 'POINT', 'POLYGON', 'POSITION', 'POW', 'POWER', 'PS_CURRENT_THREAD_ID', 'PS_THREAD_ID', 'QUARTER', 'QUOTE', 'RADIANS', 'RAND', 'RANDOM_BYTES', 'RANK', 'REGEXP', 'REGEXP_INSTR', 'REGEXP_LIKE', 'REGEXP_REPLACE', 'REGEXP_SUBSTR', 'RELEASE_ALL_LOCKS', 'RELEASE_LOCK', 'REPEAT', 'REPLACE', 'REVERSE', 'RIGHT', 'RLIKE', 'ROLES_GRAPHML', 'ROUND', 'ROW_COUNT', 'ROW_NUMBER', 'RPAD', 'RTRIM', 'SCHEMA', 'SEC_TO_TIME', 'SECOND', 'SESSION_USER', 'SHA1', 'SHA2', 'SIGN', 'SIN', 'SLEEP', 'SOUNDEX', 'SOUNDS LIKE', 'SOURCE_POS_WAIT', 'SPACE', 'SQRT', 'ST_AREA', 'ST_ASBINARY', 'ST_ASGEOJSON', 'ST_ASTEXT', 'ST_BUFFER', 'ST_BUFFER_STRATEGY', 'ST_CENTROID', 'ST_COLLECT', 'ST_CONTAINS', 'ST_CONVEXHULL', 'ST_CROSSES', 'ST_DIFFERENCE', 'ST_DIMENSION', 'ST_DISJOINT', 'ST_DISTANCE', 'ST_DISTANCE_SPHERE', 'ST_ENDPOINT', 'ST_ENVELOPE', 'ST_EQUALS', 'ST_EXTERIORRING', 'ST_FRECHETDISTANCE', 'ST_GEOHASH', 'ST_GEOMCOLLFROMTEXT', 'ST_GEOMCOLLFROMWKB', 'ST_GEOMETRYN', 'ST_GEOMETRYTYPE', 'ST_GEOMFROMGEOJSON', 'ST_GEOMFROMTEXT', 'ST_GEOMFROMWKB', 'ST_HAUSDORFFDISTANCE', 'ST_INTERIORRINGN', 'ST_INTERSECTION', 'ST_INTERSECTS', 'ST_ISCLOSED', 'ST_ISEMPTY', 'ST_ISSIMPLE', 'ST_ISVALID', 'ST_LATFROMGEOHASH', 'ST_LATITUDE', 'ST_LENGTH', 'ST_LINEFROMTEXT', 'ST_LINEFROMWKB', 'ST_LINEINTERPOLATEPOINT', 'ST_LINEINTERPOLATEPOINTS', 'ST_LONGFROMGEOHASH', 'ST_LONGITUDE', 'ST_MAKEENVELOPE', 'ST_MLINEFROMTEXT', 'ST_MLINEFROMWKB', 'ST_MPOINTFROMTEXT', 'ST_MPOINTFROMWKB', 'ST_MPOLYFROMTEXT', 'ST_MPOLYFROMWKB', 'ST_NUMGEOMETRIES', 'ST_NUMINTERIORRING', 'ST_NUMPOINTS', 'ST_OVERLAPS', 'ST_POINTATDISTANCE', 'ST_POINTFROMGEOHASH', 'ST_POINTFROMTEXT', 'ST_POINTFROMWKB', 'ST_POINTN', 'ST_POLYFROMTEXT', 'ST_POLYFROMWKB', 'ST_SIMPLIFY', 'ST_SRID', 'ST_STARTPOINT', 'ST_SWAPXY', 'ST_SYMDIFFERENCE', 'ST_TOUCHES', 'ST_TRANSFORM', 'ST_UNION', 'ST_VALIDATE', 'ST_WITHIN', 'ST_X', 'ST_Y', 'STATEMENT_DIGEST', 'STATEMENT_DIGEST_TEXT', 'STD', 'STDDEV', 'STDDEV_POP', 'STDDEV_SAMP', 'STR_TO_DATE', 'STRCMP', 'SUBDATE', 'SUBSTR', 'SUBSTRING', 'SUBSTRING_INDEX', 'SUBTIME', 'SUM', 'SYSDATE', 'SYSTEM_USER', 'TAN', 'TIME', 'TIME_FORMAT', 'TIME_TO_SEC', 'TIMEDIFF', 'TIMESTAMP', 'TIMESTAMPADD', 'TIMESTAMPDIFF', 'TO_BASE64', 'TO_DAYS', 'TO_SECONDS', 'TRIM', 'TRUNCATE', 'UCASE', 'UNCOMPRESS', 'UNCOMPRESSED_LENGTH', 'UNHEX', 'UNIX_TIMESTAMP', 'UPDATEXML', 'UPPER', 'USER', 'UTC_DATE', 'UTC_TIME', 'UTC_TIMESTAMP', 'UUID', 'UUID_SHORT', 'UUID_TO_BIN', 'VALIDATE_PASSWORD_STRENGTH', 'VALUES', 'VAR_POP', 'VAR_SAMP', 'VARIANCE', 'VERSION', 'WAIT_FOR_EXECUTED_GTID_SET', 'WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS', 'WEEK', 'WEEKDAY', 'WEEKOFYEAR', 'WEIGHT_STRING', // 'XOR',\n  'YEAR', 'YEARWEEK', // Data types with parameters\n  // https://dev.mysql.com/doc/refman/8.0/en/data-types.html\n  'BIT', 'TINYINT', 'SMALLINT', 'MEDIUMINT', 'INT', 'INTEGER', 'BIGINT', 'DECIMAL', 'DEC', 'NUMERIC', 'FIXED', 'FLOAT', 'DOUBLE', 'DOUBLE PRECISION', 'REAL', 'DATETIME', 'TIMESTAMP', 'TIME', 'YEAR', 'CHAR', 'NATIONAL CHAR', 'VARCHAR', 'NATIONAL VARCHAR', 'BINARY', 'VARBINARY', 'BLOB', 'TEXT', 'ENUM' // 'SET' // handled as special-case in postProcess\n  ]\n});\n//# sourceMappingURL=mysql.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport Formatter from '../../formatter/Formatter.js';\nimport Tokenizer from '../../lexer/Tokenizer.js';\nimport { EOF_TOKEN, isToken, TokenType } from '../../lexer/token.js';\nimport { keywords } from './mysql.keywords.js';\nimport { functions } from './mysql.functions.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT | DISTINCTROW]']);\nconst reservedClauses = expandPhrases([// queries\n'WITH [RECURSIVE]', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'WINDOW', 'PARTITION BY', 'ORDER BY', 'LIMIT', 'OFFSET', // Data manipulation\n// - insert:\n'INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]', 'REPLACE [LOW_PRIORITY | DELAYED] [INTO]', 'VALUES', // - update:\n'UPDATE [LOW_PRIORITY] [IGNORE]', 'SET', // - delete:\n'DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM', // - truncate:\n'TRUNCATE [TABLE]', // Data definition\n'CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]', 'CREATE [TEMPORARY] TABLE [IF NOT EXISTS]', 'DROP [TEMPORARY] TABLE [IF EXISTS]', // - alter table:\n'ALTER TABLE', 'ADD [COLUMN]', '{CHANGE | MODIFY} [COLUMN]', 'DROP [COLUMN]', 'RENAME [TO | AS]', 'RENAME COLUMN', 'ALTER [COLUMN]', '{SET | DROP} DEFAULT', // for alter column\n// https://dev.mysql.com/doc/refman/8.0/en/sql-statements.html\n'ALTER DATABASE', 'ALTER EVENT', 'ALTER FUNCTION', 'ALTER INSTANCE', 'ALTER LOGFILE GROUP', 'ALTER PROCEDURE', 'ALTER RESOURCE GROUP', 'ALTER SERVER', 'ALTER TABLESPACE', 'ALTER USER', 'ALTER VIEW', 'ANALYZE TABLE', 'BINLOG', 'CACHE INDEX', 'CALL', 'CHANGE MASTER TO', 'CHANGE REPLICATION FILTER', 'CHANGE REPLICATION SOURCE TO', 'CHECK TABLE', 'CHECKSUM TABLE', 'CLONE', 'COMMIT', 'CREATE DATABASE', 'CREATE EVENT', 'CREATE FUNCTION', 'CREATE FUNCTION', 'CREATE INDEX', 'CREATE LOGFILE GROUP', 'CREATE PROCEDURE', 'CREATE RESOURCE GROUP', 'CREATE ROLE', 'CREATE SERVER', 'CREATE SPATIAL REFERENCE SYSTEM', 'CREATE TABLESPACE', 'CREATE TRIGGER', 'CREATE USER', 'DEALLOCATE PREPARE', 'DESCRIBE', 'DO', 'DROP DATABASE', 'DROP EVENT', 'DROP FUNCTION', 'DROP FUNCTION', 'DROP INDEX', 'DROP LOGFILE GROUP', 'DROP PROCEDURE', 'DROP RESOURCE GROUP', 'DROP ROLE', 'DROP SERVER', 'DROP SPATIAL REFERENCE SYSTEM', 'DROP TABLESPACE', 'DROP TRIGGER', 'DROP USER', 'DROP VIEW', 'EXECUTE', 'EXPLAIN', 'FLUSH', 'GRANT', 'HANDLER', 'HELP', 'IMPORT TABLE', 'INSTALL COMPONENT', 'INSTALL PLUGIN', 'KILL', 'LOAD DATA', 'LOAD INDEX INTO CACHE', 'LOAD XML', 'LOCK INSTANCE FOR BACKUP', 'LOCK TABLES', 'MASTER_POS_WAIT', 'OPTIMIZE TABLE', 'PREPARE', 'PURGE BINARY LOGS', 'RELEASE SAVEPOINT', 'RENAME TABLE', 'RENAME USER', 'REPAIR TABLE', 'RESET', 'RESET MASTER', 'RESET PERSIST', 'RESET REPLICA', 'RESET SLAVE', 'RESTART', 'REVOKE', 'ROLLBACK', 'ROLLBACK TO SAVEPOINT', 'SAVEPOINT', 'SET CHARACTER SET', 'SET DEFAULT ROLE', 'SET NAMES', 'SET PASSWORD', 'SET RESOURCE GROUP', 'SET ROLE', 'SET TRANSACTION', 'SHOW', 'SHOW BINARY LOGS', 'SHOW BINLOG EVENTS', 'SHOW CHARACTER SET', 'SHOW COLLATION', 'SHOW COLUMNS', 'SHOW CREATE DATABASE', 'SHOW CREATE EVENT', 'SHOW CREATE FUNCTION', 'SHOW CREATE PROCEDURE', 'SHOW CREATE TABLE', 'SHOW CREATE TRIGGER', 'SHOW CREATE USER', 'SHOW CREATE VIEW', 'SHOW DATABASES', 'SHOW ENGINE', 'SHOW ENGINES', 'SHOW ERRORS', 'SHOW EVENTS', 'SHOW FUNCTION CODE', 'SHOW FUNCTION STATUS', 'SHOW GRANTS', 'SHOW INDEX', 'SHOW MASTER STATUS', 'SHOW OPEN TABLES', 'SHOW PLUGINS', 'SHOW PRIVILEGES', 'SHOW PROCEDURE CODE', 'SHOW PROCEDURE STATUS', 'SHOW PROCESSLIST', 'SHOW PROFILE', 'SHOW PROFILES', 'SHOW RELAYLOG EVENTS', 'SHOW REPLICA STATUS', 'SHOW REPLICAS', 'SHOW SLAVE', 'SHOW SLAVE HOSTS', 'SHOW STATUS', 'SHOW TABLE STATUS', 'SHOW TABLES', 'SHOW TRIGGERS', 'SHOW VARIABLES', 'SHOW WARNINGS', 'SHUTDOWN', 'SOURCE_POS_WAIT', 'START GROUP_REPLICATION', 'START REPLICA', 'START SLAVE', 'START TRANSACTION', 'STOP GROUP_REPLICATION', 'STOP REPLICA', 'STOP SLAVE', 'TABLE', 'UNINSTALL COMPONENT', 'UNINSTALL PLUGIN', 'UNLOCK INSTANCE', 'UNLOCK TABLES', 'USE', 'XA', // flow control\n// 'IF',\n'ITERATE', 'LEAVE', 'LOOP', 'REPEAT', 'RETURN', 'WHILE']);\nconst reservedSetOperations = expandPhrases(['UNION [ALL | DISTINCT]']);\nconst reservedJoins = expandPhrases(['JOIN', '{LEFT | RIGHT} [OUTER] JOIN', '{INNER | CROSS} JOIN', 'NATURAL [INNER] JOIN', 'NATURAL {LEFT | RIGHT} [OUTER] JOIN', // non-standard joins\n'STRAIGHT_JOIN']);\nconst reservedPhrases = expandPhrases(['ON {UPDATE | DELETE} [SET NULL]', 'CHARACTER SET', '{ROWS | RANGE} BETWEEN']); // https://dev.mysql.com/doc/refman/8.0/en/\n\nexport default class MySqlFormatter extends Formatter {\n  tokenizer() {\n    return new Tokenizer({\n      reservedClauses,\n      reservedSelect,\n      reservedSetOperations,\n      reservedJoins,\n      reservedPhrases,\n      supportsXor: true,\n      reservedKeywords: keywords,\n      reservedFunctionNames: functions,\n      // TODO: support _ char set prefixes such as _utf8, _latin1, _binary, _utf8mb4, etc.\n      stringTypes: ['\"\"-qq-bs', {\n        quote: \"''-qq-bs\",\n        prefixes: ['N']\n      }, {\n        quote: \"''-raw\",\n        prefixes: ['B', 'X'],\n        requirePrefix: true\n      }],\n      identTypes: ['``'],\n      identChars: {\n        first: '$',\n        rest: '$',\n        allowFirstCharNumber: true\n      },\n      variableTypes: [{\n        regex: '@@?[A-Za-z0-9_.$]+'\n      }, {\n        quote: '\"\"-qq-bs',\n        prefixes: ['@'],\n        requirePrefix: true\n      }, {\n        quote: \"''-qq-bs\",\n        prefixes: ['@'],\n        requirePrefix: true\n      }, {\n        quote: '``',\n        prefixes: ['@'],\n        requirePrefix: true\n      }],\n      paramTypes: {\n        positional: true\n      },\n      lineCommentTypes: ['--', '#'],\n      operators: ['%', ':=', '&', '|', '^', '~', '<<', '>>', '<=>', '->', '->>', '&&', '||', '!'],\n      postProcess\n    });\n  }\n\n}\n\nfunction postProcess(tokens) {\n  return tokens.map((token, i) => {\n    const nextToken = tokens[i + 1] || EOF_TOKEN;\n\n    if (isToken.SET(token) && nextToken.text === '(') {\n      // This is SET datatype, not SET statement\n      return { ...token,\n        type: TokenType.RESERVED_FUNCTION_NAME\n      };\n    }\n\n    return token;\n  });\n}\n//# sourceMappingURL=mysql.formatter.js.map","import { flatKeywordList } from '../../utils.js';\nexport const functions = flatKeywordList({\n  // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/functions.html\n  all: ['ABORT', 'ABS', 'ACOS', 'ADVISOR', 'ARRAY_AGG', 'ARRAY_AGG', 'ARRAY_APPEND', 'ARRAY_AVG', 'ARRAY_BINARY_SEARCH', 'ARRAY_CONCAT', 'ARRAY_CONTAINS', 'ARRAY_COUNT', 'ARRAY_DISTINCT', 'ARRAY_EXCEPT', 'ARRAY_FLATTEN', 'ARRAY_IFNULL', 'ARRAY_INSERT', 'ARRAY_INTERSECT', 'ARRAY_LENGTH', 'ARRAY_MAX', 'ARRAY_MIN', 'ARRAY_MOVE', 'ARRAY_POSITION', 'ARRAY_PREPEND', 'ARRAY_PUT', 'ARRAY_RANGE', 'ARRAY_REMOVE', 'ARRAY_REPEAT', 'ARRAY_REPLACE', 'ARRAY_REVERSE', 'ARRAY_SORT', 'ARRAY_STAR', 'ARRAY_SUM', 'ARRAY_SYMDIFF', 'ARRAY_SYMDIFF1', 'ARRAY_SYMDIFFN', 'ARRAY_UNION', 'ASIN', 'ATAN', 'ATAN2', 'AVG', 'BASE64', 'BASE64_DECODE', 'BASE64_ENCODE', 'BITAND ', 'BITCLEAR ', 'BITNOT ', 'BITOR ', 'BITSET ', 'BITSHIFT ', 'BITTEST ', 'BITXOR ', 'CEIL', 'CLOCK_LOCAL', 'CLOCK_MILLIS', 'CLOCK_STR', 'CLOCK_TZ', 'CLOCK_UTC', 'COALESCE', 'CONCAT', 'CONCAT2', 'CONTAINS', 'CONTAINS_TOKEN', 'CONTAINS_TOKEN_LIKE', 'CONTAINS_TOKEN_REGEXP', 'COS', 'COUNT', 'COUNT', 'COUNTN', 'CUME_DIST', 'CURL', 'DATE_ADD_MILLIS', 'DATE_ADD_STR', 'DATE_DIFF_MILLIS', 'DATE_DIFF_STR', 'DATE_FORMAT_STR', 'DATE_PART_MILLIS', 'DATE_PART_STR', 'DATE_RANGE_MILLIS', 'DATE_RANGE_STR', 'DATE_TRUNC_MILLIS', 'DATE_TRUNC_STR', 'DECODE', 'DECODE_JSON', 'DEGREES', 'DENSE_RANK', 'DURATION_TO_STR', // 'E',\n  'ENCODED_SIZE', 'ENCODE_JSON', 'EXP', 'FIRST_VALUE', 'FLOOR', 'GREATEST', 'HAS_TOKEN', 'IFINF', 'IFMISSING', 'IFMISSINGORNULL', 'IFNAN', 'IFNANORINF', 'IFNULL', 'INITCAP', 'ISARRAY', 'ISATOM', 'ISBITSET', 'ISBOOLEAN', 'ISNUMBER', 'ISOBJECT', 'ISSTRING', 'LAG', 'LAST_VALUE', 'LEAD', 'LEAST', 'LENGTH', 'LN', 'LOG', 'LOWER', 'LTRIM', 'MAX', 'MEAN', 'MEDIAN', 'META', 'MILLIS', 'MILLIS_TO_LOCAL', 'MILLIS_TO_STR', 'MILLIS_TO_TZ', 'MILLIS_TO_UTC', 'MILLIS_TO_ZONE_NAME', 'MIN', 'MISSINGIF', 'NANIF', 'NEGINFIF', 'NOW_LOCAL', 'NOW_MILLIS', 'NOW_STR', 'NOW_TZ', 'NOW_UTC', 'NTH_VALUE', 'NTILE', 'NULLIF', 'NVL', 'NVL2', 'OBJECT_ADD', 'OBJECT_CONCAT', 'OBJECT_INNER_PAIRS', 'OBJECT_INNER_VALUES', 'OBJECT_LENGTH', 'OBJECT_NAMES', 'OBJECT_PAIRS', 'OBJECT_PUT', 'OBJECT_REMOVE', 'OBJECT_RENAME', 'OBJECT_REPLACE', 'OBJECT_UNWRAP', 'OBJECT_VALUES', 'PAIRS', 'PERCENT_RANK', 'PI', 'POLY_LENGTH', 'POSINFIF', 'POSITION', 'POWER', 'RADIANS', 'RANDOM', 'RANK', 'RATIO_TO_REPORT', 'REGEXP_CONTAINS', 'REGEXP_LIKE', 'REGEXP_MATCHES', 'REGEXP_POSITION', 'REGEXP_REPLACE', 'REGEXP_SPLIT', 'REGEX_CONTAINS', 'REGEX_LIKE', 'REGEX_MATCHES', 'REGEX_POSITION', 'REGEX_REPLACE', 'REGEX_SPLIT', 'REPEAT', 'REPLACE', 'REVERSE', 'ROUND', 'ROW_NUMBER', 'RTRIM', 'SEARCH', 'SEARCH_META', 'SEARCH_SCORE', 'SIGN', 'SIN', 'SPLIT', 'SQRT', 'STDDEV', 'STDDEV_POP', 'STDDEV_SAMP', 'STR_TO_DURATION', 'STR_TO_MILLIS', 'STR_TO_TZ', 'STR_TO_UTC', 'STR_TO_ZONE_NAME', 'SUBSTR', 'SUFFIXES', 'SUM', 'TAN', 'TITLE', 'TOARRAY', 'TOATOM', 'TOBOOLEAN', 'TOKENS', 'TOKENS', 'TONUMBER', 'TOOBJECT', 'TOSTRING', 'TRIM', 'TRUNC', // 'TYPE', // disabled\n  'UPPER', 'UUID', 'VARIANCE', 'VARIANCE_POP', 'VARIANCE_SAMP', 'VAR_POP', 'VAR_SAMP', 'WEEKDAY_MILLIS', 'WEEKDAY_STR', // type casting\n  // not implemented in N1QL, but added here now for the sake of tests\n  // https://docs.couchbase.com/server/current/analytics/3_query.html#Vs_SQL-92\n  'CAST']\n});\n//# sourceMappingURL=n1ql.functions.js.map","import { flatKeywordList } from '../../utils.js';\nexport const keywords = flatKeywordList({\n  // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/reservedwords.html\n  all: ['ADVISE', 'ALL', 'ALTER', 'ANALYZE', 'AND', 'ANY', 'ARRAY', 'AS', 'ASC', 'AT', 'BEGIN', 'BETWEEN', 'BINARY', 'BOOLEAN', 'BREAK', 'BUCKET', 'BUILD', 'BY', 'CALL', 'CASE', 'CAST', 'CLUSTER', 'COLLATE', 'COLLECTION', 'COMMIT', 'COMMITTED', 'CONNECT', 'CONTINUE', 'CORRELATED', 'COVER', 'CREATE', 'CURRENT', 'DATABASE', 'DATASET', 'DATASTORE', 'DECLARE', 'DECREMENT', 'DELETE', 'DERIVED', 'DESC', 'DESCRIBE', 'DISTINCT', 'DO', 'DROP', 'EACH', 'ELEMENT', 'ELSE', 'END', 'EVERY', 'EXCEPT', 'EXCLUDE', 'EXECUTE', 'EXISTS', 'EXPLAIN', 'FALSE', 'FETCH', 'FILTER', 'FIRST', 'FLATTEN', 'FLUSH', 'FOLLOWING', 'FOR', 'FORCE', 'FROM', 'FTS', 'FUNCTION', 'GOLANG', 'GRANT', 'GROUP', 'GROUPS', 'GSI', 'HASH', 'HAVING', 'IF', 'ISOLATION', 'IGNORE', 'ILIKE', 'IN', 'INCLUDE', 'INCREMENT', 'INDEX', 'INFER', 'INLINE', 'INNER', 'INSERT', 'INTERSECT', 'INTO', 'IS', 'JAVASCRIPT', 'JOIN', 'KEY', 'KEYS', 'KEYSPACE', 'KNOWN', 'LANGUAGE', 'LAST', 'LEFT', 'LET', 'LETTING', 'LEVEL', 'LIKE', 'LIMIT', 'LSM', 'MAP', 'MAPPING', 'MATCHED', 'MATERIALIZED', 'MERGE', 'MINUS', 'MISSING', 'NAMESPACE', 'NEST', 'NL', 'NO', 'NOT', 'NTH_VALUE', 'NULL', 'NULLS', 'NUMBER', 'OBJECT', 'OFFSET', 'ON', 'OPTION', 'OPTIONS', 'OR', 'ORDER', 'OTHERS', 'OUTER', 'OVER', 'PARSE', 'PARTITION', 'PASSWORD', 'PATH', 'POOL', 'PRECEDING', 'PREPARE', 'PRIMARY', 'PRIVATE', 'PRIVILEGE', 'PROBE', 'PROCEDURE', 'PUBLIC', 'RANGE', 'RAW', 'REALM', 'REDUCE', 'RENAME', 'RESPECT', 'RETURN', 'RETURNING', 'REVOKE', 'RIGHT', 'ROLE', 'ROLLBACK', 'ROW', 'ROWS', 'SATISFIES', 'SAVEPOINT', 'SCHEMA', 'SCOPE', 'SELECT', 'SELF', 'SEMI', 'SET', 'SHOW', 'SOME', 'START', 'STATISTICS', 'STRING', 'SYSTEM', 'THEN', 'TIES', 'TO', 'TRAN', 'TRANSACTION', 'TRIGGER', 'TRUE', 'TRUNCATE', 'UNBOUNDED', 'UNDER', 'UNION', 'UNIQUE', 'UNKNOWN', 'UNNEST', 'UNSET', 'UPDATE', 'UPSERT', 'USE', 'USER', 'USING', 'VALIDATE', 'VALUE', 'VALUED', 'VALUES', 'VIA', 'VIEW', 'WHEN', 'WHERE', 'WHILE', 'WINDOW', 'WITH', 'WITHIN', 'WORK', 'XOR']\n});\n//# sourceMappingURL=n1ql.keywords.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport Formatter from '../../formatter/Formatter.js';\nimport Tokenizer from '../../lexer/Tokenizer.js';\nimport { functions } from './n1ql.functions.js';\nimport { keywords } from './n1ql.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([// queries\n'WITH', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'WINDOW', 'PARTITION BY', 'ORDER BY', 'LIMIT', 'OFFSET', // Data manipulation\n// - insert:\n'INSERT INTO', 'VALUES', // - update:\n'UPDATE', 'SET', // - delete:\n'DELETE FROM', // - merge:\n'MERGE INTO', 'WHEN [NOT] MATCHED THEN', 'UPDATE SET', 'INSERT', // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/reservedwords.html\n'ADVISE', 'ALTER INDEX', 'BEGIN TRANSACTION', 'BUILD INDEX', 'COMMIT TRANSACTION', 'CREATE COLLECTION', 'CREATE FUNCTION', 'CREATE INDEX', 'CREATE PRIMARY INDEX', 'CREATE SCOPE', 'DROP COLLECTION', 'DROP FUNCTION', 'DROP INDEX', 'DROP PRIMARY INDEX', 'DROP SCOPE', 'EXECUTE', 'EXECUTE FUNCTION', 'EXPLAIN', 'GRANT', 'INFER', 'PREPARE', 'RETURNING', 'REVOKE', 'ROLLBACK TRANSACTION', 'SAVEPOINT', 'SET TRANSACTION', 'UPDATE STATISTICS', 'UPSERT', // other\n'LET', 'NEST', 'SET CURRENT SCHEMA', 'SET SCHEMA', 'SHOW', 'UNNEST', 'USE KEYS']);\nconst reservedSetOperations = expandPhrases(['UNION [ALL]', 'EXCEPT [ALL]', 'INTERSECT [ALL]']);\nconst reservedJoins = expandPhrases(['JOIN', '{LEFT | RIGHT} [OUTER] JOIN', 'INNER JOIN']);\nconst reservedPhrases = expandPhrases(['{ROWS | RANGE | GROUPS} BETWEEN']); // For reference: http://docs.couchbase.com.s3-website-us-west-1.amazonaws.com/server/6.0/n1ql/n1ql-language-reference/index.html\n\nexport default class N1qlFormatter extends Formatter {\n  tokenizer() {\n    return new Tokenizer({\n      reservedClauses,\n      reservedSelect,\n      reservedSetOperations,\n      reservedJoins,\n      reservedPhrases,\n      supportsXor: true,\n      reservedKeywords: keywords,\n      reservedFunctionNames: functions,\n      // NOTE: single quotes are actually not supported in N1QL,\n      // but we support them anyway as all other SQL dialects do,\n      // which simplifies writing tests that are shared between all dialects.\n      stringTypes: ['\"\"-bs', \"''-bs\"],\n      identTypes: ['``'],\n      extraParens: ['[]', '{}'],\n      paramTypes: {\n        positional: true,\n        numbered: ['$'],\n        named: ['$']\n      },\n      lineCommentTypes: ['#', '--'],\n      operators: ['%', '==', ':', '||']\n    });\n  }\n\n}\n//# sourceMappingURL=n1ql.formatter.js.map","import { flatKeywordList } from '../../utils.js';\nexport const keywords = flatKeywordList({\n  // https://docs.oracle.com/cd/B19306_01/appdev.102/b14261/reservewords.htm\n  all: [// 'A',\n  'ADD', 'AGENT', 'AGGREGATE', 'ALL', 'ALTER', 'AND', 'ANY', 'ARRAY', 'ARROW', 'AS', 'ASC', 'AT', 'ATTRIBUTE', 'AUTHID', 'AVG', 'BEGIN', 'BETWEEN', 'BFILE_BASE', 'BINARY', 'BLOB_BASE', 'BLOCK', 'BODY', 'BOTH', 'BOUND', 'BULK', 'BY', 'BYTE', // 'C',\n  'CALL', 'CALLING', 'CASCADE', 'CASE', 'CHAR', 'CHAR_BASE', 'CHARACTER', 'CHARSET', 'CHARSETFORM', 'CHARSETID', 'CHECK', 'CLOB_BASE', 'CLOSE', 'CLUSTER', 'CLUSTERS', 'COLAUTH', 'COLLECT', 'COLUMNS', 'COMMENT', 'COMMIT', 'COMMITTED', 'COMPILED', 'COMPRESS', 'CONNECT', 'CONSTANT', 'CONSTRUCTOR', 'CONTEXT', 'CONVERT', 'COUNT', 'CRASH', 'CREATE', 'CURRENT', 'CURSOR', 'CUSTOMDATUM', 'DANGLING', 'DATA', 'DATE', 'DATE_BASE', 'DAY', 'DECIMAL', 'DECLARE', 'DEFAULT', 'DEFINE', 'DELETE', 'DESC', 'DETERMINISTIC', 'DISTINCT', 'DOUBLE', 'DROP', 'DURATION', 'ELEMENT', 'ELSE', 'ELSIF', 'EMPTY', 'END', 'ESCAPE', 'EXCEPT', 'EXCEPTION', 'EXCEPTIONS', 'EXCLUSIVE', 'EXECUTE', 'EXISTS', 'EXIT', 'EXTERNAL', 'FETCH', 'FINAL', 'FIXED', 'FLOAT', 'FOR', 'FORALL', 'FORCE', 'FORM', 'FROM', 'FUNCTION', 'GENERAL', 'GOTO', 'GRANT', 'GROUP', 'HASH', 'HAVING', 'HEAP', 'HIDDEN', 'HOUR', 'IDENTIFIED', 'IF', 'IMMEDIATE', 'IN', 'INCLUDING', 'INDEX', 'INDEXES', 'INDICATOR', 'INDICES', 'INFINITE', 'INSERT', 'INSTANTIABLE', 'INT', 'INTERFACE', 'INTERSECT', 'INTERVAL', 'INTO', 'INVALIDATE', 'IS', 'ISOLATION', 'JAVA', 'LANGUAGE', 'LARGE', 'LEADING', 'LENGTH', 'LEVEL', 'LIBRARY', 'LIKE', 'LIKE2', 'LIKE4', 'LIKEC', 'LIMIT', 'LIMITED', 'LOCAL', 'LOCK', 'LONG', 'LOOP', 'MAP', 'MAX', 'MAXLEN', 'MEMBER', 'MERGE', 'MIN', 'MINUS', 'MINUTE', 'MOD', 'MODE', 'MODIFY', 'MONTH', 'MULTISET', 'NAME', 'NAN', 'NATIONAL', 'NATIVE', 'NCHAR', 'NEW', 'NOCOMPRESS', 'NOCOPY', 'NOT', 'NOWAIT', 'NULL', 'NUMBER_BASE', 'OBJECT', 'OCICOLL', 'OCIDATE', 'OCIDATETIME', 'OCIDURATION', 'OCIINTERVAL', 'OCILOBLOCATOR', 'OCINUMBER', 'OCIRAW', 'OCIREF', 'OCIREFCURSOR', 'OCIROWID', 'OCISTRING', 'OCITYPE', 'OF', 'ON', 'ONLY', 'OPAQUE', 'OPEN', 'OPERATOR', 'OPTION', 'OR', 'ORACLE', 'ORADATA', 'ORDER', 'OVERLAPS', 'ORGANIZATION', 'ORLANY', 'ORLVARY', 'OTHERS', 'OUT', 'OVERRIDING', 'PACKAGE', 'PARALLEL_ENABLE', 'PARAMETER', 'PARAMETERS', 'PARTITION', 'PASCAL', 'PIPE', 'PIPELINED', 'PRAGMA', 'PRECISION', 'PRIOR', 'PRIVATE', 'PROCEDURE', 'PUBLIC', 'RAISE', 'RANGE', 'RAW', 'READ', 'RECORD', 'REF', 'REFERENCE', 'REM', 'REMAINDER', 'RENAME', 'RESOURCE', 'RESULT', 'RETURN', 'RETURNING', 'REVERSE', 'REVOKE', 'ROLLBACK', 'ROW', 'SAMPLE', 'SAVE', 'SAVEPOINT', 'SB1', 'SB2', 'SB4', 'SECOND', 'SEGMENT', 'SELECT', 'SELF', 'SEPARATE', 'SEQUENCE', 'SERIALIZABLE', 'SET', 'SHARE', 'SHORT', 'SIZE', 'SIZE_T', 'SOME', 'SPARSE', 'SQL', 'SQLCODE', 'SQLDATA', 'SQLNAME', 'SQLSTATE', 'STANDARD', 'START', 'STATIC', 'STDDEV', 'STORED', 'STRING', 'STRUCT', 'STYLE', 'SUBMULTISET', 'SUBPARTITION', 'SUBSTITUTABLE', 'SUBTYPE', 'SUM', 'SYNONYM', 'TABAUTH', 'TABLE', 'TDO', 'THE', 'THEN', 'TIME', 'TIMESTAMP', 'TIMEZONE_ABBR', 'TIMEZONE_HOUR', 'TIMEZONE_MINUTE', 'TIMEZONE_REGION', 'TO', 'TRAILING', 'TRANSAC', 'TRANSACTIONAL', 'TRUSTED', 'TYPE', 'UB1', 'UB2', 'UB4', 'UNDER', 'UNION', 'UNIQUE', 'UNSIGNED', 'UNTRUSTED', 'UPDATE', 'USE', 'USING', 'VALIST', 'VALUE', 'VALUES', 'VARIABLE', 'VARIANCE', 'VARRAY', 'VARYING', 'VIEW', 'VIEWS', 'VOID', 'WHEN', 'WHERE', 'WHILE', 'WITH', 'WORK', 'WRAPPED', 'WRITE', 'YEAR', 'ZONE']\n});\n//# sourceMappingURL=plsql.keywords.js.map","import { flatKeywordList } from '../../utils.js';\nexport const functions = flatKeywordList({\n  // https://docs.oracle.com/cd/B19306_01/server.102/b14200/functions001.htm\n  numeric: ['ABS', 'ACOS', 'ASIN', 'ATAN', 'ATAN2', 'BITAND', 'CEIL', 'COS', 'COSH', 'EXP', 'FLOOR', 'LN', 'LOG', 'MOD', 'NANVL', 'POWER', 'REMAINDER', 'ROUND', 'SIGN', 'SIN', 'SINH', 'SQRT', 'TAN', 'TANH', 'TRUNC', 'WIDTH_BUCKET'],\n  character: ['CHR', 'CONCAT', 'INITCAP', 'LOWER', 'LPAD', 'LTRIM', 'NLS_INITCAP', 'NLS_LOWER', 'NLSSORT', 'NLS_UPPER', 'REGEXP_REPLACE', 'REGEXP_SUBSTR', 'REPLACE', 'RPAD', 'RTRIM', 'SOUNDEX', 'SUBSTR', 'TRANSLATE', 'TREAT', 'TRIM', 'UPPER', 'NLS_CHARSET_DECL_LEN', 'NLS_CHARSET_ID', 'NLS_CHARSET_NAME', 'ASCII', 'INSTR', 'LENGTH', 'REGEXP_INSTR'],\n  datetime: ['ADD_MONTHS', 'CURRENT_DATE', 'CURRENT_TIMESTAMP', 'DBTIMEZONE', 'EXTRACT', 'FROM_TZ', 'LAST_DAY', 'LOCALTIMESTAMP', 'MONTHS_BETWEEN', 'NEW_TIME', 'NEXT_DAY', 'NUMTODSINTERVAL', 'NUMTOYMINTERVAL', 'ROUND', 'SESSIONTIMEZONE', 'SYS_EXTRACT_UTC', 'SYSDATE', 'SYSTIMESTAMP', 'TO_CHAR', 'TO_TIMESTAMP', 'TO_TIMESTAMP_TZ', 'TO_DSINTERVAL', 'TO_YMINTERVAL', 'TRUNC', 'TZ_OFFSET'],\n  comparison: ['GREATEST', 'LEAST'],\n  conversion: ['ASCIISTR', 'BIN_TO_NUM', 'CAST', 'CHARTOROWID', 'COMPOSE', 'CONVERT', 'DECOMPOSE', 'HEXTORAW', 'NUMTODSINTERVAL', 'NUMTOYMINTERVAL', 'RAWTOHEX', 'RAWTONHEX', 'ROWIDTOCHAR', 'ROWIDTONCHAR', 'SCN_TO_TIMESTAMP', 'TIMESTAMP_TO_SCN', 'TO_BINARY_DOUBLE', 'TO_BINARY_FLOAT', 'TO_CHAR', 'TO_CLOB', 'TO_DATE', 'TO_DSINTERVAL', 'TO_LOB', 'TO_MULTI_BYTE', 'TO_NCHAR', 'TO_NCLOB', 'TO_NUMBER', 'TO_DSINTERVAL', 'TO_SINGLE_BYTE', 'TO_TIMESTAMP', 'TO_TIMESTAMP_TZ', 'TO_YMINTERVAL', 'TO_YMINTERVAL', 'TRANSLATE', 'UNISTR'],\n  largeObject: ['BFILENAME', 'EMPTY_BLOB,', 'EMPTY_CLOB'],\n  collection: ['CARDINALITY', 'COLLECT', 'POWERMULTISET', 'POWERMULTISET_BY_CARDINALITY', 'SET'],\n  hierarchical: ['SYS_CONNECT_BY_PATH'],\n  dataMining: ['CLUSTER_ID', 'CLUSTER_PROBABILITY', 'CLUSTER_SET', 'FEATURE_ID', 'FEATURE_SET', 'FEATURE_VALUE', 'PREDICTION', 'PREDICTION_COST', 'PREDICTION_DETAILS', 'PREDICTION_PROBABILITY', 'PREDICTION_SET'],\n  xml: ['APPENDCHILDXML', 'DELETEXML', 'DEPTH', 'EXTRACT', 'EXISTSNODE', 'EXTRACTVALUE', 'INSERTCHILDXML', 'INSERTXMLBEFORE', 'PATH', 'SYS_DBURIGEN', 'SYS_XMLAGG', 'SYS_XMLGEN', 'UPDATEXML', 'XMLAGG', 'XMLCDATA', 'XMLCOLATTVAL', 'XMLCOMMENT', 'XMLCONCAT', 'XMLFOREST', 'XMLPARSE', 'XMLPI', 'XMLQUERY', 'XMLROOT', 'XMLSEQUENCE', 'XMLSERIALIZE', 'XMLTABLE', 'XMLTRANSFORM'],\n  encoding: ['DECODE', 'DUMP', 'ORA_HASH', 'VSIZE'],\n  nullRelated: ['COALESCE', 'LNNVL', 'NULLIF', 'NVL', 'NVL2'],\n  env: ['SYS_CONTEXT', 'SYS_GUID', 'SYS_TYPEID', 'UID', 'USER', 'USERENV'],\n  aggregate: ['AVG', 'COLLECT', 'CORR', 'CORR_S', 'CORR_K', 'COUNT', 'COVAR_POP', 'COVAR_SAMP', 'CUME_DIST', 'DENSE_RANK', 'FIRST', 'GROUP_ID', 'GROUPING', 'GROUPING_ID', 'LAST', 'MAX', 'MEDIAN', 'MIN', 'PERCENTILE_CONT', 'PERCENTILE_DISC', 'PERCENT_RANK', 'RANK', 'REGR_SLOPE', 'REGR_INTERCEPT', 'REGR_COUNT', 'REGR_R2', 'REGR_AVGX', 'REGR_AVGY', 'REGR_SXX', 'REGR_SYY', 'REGR_SXY', 'STATS_BINOMIAL_TEST', 'STATS_CROSSTAB', 'STATS_F_TEST', 'STATS_KS_TEST', 'STATS_MODE', 'STATS_MW_TEST', 'STATS_ONE_WAY_ANOVA', 'STATS_T_TEST_ONE', 'STATS_T_TEST_PAIRED', 'STATS_T_TEST_INDEP', 'STATS_T_TEST_INDEPU', 'STATS_WSR_TEST', 'STDDEV', 'STDDEV_POP', 'STDDEV_SAMP', 'SUM', 'VAR_POP', 'VAR_SAMP', 'VARIANCE'],\n  // Windowing functions (minus the ones already listed in aggregates)\n  window: ['FIRST_VALUE', 'LAG', 'LAST_VALUE', 'LEAD', 'NTILE', 'RATIO_TO_REPORT', 'ROW_NUMBER'],\n  objectReference: ['DEREF', 'MAKE_REF', 'REF', 'REFTOHEX', 'VALUE'],\n  model: ['CV', 'ITERATION_NUMBER', 'PRESENTNNV', 'PRESENTV', 'PREVIOUS'],\n  // Parameterized data types\n  // https://docs.oracle.com/en/database/oracle/oracle-database/19/sqlrf/Data-Types.html\n  dataTypes: [// Oracle builtin data types\n  'VARCHAR2', 'NVARCHAR2', 'NUMBER', 'FLOAT', 'TIMESTAMP', 'INTERVAL YEAR', 'INTERVAL DAY', 'RAW', 'UROWID', 'NCHAR', // ANSI Data Types\n  'CHARACTER', 'CHAR', 'CHARACTER VARYING', 'CHAR VARYING', 'NATIONAL CHARACTER', 'NATIONAL CHAR', 'NATIONAL CHARACTER VARYING', 'NATIONAL CHAR VARYING', 'NCHAR VARYING', 'NUMERIC', 'DECIMAL', 'FLOAT', // SQL/DS and DB2 Data Types\n  'VARCHAR']\n});\n//# sourceMappingURL=plsql.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport Formatter from '../../formatter/Formatter.js';\nimport Tokenizer from '../../lexer/Tokenizer.js';\nimport { EOF_TOKEN, isReserved, isToken, TokenType } from '../../lexer/token.js';\nimport { keywords } from './plsql.keywords.js';\nimport { functions } from './plsql.functions.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT | UNIQUE]']);\nconst reservedClauses = expandPhrases([// queries\n'WITH', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'PARTITION BY', 'ORDER [SIBLINGS] BY', 'OFFSET', 'FETCH {FIRST | NEXT}', 'FOR UPDATE', // Data manipulation\n// - insert:\n'INSERT [INTO | ALL INTO]', 'VALUES', // - update:\n'UPDATE [ONLY]', 'SET', // - delete:\n'DELETE FROM [ONLY]', // - truncate:\n'TRUNCATE TABLE', // - merge:\n'MERGE [INTO]', 'WHEN [NOT] MATCHED [THEN]', 'UPDATE SET', // Data definition\n'CREATE [OR REPLACE] [NO FORCE | FORCE] [EDITIONING | EDITIONABLE | EDITIONABLE EDITIONING | NONEDITIONABLE] VIEW', 'CREATE MATERIALIZED VIEW', 'CREATE [GLOBAL TEMPORARY | PRIVATE TEMPORARY | SHARDED | DUPLICATED | IMMUTABLE BLOCKCHAIN | BLOCKCHAIN | IMMUTABLE] TABLE', 'DROP TABLE', // - alter table:\n'ALTER TABLE', 'ADD', 'DROP {COLUMN | UNUSED COLUMNS | COLUMNS CONTINUE}', 'MODIFY', 'RENAME TO', 'RENAME COLUMN', // other\n'BEGIN', 'CONNECT BY', 'DECLARE', 'EXCEPT', 'EXCEPTION', 'LOOP', 'RETURNING', 'START WITH', 'SET SCHEMA']);\nconst reservedSetOperations = expandPhrases(['UNION [ALL]', 'EXCEPT', 'INTERSECT']);\nconst reservedJoins = expandPhrases(['JOIN', '{LEFT | RIGHT | FULL} [OUTER] JOIN', '{INNER | CROSS} JOIN', 'NATURAL [INNER] JOIN', 'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN', // non-standard joins\n'{CROSS | OUTER} APPLY']);\nconst reservedPhrases = expandPhrases(['ON {UPDATE | DELETE} [SET NULL]', 'ON COMMIT', '{ROWS | RANGE} BETWEEN']);\nexport default class PlSqlFormatter extends Formatter {\n  tokenizer() {\n    return new Tokenizer({\n      reservedClauses,\n      reservedSelect,\n      reservedSetOperations,\n      reservedJoins,\n      reservedPhrases,\n      supportsXor: true,\n      reservedKeywords: keywords,\n      reservedFunctionNames: functions,\n      stringTypes: [{\n        quote: \"''-qq\",\n        prefixes: ['N']\n      }, {\n        quote: \"q''\",\n        prefixes: ['N']\n      }],\n      // PL/SQL doesn't actually support escaping of quotes in identifiers,\n      // but for the sake of simpler testing we'll support this anyway\n      // as all other SQL dialects with \"identifiers\" do.\n      identTypes: [`\"\"-qq`],\n      identChars: {\n        rest: '$#'\n      },\n      variableTypes: [{\n        regex: '&{1,2}[A-Za-z][A-Za-z0-9_$#]*'\n      }],\n      paramTypes: {\n        numbered: [':'],\n        named: [':']\n      },\n      paramChars: {},\n      // Empty object used on purpose to not allow $ and # chars as specified in identChars\n      operators: ['**', ':=', '%', '~=', '^=', // '..', // Conflicts with float followed by dot (so \"2..3\" gets parsed as [\"2.\", \".\", \"3\"])\n      '>>', '<<', '=>', '@', '||'],\n      postProcess\n    });\n  }\n\n  formatOptions() {\n    return {\n      alwaysDenseOperators: ['@']\n    };\n  }\n\n}\n\nfunction postProcess(tokens) {\n  let previousReservedToken = EOF_TOKEN;\n  return tokens.map(token => {\n    // BY [SET]\n    if (isToken.SET(token) && isToken.BY(previousReservedToken)) {\n      return { ...token,\n        type: TokenType.RESERVED_KEYWORD\n      };\n    }\n\n    if (isReserved(token.type)) {\n      previousReservedToken = token;\n    }\n\n    return token;\n  });\n}\n//# sourceMappingURL=plsql.formatter.js.map","import { flatKeywordList } from '../../utils.js';\nexport const functions = flatKeywordList({\n  // https://www.postgresql.org/docs/14/functions.html\n  //\n  // https://www.postgresql.org/docs/14/functions-math.html\n  math: ['ABS', 'ACOS', 'ACOSD', 'ACOSH', 'ASIN', 'ASIND', 'ASINH', 'ATAN', 'ATAN2', 'ATAN2D', 'ATAND', 'ATANH', 'CBRT', 'CEIL', 'CEILING', 'COS', 'COSD', 'COSH', 'COT', 'COTD', 'DEGREES', 'DIV', 'EXP', 'FACTORIAL', 'FLOOR', 'GCD', 'LCM', 'LN', 'LOG', 'LOG10', 'MIN_SCALE', 'MOD', 'PI', 'POWER', 'RADIANS', 'RANDOM', 'ROUND', 'SCALE', 'SETSEED', 'SIGN', 'SIN', 'SIND', 'SINH', 'SQRT', 'TAN', 'TAND', 'TANH', 'TRIM_SCALE', 'TRUNC', 'WIDTH_BUCKET'],\n  // https://www.postgresql.org/docs/14/functions-string.html\n  string: ['ABS', 'ASCII', 'BIT_LENGTH', 'BTRIM', 'CHARACTER_LENGTH', 'CHAR_LENGTH', 'CHR', 'CONCAT', 'CONCAT_WS', 'FORMAT', 'INITCAP', 'LEFT', 'LENGTH', 'LOWER', 'LPAD', 'LTRIM', 'MD5', 'NORMALIZE', 'OCTET_LENGTH', 'OVERLAY', 'PARSE_IDENT', 'PG_CLIENT_ENCODING', 'POSITION', 'QUOTE_IDENT', 'QUOTE_LITERAL', 'QUOTE_NULLABLE', 'REGEXP_MATCH', 'REGEXP_MATCHES', 'REGEXP_REPLACE', 'REGEXP_SPLIT_TO_ARRAY', 'REGEXP_SPLIT_TO_TABLE', 'REPEAT', 'REPLACE', 'REVERSE', 'RIGHT', 'RPAD', 'RTRIM', 'SPLIT_PART', 'SPRINTF', 'STARTS_WITH', 'STRING_AGG', 'STRING_TO_ARRAY', 'STRING_TO_TABLE', 'STRPOS', 'SUBSTR', 'SUBSTRING', 'TO_ASCII', 'TO_HEX', 'TRANSLATE', 'TRIM', 'UNISTR', 'UPPER'],\n  // https://www.postgresql.org/docs/14/functions-binarystring.html\n  binary: ['BIT_COUNT', 'BIT_LENGTH', 'BTRIM', 'CONVERT', 'CONVERT_FROM', 'CONVERT_TO', 'DECODE', 'ENCODE', 'GET_BIT', 'GET_BYTE', 'LENGTH', 'LTRIM', 'MD5', 'OCTET_LENGTH', 'OVERLAY', 'POSITION', 'RTRIM', 'SET_BIT', 'SET_BYTE', 'SHA224', 'SHA256', 'SHA384', 'SHA512', 'STRING_AGG', 'SUBSTR', 'SUBSTRING', 'TRIM'],\n  // https://www.postgresql.org/docs/14/functions-bitstring.html\n  bitstring: ['BIT_COUNT', 'BIT_LENGTH', 'GET_BIT', 'LENGTH', 'OCTET_LENGTH', 'OVERLAY', 'POSITION', 'SET_BIT', 'SUBSTRING'],\n  // https://www.postgresql.org/docs/14/functions-matching.html\n  pattern: ['REGEXP_MATCH', 'REGEXP_MATCHES', 'REGEXP_REPLACE', 'REGEXP_SPLIT_TO_ARRAY', 'REGEXP_SPLIT_TO_TABLE'],\n  // https://www.postgresql.org/docs/14/functions-formatting.html\n  datatype: ['TO_CHAR', 'TO_DATE', 'TO_NUMBER', 'TO_TIMESTAMP'],\n  // https://www.postgresql.org/docs/14/functions-datetime.html\n  datetime: [// 'AGE',\n  'CLOCK_TIMESTAMP', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'DATE_BIN', 'DATE_PART', 'DATE_TRUNC', 'EXTRACT', 'ISFINITE', 'JUSTIFY_DAYS', 'JUSTIFY_HOURS', 'JUSTIFY_INTERVAL', 'LOCALTIME', 'LOCALTIMESTAMP', 'MAKE_DATE', 'MAKE_INTERVAL', 'MAKE_TIME', 'MAKE_TIMESTAMP', 'MAKE_TIMESTAMPTZ', 'NOW', 'PG_SLEEP', 'PG_SLEEP_FOR', 'PG_SLEEP_UNTIL', 'STATEMENT_TIMESTAMP', 'TIMEOFDAY', 'TO_TIMESTAMP', 'TRANSACTION_TIMESTAMP'],\n  // https://www.postgresql.org/docs/14/functions-enum.html\n  enum: ['ENUM_FIRST', 'ENUM_LAST', 'ENUM_RANGE'],\n  // https://www.postgresql.org/docs/14/functions-geometry.html\n  geometry: ['AREA', 'BOUND_BOX', 'BOX', 'CENTER', 'CIRCLE', 'DIAGONAL', 'DIAMETER', 'HEIGHT', 'ISCLOSED', 'ISOPEN', 'LENGTH', 'LINE', 'LSEG', 'NPOINTS', 'PATH', 'PCLOSE', 'POINT', 'POLYGON', 'POPEN', 'RADIUS', 'SLOPE', 'WIDTH'],\n  // https://www.postgresql.org/docs/14/functions-net.html\n  network: ['ABBREV', 'BROADCAST', 'FAMILY', 'HOST', 'HOSTMASK', 'INET_MERGE', 'INET_SAME_FAMILY', 'MACADDR8_SET7BIT', 'MASKLEN', 'NETMASK', 'NETWORK', 'SET_MASKLEN', 'TEXT', 'TRUNC'],\n  // https://www.postgresql.org/docs/14/functions-textsearch.html\n  textsearch: ['ARRAY_TO_TSVECTOR', 'GET_CURRENT_TS_CONFIG', 'JSONB_TO_TSVECTOR', 'JSON_TO_TSVECTOR', 'LENGTH', 'NUMNODE', 'PHRASETO_TSQUERY', 'PLAINTO_TSQUERY', 'QUERYTREE', 'SETWEIGHT', 'STRIP', 'TO_TSQUERY', 'TO_TSVECTOR', 'TSQUERY_PHRASE', 'TSVECTOR_TO_ARRAY', 'TS_DEBUG', 'TS_DELETE', 'TS_FILTER', 'TS_HEADLINE', 'TS_LEXIZE', 'TS_PARSE', 'TS_RANK', 'TS_RANK_CD', 'TS_REWRITE', 'TS_STAT', 'TS_TOKEN_TYPE', 'WEBSEARCH_TO_TSQUERY'],\n  // https://www.postgresql.org/docs/14/functions-uuid.html\n  uuid: ['UUID'],\n  // https://www.postgresql.org/docs/14/functions-xml.html\n  xml: ['CURSOR_TO_XML', 'CURSOR_TO_XMLSCHEMA', 'DATABASE_TO_XML', 'DATABASE_TO_XMLSCHEMA', 'DATABASE_TO_XML_AND_XMLSCHEMA', 'NEXTVAL', 'QUERY_TO_XML', 'QUERY_TO_XMLSCHEMA', 'QUERY_TO_XML_AND_XMLSCHEMA', 'SCHEMA_TO_XML', 'SCHEMA_TO_XMLSCHEMA', 'SCHEMA_TO_XML_AND_XMLSCHEMA', 'STRING', 'TABLE_TO_XML', 'TABLE_TO_XMLSCHEMA', 'TABLE_TO_XML_AND_XMLSCHEMA', 'XMLAGG', 'XMLCOMMENT', 'XMLCONCAT', 'XMLELEMENT', 'XMLEXISTS', 'XMLFOREST', 'XMLPARSE', 'XMLPI', 'XMLROOT', 'XMLSERIALIZE', 'XMLTABLE', 'XML_IS_WELL_FORMED', 'XML_IS_WELL_FORMED_CONTENT', 'XML_IS_WELL_FORMED_DOCUMENT', 'XPATH', 'XPATH_EXISTS'],\n  // https://www.postgresql.org/docs/14/functions-json.html\n  json: ['ARRAY_TO_JSON', 'JSONB_AGG', 'JSONB_ARRAY_ELEMENTS', 'JSONB_ARRAY_ELEMENTS_TEXT', 'JSONB_ARRAY_LENGTH', 'JSONB_BUILD_ARRAY', 'JSONB_BUILD_OBJECT', 'JSONB_EACH', 'JSONB_EACH_TEXT', 'JSONB_EXTRACT_PATH', 'JSONB_EXTRACT_PATH_TEXT', 'JSONB_INSERT', 'JSONB_OBJECT', 'JSONB_OBJECT_AGG', 'JSONB_OBJECT_KEYS', 'JSONB_PATH_EXISTS', 'JSONB_PATH_EXISTS_TZ', 'JSONB_PATH_MATCH', 'JSONB_PATH_MATCH_TZ', 'JSONB_PATH_QUERY', 'JSONB_PATH_QUERY_ARRAY', 'JSONB_PATH_QUERY_ARRAY_TZ', 'JSONB_PATH_QUERY_FIRST', 'JSONB_PATH_QUERY_FIRST_TZ', 'JSONB_PATH_QUERY_TZ', 'JSONB_POPULATE_RECORD', 'JSONB_POPULATE_RECORDSET', 'JSONB_PRETTY', 'JSONB_SET', 'JSONB_SET_LAX', 'JSONB_STRIP_NULLS', 'JSONB_TO_RECORD', 'JSONB_TO_RECORDSET', 'JSONB_TYPEOF', 'JSON_AGG', 'JSON_ARRAY_ELEMENTS', 'JSON_ARRAY_ELEMENTS_TEXT', 'JSON_ARRAY_LENGTH', 'JSON_BUILD_ARRAY', 'JSON_BUILD_OBJECT', 'JSON_EACH', 'JSON_EACH_TEXT', 'JSON_EXTRACT_PATH', 'JSON_EXTRACT_PATH_TEXT', 'JSON_OBJECT', 'JSON_OBJECT_AGG', 'JSON_OBJECT_KEYS', 'JSON_POPULATE_RECORD', 'JSON_POPULATE_RECORDSET', 'JSON_STRIP_NULLS', 'JSON_TO_RECORD', 'JSON_TO_RECORDSET', 'JSON_TYPEOF', 'ROW_TO_JSON', 'TO_JSON', 'TO_JSONB', 'TO_TIMESTAMP'],\n  // https://www.postgresql.org/docs/14/functions-sequence.html\n  sequence: ['CURRVAL', 'LASTVAL', 'NEXTVAL', 'SETVAL'],\n  // https://www.postgresql.org/docs/14/functions-conditional.html\n  conditional: [// 'CASE',\n  'COALESCE', 'GREATEST', 'LEAST', 'NULLIF'],\n  // https://www.postgresql.org/docs/14/functions-array.html\n  array: ['ARRAY_AGG', 'ARRAY_APPEND', 'ARRAY_CAT', 'ARRAY_DIMS', 'ARRAY_FILL', 'ARRAY_LENGTH', 'ARRAY_LOWER', 'ARRAY_NDIMS', 'ARRAY_POSITION', 'ARRAY_POSITIONS', 'ARRAY_PREPEND', 'ARRAY_REMOVE', 'ARRAY_REPLACE', 'ARRAY_TO_STRING', 'ARRAY_UPPER', 'CARDINALITY', 'STRING_TO_ARRAY', 'TRIM_ARRAY', 'UNNEST'],\n  // https://www.postgresql.org/docs/14/functions-range.html\n  range: ['ISEMPTY', 'LOWER', 'LOWER_INC', 'LOWER_INF', 'MULTIRANGE', 'RANGE_MERGE', 'UPPER', 'UPPER_INC', 'UPPER_INF'],\n  // https://www.postgresql.org/docs/14/functions-aggregate.html\n  aggregate: [// 'ANY',\n  'ARRAY_AGG', 'AVG', 'BIT_AND', 'BIT_OR', 'BIT_XOR', 'BOOL_AND', 'BOOL_OR', 'COALESCE', 'CORR', 'COUNT', 'COVAR_POP', 'COVAR_SAMP', 'CUME_DIST', 'DENSE_RANK', 'EVERY', 'GROUPING', 'JSONB_AGG', 'JSONB_OBJECT_AGG', 'JSON_AGG', 'JSON_OBJECT_AGG', 'MAX', 'MIN', 'MODE', 'PERCENTILE_CONT', 'PERCENTILE_DISC', 'PERCENT_RANK', 'RANGE_AGG', 'RANGE_INTERSECT_AGG', 'RANK', 'REGR_AVGX', 'REGR_AVGY', 'REGR_COUNT', 'REGR_INTERCEPT', 'REGR_R2', 'REGR_SLOPE', 'REGR_SXX', 'REGR_SXY', 'REGR_SYY', // 'SOME',\n  'STDDEV', 'STDDEV_POP', 'STDDEV_SAMP', 'STRING_AGG', 'SUM', 'TO_JSON', 'TO_JSONB', 'VARIANCE', 'VAR_POP', 'VAR_SAMP', 'XMLAGG'],\n  // https://www.postgresql.org/docs/14/functions-window.html\n  window: ['CUME_DIST', 'DENSE_RANK', 'FIRST_VALUE', 'LAG', 'LAST_VALUE', 'LEAD', 'NTH_VALUE', 'NTILE', 'PERCENT_RANK', 'RANK', 'ROW_NUMBER'],\n  // https://www.postgresql.org/docs/14/functions-srf.html\n  set: ['GENERATE_SERIES', 'GENERATE_SUBSCRIPTS'],\n  // https://www.postgresql.org/docs/14/functions-info.html\n  sysInfo: ['ACLDEFAULT', 'ACLEXPLODE', 'COL_DESCRIPTION', 'CURRENT_CATALOG', 'CURRENT_DATABASE', 'CURRENT_QUERY', 'CURRENT_ROLE', 'CURRENT_SCHEMA', 'CURRENT_SCHEMAS', 'CURRENT_USER', 'FORMAT_TYPE', 'HAS_ANY_COLUMN_PRIVILEGE', 'HAS_COLUMN_PRIVILEGE', 'HAS_DATABASE_PRIVILEGE', 'HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE', 'HAS_FUNCTION_PRIVILEGE', 'HAS_LANGUAGE_PRIVILEGE', 'HAS_SCHEMA_PRIVILEGE', 'HAS_SEQUENCE_PRIVILEGE', 'HAS_SERVER_PRIVILEGE', 'HAS_TABLESPACE_PRIVILEGE', 'HAS_TABLE_PRIVILEGE', 'HAS_TYPE_PRIVILEGE', 'INET_CLIENT_ADDR', 'INET_CLIENT_PORT', 'INET_SERVER_ADDR', 'INET_SERVER_PORT', 'MAKEACLITEM', 'OBJ_DESCRIPTION', 'PG_BACKEND_PID', 'PG_BLOCKING_PIDS', 'PG_COLLATION_IS_VISIBLE', 'PG_CONF_LOAD_TIME', 'PG_CONTROL_CHECKPOINT', 'PG_CONTROL_INIT', 'PG_CONTROL_SYSTEM', 'PG_CONVERSION_IS_VISIBLE', 'PG_CURRENT_LOGFILE', 'PG_CURRENT_SNAPSHOT', 'PG_CURRENT_XACT_ID', 'PG_CURRENT_XACT_ID_IF_ASSIGNED', 'PG_DESCRIBE_OBJECT', 'PG_FUNCTION_IS_VISIBLE', 'PG_GET_CATALOG_FOREIGN_KEYS', 'PG_GET_CONSTRAINTDEF', 'PG_GET_EXPR', 'PG_GET_FUNCTIONDEF', 'PG_GET_FUNCTION_ARGUMENTS', 'PG_GET_FUNCTION_IDENTITY_ARGUMENTS', 'PG_GET_FUNCTION_RESULT', 'PG_GET_INDEXDEF', 'PG_GET_KEYWORDS', 'PG_GET_OBJECT_ADDRESS', 'PG_GET_OWNED_SEQUENCE', 'PG_GET_RULEDEF', 'PG_GET_SERIAL_SEQUENCE', 'PG_GET_STATISTICSOBJDEF', 'PG_GET_TRIGGERDEF', 'PG_GET_USERBYID', 'PG_GET_VIEWDEF', 'PG_HAS_ROLE', 'PG_IDENTIFY_OBJECT', 'PG_IDENTIFY_OBJECT_AS_ADDRESS', 'PG_INDEXAM_HAS_PROPERTY', 'PG_INDEX_COLUMN_HAS_PROPERTY', 'PG_INDEX_HAS_PROPERTY', 'PG_IS_OTHER_TEMP_SCHEMA', 'PG_JIT_AVAILABLE', 'PG_LAST_COMMITTED_XACT', 'PG_LISTENING_CHANNELS', 'PG_MY_TEMP_SCHEMA', 'PG_NOTIFICATION_QUEUE_USAGE', 'PG_OPCLASS_IS_VISIBLE', 'PG_OPERATOR_IS_VISIBLE', 'PG_OPFAMILY_IS_VISIBLE', 'PG_OPTIONS_TO_TABLE', 'PG_POSTMASTER_START_TIME', 'PG_SAFE_SNAPSHOT_BLOCKING_PIDS', 'PG_SNAPSHOT_XIP', 'PG_SNAPSHOT_XMAX', 'PG_SNAPSHOT_XMIN', 'PG_STATISTICS_OBJ_IS_VISIBLE', 'PG_TABLESPACE_DATABASES', 'PG_TABLESPACE_LOCATION', 'PG_TABLE_IS_VISIBLE', 'PG_TRIGGER_DEPTH', 'PG_TS_CONFIG_IS_VISIBLE', 'PG_TS_DICT_IS_VISIBLE', 'PG_TS_PARSER_IS_VISIBLE', 'PG_TS_TEMPLATE_IS_VISIBLE', 'PG_TYPEOF', 'PG_TYPE_IS_VISIBLE', 'PG_VISIBLE_IN_SNAPSHOT', 'PG_XACT_COMMIT_TIMESTAMP', 'PG_XACT_COMMIT_TIMESTAMP_ORIGIN', 'PG_XACT_STATUS', 'PQSERVERVERSION', 'ROW_SECURITY_ACTIVE', 'SESSION_USER', 'SHOBJ_DESCRIPTION', 'TO_REGCLASS', 'TO_REGCOLLATION', 'TO_REGNAMESPACE', 'TO_REGOPER', 'TO_REGOPERATOR', 'TO_REGPROC', 'TO_REGPROCEDURE', 'TO_REGROLE', 'TO_REGTYPE', 'TXID_CURRENT', 'TXID_CURRENT_IF_ASSIGNED', 'TXID_CURRENT_SNAPSHOT', 'TXID_SNAPSHOT_XIP', 'TXID_SNAPSHOT_XMAX', 'TXID_SNAPSHOT_XMIN', 'TXID_STATUS', 'TXID_VISIBLE_IN_SNAPSHOT', 'USER', 'VERSION'],\n  // https://www.postgresql.org/docs/14/functions-admin.html\n  sysAdmin: ['BRIN_DESUMMARIZE_RANGE', 'BRIN_SUMMARIZE_NEW_VALUES', 'BRIN_SUMMARIZE_RANGE', 'CONVERT_FROM', 'CURRENT_SETTING', 'GIN_CLEAN_PENDING_LIST', 'PG_ADVISORY_LOCK', 'PG_ADVISORY_LOCK_SHARED', 'PG_ADVISORY_UNLOCK', 'PG_ADVISORY_UNLOCK_ALL', 'PG_ADVISORY_UNLOCK_SHARED', 'PG_ADVISORY_XACT_LOCK', 'PG_ADVISORY_XACT_LOCK_SHARED', 'PG_BACKUP_START_TIME', 'PG_CANCEL_BACKEND', 'PG_COLLATION_ACTUAL_VERSION', 'PG_COLUMN_COMPRESSION', 'PG_COLUMN_SIZE', 'PG_COPY_LOGICAL_REPLICATION_SLOT', 'PG_COPY_PHYSICAL_REPLICATION_SLOT', 'PG_CREATE_LOGICAL_REPLICATION_SLOT', 'PG_CREATE_PHYSICAL_REPLICATION_SLOT', 'PG_CREATE_RESTORE_POINT', 'PG_CURRENT_WAL_FLUSH_LSN', 'PG_CURRENT_WAL_INSERT_LSN', 'PG_CURRENT_WAL_LSN', 'PG_DATABASE_SIZE', 'PG_DROP_REPLICATION_SLOT', 'PG_EXPORT_SNAPSHOT', 'PG_FILENODE_RELATION', 'PG_GET_WAL_REPLAY_PAUSE_STATE', 'PG_IMPORT_SYSTEM_COLLATIONS', 'PG_INDEXES_SIZE', 'PG_IS_IN_BACKUP', 'PG_IS_IN_RECOVERY', 'PG_IS_WAL_REPLAY_PAUSED', 'PG_LAST_WAL_RECEIVE_LSN', 'PG_LAST_WAL_REPLAY_LSN', 'PG_LAST_XACT_REPLAY_TIMESTAMP', 'PG_LOGICAL_EMIT_MESSAGE', 'PG_LOGICAL_SLOT_GET_BINARY_CHANGES', 'PG_LOGICAL_SLOT_GET_CHANGES', 'PG_LOGICAL_SLOT_PEEK_BINARY_CHANGES', 'PG_LOGICAL_SLOT_PEEK_CHANGES', 'PG_LOG_BACKEND_MEMORY_CONTEXTS', 'PG_LS_ARCHIVE_STATUSDIR', 'PG_LS_DIR', 'PG_LS_LOGDIR', 'PG_LS_TMPDIR', 'PG_LS_WALDIR', 'PG_PARTITION_ANCESTORS', 'PG_PARTITION_ROOT', 'PG_PARTITION_TREE', 'PG_PROMOTE', 'PG_READ_BINARY_FILE', 'PG_READ_FILE', 'PG_RELATION_FILENODE', 'PG_RELATION_FILEPATH', 'PG_RELATION_SIZE', 'PG_RELOAD_CONF', 'PG_REPLICATION_ORIGIN_ADVANCE', 'PG_REPLICATION_ORIGIN_CREATE', 'PG_REPLICATION_ORIGIN_DROP', 'PG_REPLICATION_ORIGIN_OID', 'PG_REPLICATION_ORIGIN_PROGRESS', 'PG_REPLICATION_ORIGIN_SESSION_IS_SETUP', 'PG_REPLICATION_ORIGIN_SESSION_PROGRESS', 'PG_REPLICATION_ORIGIN_SESSION_RESET', 'PG_REPLICATION_ORIGIN_SESSION_SETUP', 'PG_REPLICATION_ORIGIN_XACT_RESET', 'PG_REPLICATION_ORIGIN_XACT_SETUP', 'PG_REPLICATION_SLOT_ADVANCE', 'PG_ROTATE_LOGFILE', 'PG_SIZE_BYTES', 'PG_SIZE_PRETTY', 'PG_START_BACKUP', 'PG_STAT_FILE', 'PG_STOP_BACKUP', 'PG_SWITCH_WAL', 'PG_TABLESPACE_SIZE', 'PG_TABLE_SIZE', 'PG_TERMINATE_BACKEND', 'PG_TOTAL_RELATION_SIZE', 'PG_TRY_ADVISORY_LOCK', 'PG_TRY_ADVISORY_LOCK_SHARED', 'PG_TRY_ADVISORY_XACT_LOCK', 'PG_TRY_ADVISORY_XACT_LOCK_SHARED', 'PG_WALFILE_NAME', 'PG_WALFILE_NAME_OFFSET', 'PG_WAL_LSN_DIFF', 'PG_WAL_REPLAY_PAUSE', 'PG_WAL_REPLAY_RESUME', 'SET_CONFIG'],\n  // https://www.postgresql.org/docs/14/functions-trigger.html\n  trigger: ['SUPPRESS_REDUNDANT_UPDATES_TRIGGER', 'TSVECTOR_UPDATE_TRIGGER', 'TSVECTOR_UPDATE_TRIGGER_COLUMN'],\n  // https://www.postgresql.org/docs/14/functions-event-triggers.html\n  eventTrigger: ['PG_EVENT_TRIGGER_DDL_COMMANDS', 'PG_EVENT_TRIGGER_DROPPED_OBJECTS', 'PG_EVENT_TRIGGER_TABLE_REWRITE_OID', 'PG_EVENT_TRIGGER_TABLE_REWRITE_REASON', 'PG_GET_OBJECT_ADDRESS'],\n  // https://www.postgresql.org/docs/14/functions-statistics.html\n  stats: ['PG_MCV_LIST_ITEMS'],\n  cast: ['CAST'],\n  // Parameterized data types\n  // https://www.postgresql.org/docs/current/datatype.html\n  dataTypes: ['BIT', 'BIT VARYING', 'CHARACTER', 'CHARACTER VARYING', 'VARCHAR', 'CHAR', 'DECIMAL', 'NUMERIC', 'TIME', 'TIMESTAMP', 'ENUM']\n});\n//# sourceMappingURL=postgresql.functions.js.map","import { flatKeywordList } from '../../utils.js';\nexport const keywords = flatKeywordList({\n  // https://www.postgresql.org/docs/14/sql-keywords-appendix.html\n  all: ['ABORT', 'ABSOLUTE', 'ACCESS', 'ACTION', 'ADD', 'ADMIN', 'AFTER', 'AGGREGATE', 'ALL', // reserved\n  'ALSO', 'ALTER', 'ALWAYS', 'ANALYSE', // reserved\n  'ANALYZE', // reserved\n  'AND', // reserved\n  'ANY', // reserved\n  'ARRAY', // reserved, requires AS\n  'AS', // reserved, requires AS\n  'ASC', // reserved\n  'ASENSITIVE', 'ASSERTION', 'ASSIGNMENT', 'ASYMMETRIC', // reserved\n  'AT', 'ATOMIC', 'ATTACH', 'ATTRIBUTE', 'AUTHORIZATION', // reserved (can be function or type)\n  'BACKWARD', 'BEFORE', 'BEGIN', 'BETWEEN', // (cannot be function or type)\n  'BIGINT', // (cannot be function or type)\n  'BINARY', // reserved (can be function or type)\n  'BIT', // (cannot be function or type)\n  'BOOLEAN', // (cannot be function or type)\n  'BOTH', // reserved\n  'BREADTH', 'BY', 'CACHE', 'CALL', 'CALLED', 'CASCADE', 'CASCADED', 'CASE', // reserved\n  'CAST', // reserved\n  'CATALOG', 'CHAIN', 'CHAR', // (cannot be function or type), requires AS\n  'CHARACTER', // (cannot be function or type), requires AS\n  'CHARACTERISTICS', 'CHECK', // reserved\n  'CHECKPOINT', 'CLASS', 'CLOSE', 'CLUSTER', 'COALESCE', // (cannot be function or type)\n  'COLLATE', // reserved\n  'COLLATION', // reserved (can be function or type)\n  'COLUMN', // reserved\n  'COLUMNS', 'COMMENT', 'COMMENTS', 'COMMIT', 'COMMITTED', 'COMPRESSION', 'CONCURRENTLY', // reserved (can be function or type)\n  'CONFIGURATION', 'CONFLICT', 'CONNECTION', 'CONSTRAINT', // reserved\n  'CONSTRAINTS', 'CONTENT', 'CONTINUE', 'CONVERSION', 'COPY', 'COST', 'CREATE', // reserved, requires AS\n  'CROSS', // reserved (can be function or type)\n  'CSV', 'CUBE', 'CURRENT', 'CURRENT_CATALOG', // reserved\n  'CURRENT_DATE', // reserved\n  'CURRENT_ROLE', // reserved\n  'CURRENT_SCHEMA', // reserved (can be function or type)\n  'CURRENT_TIME', // reserved\n  'CURRENT_TIMESTAMP', // reserved\n  'CURRENT_USER', // reserved\n  'CURSOR', 'CYCLE', 'DATA', 'DATABASE', 'DAY', // requires AS\n  'DEALLOCATE', 'DEC', // (cannot be function or type)\n  'DECIMAL', // (cannot be function or type)\n  'DECLARE', 'DEFAULT', // reserved\n  'DEFAULTS', 'DEFERRABLE', // reserved\n  'DEFERRED', 'DEFINER', 'DELETE', 'DELIMITER', 'DELIMITERS', 'DEPENDS', 'DEPTH', 'DESC', // reserved\n  'DETACH', 'DICTIONARY', 'DISABLE', 'DISCARD', 'DISTINCT', // reserved\n  'DO', // reserved\n  'DOCUMENT', 'DOMAIN', 'DOUBLE', 'DROP', 'EACH', 'ELSE', // reserved\n  'ENABLE', 'ENCODING', 'ENCRYPTED', 'END', // reserved\n  'ENUM', 'ESCAPE', 'EVENT', 'EXCEPT', // reserved, requires AS\n  'EXCLUDE', 'EXCLUDING', 'EXCLUSIVE', 'EXECUTE', 'EXISTS', // (cannot be function or type)\n  'EXPLAIN', 'EXPRESSION', 'EXTENSION', 'EXTERNAL', 'EXTRACT', // (cannot be function or type)\n  'FALSE', // reserved\n  'FAMILY', 'FETCH', // reserved, requires AS\n  'FILTER', // requires AS\n  'FINALIZE', 'FIRST', 'FLOAT', // (cannot be function or type)\n  'FOLLOWING', 'FOR', // reserved, requires AS\n  'FORCE', 'FOREIGN', // reserved\n  'FORWARD', 'FREEZE', // reserved (can be function or type)\n  'FROM', // reserved, requires AS\n  'FULL', // reserved (can be function or type)\n  'FUNCTION', 'FUNCTIONS', 'GENERATED', 'GLOBAL', 'GRANT', // reserved, requires AS\n  'GRANTED', 'GREATEST', // (cannot be function or type)\n  'GROUP', // reserved, requires AS\n  'GROUPING', // (cannot be function or type)\n  'GROUPS', 'HANDLER', 'HAVING', // reserved, requires AS\n  'HEADER', 'HOLD', 'HOUR', // requires AS\n  'IDENTITY', 'IF', 'ILIKE', // reserved (can be function or type)\n  'IMMEDIATE', 'IMMUTABLE', 'IMPLICIT', 'IMPORT', 'IN', // reserved\n  'INCLUDE', 'INCLUDING', 'INCREMENT', 'INDEX', 'INDEXES', 'INHERIT', 'INHERITS', 'INITIALLY', // reserved\n  'INLINE', 'INNER', // reserved (can be function or type)\n  'INOUT', // (cannot be function or type)\n  'INPUT', 'INSENSITIVE', 'INSERT', 'INSTEAD', 'INT', // (cannot be function or type)\n  'INTEGER', // (cannot be function or type)\n  'INTERSECT', // reserved, requires AS\n  'INTERVAL', // (cannot be function or type)\n  'INTO', // reserved, requires AS\n  'INVOKER', 'IS', // reserved (can be function or type)\n  'ISNULL', // reserved (can be function or type), requires AS\n  'ISOLATION', 'JOIN', // reserved (can be function or type)\n  'KEY', 'LABEL', 'LANGUAGE', 'LARGE', 'LAST', 'LATERAL', // reserved\n  'LEADING', // reserved\n  'LEAKPROOF', 'LEAST', // (cannot be function or type)\n  'LEFT', // reserved (can be function or type)\n  'LEVEL', 'LIKE', // reserved (can be function or type)\n  'LIMIT', // reserved, requires AS\n  'LISTEN', 'LOAD', 'LOCAL', 'LOCALTIME', // reserved\n  'LOCALTIMESTAMP', // reserved\n  'LOCATION', 'LOCK', 'LOCKED', 'LOGGED', 'MAPPING', 'MATCH', 'MATERIALIZED', 'MAXVALUE', 'METHOD', 'MINUTE', // requires AS\n  'MINVALUE', 'MODE', 'MONTH', // requires AS\n  'MOVE', 'NAME', 'NAMES', 'NATIONAL', // (cannot be function or type)\n  'NATURAL', // reserved (can be function or type)\n  'NCHAR', // (cannot be function or type)\n  'NEW', 'NEXT', 'NFC', 'NFD', 'NFKC', 'NFKD', 'NO', 'NONE', // (cannot be function or type)\n  'NORMALIZE', // (cannot be function or type)\n  'NORMALIZED', 'NOT', // reserved\n  'NOTHING', 'NOTIFY', 'NOTNULL', // reserved (can be function or type), requires AS\n  'NOWAIT', 'NULL', // reserved\n  'NULLIF', // (cannot be function or type)\n  'NULLS', 'NUMERIC', // (cannot be function or type)\n  'OBJECT', 'OF', 'OFF', 'OFFSET', // reserved, requires AS\n  'OIDS', 'OLD', 'ON', // reserved, requires AS\n  'ONLY', // reserved\n  'OPERATOR', 'OPTION', 'OPTIONS', 'OR', // reserved\n  'ORDER', // reserved, requires AS\n  'ORDINALITY', 'OTHERS', 'OUT', // (cannot be function or type)\n  'OUTER', // reserved (can be function or type)\n  'OVER', // requires AS\n  'OVERLAPS', // reserved (can be function or type), requires AS\n  'OVERLAY', // (cannot be function or type)\n  'OVERRIDING', 'OWNED', 'OWNER', 'PARALLEL', 'PARSER', 'PARTIAL', 'PARTITION', 'PASSING', 'PASSWORD', 'PLACING', // reserved\n  'PLANS', 'POLICY', 'POSITION', // (cannot be function or type)\n  'PRECEDING', 'PRECISION', // (cannot be function or type), requires AS\n  'PREPARE', 'PREPARED', 'PRESERVE', 'PRIMARY', // reserved\n  'PRIOR', 'PRIVILEGES', 'PROCEDURAL', 'PROCEDURE', 'PROCEDURES', 'PROGRAM', 'PUBLICATION', 'QUOTE', 'RANGE', 'READ', 'REAL', // (cannot be function or type)\n  'REASSIGN', 'RECHECK', 'RECURSIVE', 'REF', 'REFERENCES', // reserved\n  'REFERENCING', 'REFRESH', 'REINDEX', 'RELATIVE', 'RELEASE', 'RENAME', 'REPEATABLE', 'REPLACE', 'REPLICA', 'RESET', 'RESTART', 'RESTRICT', 'RETURN', 'RETURNING', // reserved, requires AS\n  'RETURNS', 'REVOKE', 'RIGHT', // reserved (can be function or type)\n  'ROLE', 'ROLLBACK', 'ROLLUP', 'ROUTINE', 'ROUTINES', 'ROW', // (cannot be function or type)\n  'ROWS', 'RULE', 'SAVEPOINT', 'SCHEMA', 'SCHEMAS', 'SCROLL', 'SEARCH', 'SECOND', // requires AS\n  'SECURITY', 'SELECT', // reserved\n  'SEQUENCE', 'SEQUENCES', 'SERIALIZABLE', 'SERVER', 'SESSION', 'SESSION_USER', // reserved\n  'SET', 'SETOF', // (cannot be function or type)\n  'SETS', 'SHARE', 'SHOW', 'SIMILAR', // reserved (can be function or type)\n  'SIMPLE', 'SKIP', 'SMALLINT', // (cannot be function or type)\n  'SNAPSHOT', 'SOME', // reserved\n  'SQL', 'STABLE', 'STANDALONE', 'START', 'STATEMENT', 'STATISTICS', 'STDIN', 'STDOUT', 'STORAGE', 'STORED', 'STRICT', 'STRIP', 'SUBSCRIPTION', 'SUBSTRING', // (cannot be function or type)\n  'SUPPORT', 'SYMMETRIC', // reserved\n  'SYSID', 'SYSTEM', 'TABLE', // reserved\n  'TABLES', 'TABLESAMPLE', // reserved (can be function or type)\n  'TABLESPACE', 'TEMP', 'TEMPLATE', 'TEMPORARY', 'TEXT', 'THEN', // reserved\n  'TIES', 'TIME', // (cannot be function or type)\n  'TIMESTAMP', // (cannot be function or type)\n  'TO', // reserved, requires AS\n  'TRAILING', // reserved\n  'TRANSACTION', 'TRANSFORM', 'TREAT', // (cannot be function or type)\n  'TRIGGER', 'TRIM', // (cannot be function or type)\n  'TRUE', // reserved\n  'TRUNCATE', 'TRUSTED', 'TYPE', 'TYPES', 'UESCAPE', 'UNBOUNDED', 'UNCOMMITTED', 'UNENCRYPTED', 'UNION', // reserved, requires AS\n  'UNIQUE', // reserved\n  'UNKNOWN', 'UNLISTEN', 'UNLOGGED', 'UNTIL', 'UPDATE', 'USER', // reserved\n  'USING', // reserved\n  'VACUUM', 'VALID', 'VALIDATE', 'VALIDATOR', 'VALUE', 'VALUES', // (cannot be function or type)\n  'VARCHAR', // (cannot be function or type)\n  'VARIADIC', // reserved\n  'VARYING', // requires AS\n  'VERBOSE', // reserved (can be function or type)\n  'VERSION', 'VIEW', 'VIEWS', 'VOLATILE', 'WHEN', // reserved\n  'WHERE', // reserved, requires AS\n  'WHITESPACE', 'WINDOW', // reserved, requires AS\n  'WITH', // reserved, requires AS\n  'WITHIN', // requires AS\n  'WITHOUT', // requires AS\n  'WORK', 'WRAPPER', 'WRITE', 'XML', 'XMLATTRIBUTES', // (cannot be function or type)\n  'XMLCONCAT', // (cannot be function or type)\n  'XMLELEMENT', // (cannot be function or type)\n  'XMLEXISTS', // (cannot be function or type)\n  'XMLFOREST', // (cannot be function or type)\n  'XMLNAMESPACES', // (cannot be function or type)\n  'XMLPARSE', // (cannot be function or type)\n  'XMLPI', // (cannot be function or type)\n  'XMLROOT', // (cannot be function or type)\n  'XMLSERIALIZE', // (cannot be function or type)\n  'XMLTABLE', // (cannot be function or type)\n  'YEAR', // requires AS\n  'YES', 'ZONE']\n});\n//# sourceMappingURL=postgresql.keywords.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport Formatter from '../../formatter/Formatter.js';\nimport Tokenizer from '../../lexer/Tokenizer.js';\nimport { functions } from './postgresql.functions.js';\nimport { keywords } from './postgresql.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([// queries\n'WITH [RECURSIVE]', 'FROM', 'WHERE', 'GROUP BY [ALL | DISTINCT]', 'HAVING', 'WINDOW', 'PARTITION BY', 'ORDER BY', 'LIMIT', 'OFFSET', 'FETCH {FIRST | NEXT}', // Data manipulation\n// - insert:\n'INSERT INTO', 'VALUES', // - update:\n'UPDATE [ONLY]', 'SET', 'WHERE CURRENT OF', // - delete:\n'DELETE FROM [ONLY]', // - truncate:\n'TRUNCATE [TABLE] [ONLY]', // Data definition\n'CREATE [OR REPLACE] [TEMP | TEMPORARY] [RECURSIVE] VIEW', 'CREATE MATERIALIZED VIEW [IF NOT EXISTS]', 'CREATE [GLOBAL | LOCAL] [TEMPORARY | TEMP | UNLOGGED] TABLE [IF NOT EXISTS]', 'DROP TABLE [IF EXISTS]', // - alter table:\n'ALTER TABLE [IF EXISTS] [ONLY]', 'ALTER TABLE ALL IN TABLESPACE', 'RENAME [COLUMN]', 'RENAME TO', 'ADD [COLUMN] [IF NOT EXISTS]', 'DROP [COLUMN] [IF EXISTS]', 'ALTER [COLUMN]', '[SET DATA] TYPE', // for alter column\n'{SET | DROP} DEFAULT', // for alter column\n'{SET | DROP} NOT NULL', // for alter column\n// https://www.postgresql.org/docs/14/sql-commands.html\n'ABORT', 'ALTER AGGREGATE', 'ALTER COLLATION', 'ALTER CONVERSION', 'ALTER DATABASE', 'ALTER DEFAULT PRIVILEGES', 'ALTER DOMAIN', 'ALTER EVENT TRIGGER', 'ALTER EXTENSION', 'ALTER FOREIGN DATA WRAPPER', 'ALTER FOREIGN TABLE', 'ALTER FUNCTION', 'ALTER GROUP', 'ALTER INDEX', 'ALTER LANGUAGE', 'ALTER LARGE OBJECT', 'ALTER MATERIALIZED VIEW', 'ALTER OPERATOR', 'ALTER OPERATOR CLASS', 'ALTER OPERATOR FAMILY', 'ALTER POLICY', 'ALTER PROCEDURE', 'ALTER PUBLICATION', 'ALTER ROLE', 'ALTER ROUTINE', 'ALTER RULE', 'ALTER SCHEMA', 'ALTER SEQUENCE', 'ALTER SERVER', 'ALTER STATISTICS', 'ALTER SUBSCRIPTION', 'ALTER SYSTEM', 'ALTER TABLESPACE', 'ALTER TEXT SEARCH CONFIGURATION', 'ALTER TEXT SEARCH DICTIONARY', 'ALTER TEXT SEARCH PARSER', 'ALTER TEXT SEARCH TEMPLATE', 'ALTER TRIGGER', 'ALTER TYPE', 'ALTER USER', 'ALTER USER MAPPING', 'ALTER VIEW', 'ANALYZE', 'BEGIN', 'CALL', 'CHECKPOINT', 'CLOSE', 'CLUSTER', 'COMMENT', 'COMMIT', 'COMMIT PREPARED', 'COPY', 'CREATE ACCESS METHOD', 'CREATE AGGREGATE', 'CREATE CAST', 'CREATE COLLATION', 'CREATE CONVERSION', 'CREATE DATABASE', 'CREATE DOMAIN', 'CREATE EVENT TRIGGER', 'CREATE EXTENSION', 'CREATE FOREIGN DATA WRAPPER', 'CREATE FOREIGN TABLE', 'CREATE FUNCTION', 'CREATE GROUP', 'CREATE INDEX', 'CREATE LANGUAGE', 'CREATE OPERATOR', 'CREATE OPERATOR CLASS', 'CREATE OPERATOR FAMILY', 'CREATE POLICY', 'CREATE PROCEDURE', 'CREATE PUBLICATION', 'CREATE ROLE', 'CREATE RULE', 'CREATE SCHEMA', 'CREATE SEQUENCE', 'CREATE SERVER', 'CREATE STATISTICS', 'CREATE SUBSCRIPTION', 'CREATE TABLESPACE', 'CREATE TEXT SEARCH CONFIGURATION', 'CREATE TEXT SEARCH DICTIONARY', 'CREATE TEXT SEARCH PARSER', 'CREATE TEXT SEARCH TEMPLATE', 'CREATE TRANSFORM', 'CREATE TRIGGER', 'CREATE TYPE', 'CREATE USER', 'CREATE USER MAPPING', 'DEALLOCATE', 'DECLARE', 'DISCARD', 'DO', 'DROP ACCESS METHOD', 'DROP AGGREGATE', 'DROP CAST', 'DROP COLLATION', 'DROP CONVERSION', 'DROP DATABASE', 'DROP DOMAIN', 'DROP EVENT TRIGGER', 'DROP EXTENSION', 'DROP FOREIGN DATA WRAPPER', 'DROP FOREIGN TABLE', 'DROP FUNCTION', 'DROP GROUP', 'DROP INDEX', 'DROP LANGUAGE', 'DROP MATERIALIZED VIEW', 'DROP OPERATOR', 'DROP OPERATOR CLASS', 'DROP OPERATOR FAMILY', 'DROP OWNED', 'DROP POLICY', 'DROP PROCEDURE', 'DROP PUBLICATION', 'DROP ROLE', 'DROP ROUTINE', 'DROP RULE', 'DROP SCHEMA', 'DROP SEQUENCE', 'DROP SERVER', 'DROP STATISTICS', 'DROP SUBSCRIPTION', 'DROP TABLESPACE', 'DROP TEXT SEARCH CONFIGURATION', 'DROP TEXT SEARCH DICTIONARY', 'DROP TEXT SEARCH PARSER', 'DROP TEXT SEARCH TEMPLATE', 'DROP TRANSFORM', 'DROP TRIGGER', 'DROP TYPE', 'DROP USER', 'DROP USER MAPPING', 'DROP VIEW', 'EXECUTE', 'EXPLAIN', 'FETCH', 'GRANT', 'IMPORT FOREIGN SCHEMA', 'LISTEN', 'LOAD', 'LOCK', 'MOVE', 'NOTIFY', 'PREPARE', 'PREPARE TRANSACTION', 'REASSIGN OWNED', 'REFRESH MATERIALIZED VIEW', 'REINDEX', 'RELEASE SAVEPOINT', 'RESET', 'RETURNING', 'REVOKE', 'ROLLBACK', 'ROLLBACK PREPARED', 'ROLLBACK TO SAVEPOINT', 'SAVEPOINT', 'SECURITY LABEL', 'SELECT INTO', 'SET CONSTRAINTS', 'SET ROLE', 'SET SESSION AUTHORIZATION', 'SET TRANSACTION', 'SHOW', 'START TRANSACTION', 'UNLISTEN', 'VACUUM', // other\n'AFTER', 'SET SCHEMA']);\nconst reservedSetOperations = expandPhrases(['UNION [ALL | DISTINCT]', 'EXCEPT [ALL | DISTINCT]', 'INTERSECT [ALL | DISTINCT]']);\nconst reservedJoins = expandPhrases(['JOIN', '{LEFT | RIGHT | FULL} [OUTER] JOIN', '{INNER | CROSS} JOIN', 'NATURAL [INNER] JOIN', 'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN']);\nconst reservedPhrases = expandPhrases(['ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]', '{ROWS | RANGE | GROUPS} BETWEEN', // https://www.postgresql.org/docs/current/datatype-datetime.html\n'{TIMESTAMP | TIME} {WITH | WITHOUT} TIME ZONE']); // https://www.postgresql.org/docs/14/index.html\n\nexport default class PostgreSqlFormatter extends Formatter {\n  tokenizer() {\n    return new Tokenizer({\n      reservedClauses,\n      reservedSelect,\n      reservedSetOperations,\n      reservedJoins,\n      reservedPhrases,\n      reservedKeywords: keywords,\n      reservedFunctionNames: functions,\n      nestedBlockComments: true,\n      extraParens: ['[]'],\n      stringTypes: ['$$', {\n        quote: \"''-qq\",\n        prefixes: ['U&']\n      }, {\n        quote: \"''-bs\",\n        prefixes: ['E'],\n        requirePrefix: true\n      }, {\n        quote: \"''-raw\",\n        prefixes: ['B', 'X'],\n        requirePrefix: true\n      }],\n      identTypes: [{\n        quote: '\"\"-qq',\n        prefixes: ['U&']\n      }],\n      identChars: {\n        rest: '$'\n      },\n      paramTypes: {\n        numbered: ['$']\n      },\n      operators: [// Arithmetic\n      '%', '^', '|/', '||/', '@', // Assignment\n      ':=', // Bitwise\n      '&', '|', '#', '~', '<<', '>>', // Byte comparison\n      '~>~', '~<~', '~>=~', '~<=~', // Geometric\n      '@-@', '@@', '##', '<->', '&&', '&<', '&>', '<<|', '&<|', '|>>', '|&>', '<^', '^>', '?#', '?-', '?|', '?-|', '?||', '@>', '<@', '~=', // JSON\n      '?', '@?', '?&', '->', '->>', '#>', '#>>', '#-', // Named function params\n      '=>', // Network address\n      '>>=', '<<=', // Pattern matching\n      '~~', '~~*', '!~~', '!~~*', // POSIX RegExp\n      '~', '~*', '!~', '!~*', // Range/multirange\n      '-|-', // String concatenation\n      '||', // Text search\n      '@@@', '!!', // Trigram/trigraph\n      '<%', '%>', '<<%', '%>>', '<<->', '<->>', '<<<->', '<->>>', // Type cast\n      '::']\n    });\n  }\n\n  formatOptions() {\n    return {\n      alwaysDenseOperators: ['::']\n    };\n  }\n\n}\n//# sourceMappingURL=postgresql.formatter.js.map","import { flatKeywordList } from '../../utils.js';\nexport const functions = flatKeywordList({\n  // https://docs.aws.amazon.com/redshift/latest/dg/c_Aggregate_Functions.html\n  aggregate: ['ANY_VALUE', 'APPROXIMATE PERCENTILE_DISC', 'AVG', 'COUNT', 'LISTAGG', 'MAX', 'MEDIAN', 'MIN', 'PERCENTILE_CONT', 'STDDEV_SAMP', 'STDDEV_POP', 'SUM', 'VAR_SAMP', 'VAR_POP'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/c_Array_Functions.html\n  array: ['array', 'array_concat', 'array_flatten', 'get_array_length', 'split_to_array', 'subarray'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/c_bitwise_aggregate_functions.html\n  bitwise: ['BIT_AND', 'BIT_OR', 'BOOL_AND', 'BOOL_OR'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/c_conditional_expressions.html\n  conditional: ['COALESCE', 'DECODE', 'GREATEST', 'LEAST', 'NVL', 'NVL2', 'NULLIF'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/Date_functions_header.html\n  dateTime: ['ADD_MONTHS', 'AT TIME ZONE', 'CONVERT_TIMEZONE', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'DATE_CMP', 'DATE_CMP_TIMESTAMP', 'DATE_CMP_TIMESTAMPTZ', 'DATE_PART_YEAR', 'DATEADD', 'DATEDIFF', 'DATE_PART', 'DATE_TRUNC', 'EXTRACT', 'GETDATE', 'INTERVAL_CMP', 'LAST_DAY', 'MONTHS_BETWEEN', 'NEXT_DAY', 'SYSDATE', 'TIMEOFDAY', 'TIMESTAMP_CMP', 'TIMESTAMP_CMP_DATE', 'TIMESTAMP_CMP_TIMESTAMPTZ', 'TIMESTAMPTZ_CMP', 'TIMESTAMPTZ_CMP_DATE', 'TIMESTAMPTZ_CMP_TIMESTAMP', 'TIMEZONE', 'TO_TIMESTAMP', 'TRUNC'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/geospatial-functions.html\n  spatial: ['AddBBox', 'DropBBox', 'GeometryType', 'ST_AddPoint', 'ST_Angle', 'ST_Area', 'ST_AsBinary', 'ST_AsEWKB', 'ST_AsEWKT', 'ST_AsGeoJSON', 'ST_AsText', 'ST_Azimuth', 'ST_Boundary', 'ST_Collect', 'ST_Contains', 'ST_ContainsProperly', 'ST_ConvexHull', 'ST_CoveredBy', 'ST_Covers', 'ST_Crosses', 'ST_Dimension', 'ST_Disjoint', 'ST_Distance', 'ST_DistanceSphere', 'ST_DWithin', 'ST_EndPoint', 'ST_Envelope', 'ST_Equals', 'ST_ExteriorRing', 'ST_Force2D', 'ST_Force3D', 'ST_Force3DM', 'ST_Force3DZ', 'ST_Force4D', 'ST_GeometryN', 'ST_GeometryType', 'ST_GeomFromEWKB', 'ST_GeomFromEWKT', 'ST_GeomFromText', 'ST_GeomFromWKB', 'ST_InteriorRingN', 'ST_Intersects', 'ST_IsPolygonCCW', 'ST_IsPolygonCW', 'ST_IsClosed', 'ST_IsCollection', 'ST_IsEmpty', 'ST_IsSimple', 'ST_IsValid', 'ST_Length', 'ST_LengthSphere', 'ST_Length2D', 'ST_LineFromMultiPoint', 'ST_LineInterpolatePoint', 'ST_M', 'ST_MakeEnvelope', 'ST_MakeLine', 'ST_MakePoint', 'ST_MakePolygon', 'ST_MemSize', 'ST_MMax', 'ST_MMin', 'ST_Multi', 'ST_NDims', 'ST_NPoints', 'ST_NRings', 'ST_NumGeometries', 'ST_NumInteriorRings', 'ST_NumPoints', 'ST_Perimeter', 'ST_Perimeter2D', 'ST_Point', 'ST_PointN', 'ST_Points', 'ST_Polygon', 'ST_RemovePoint', 'ST_Reverse', 'ST_SetPoint', 'ST_SetSRID', 'ST_Simplify', 'ST_SRID', 'ST_StartPoint', 'ST_Touches', 'ST_Within', 'ST_X', 'ST_XMax', 'ST_XMin', 'ST_Y', 'ST_YMax', 'ST_YMin', 'ST_Z', 'ST_ZMax', 'ST_ZMin', 'SupportsBBox'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/hash-functions.html\n  hash: ['CHECKSUM', 'FUNC_SHA1', 'FNV_HASH', 'MD5', 'SHA', 'SHA1', 'SHA2'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/hyperloglog-functions.html\n  hyperLogLog: ['HLL', 'HLL_CREATE_SKETCH', 'HLL_CARDINALITY', 'HLL_COMBINE'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/json-functions.html\n  json: ['IS_VALID_JSON', 'IS_VALID_JSON_ARRAY', 'JSON_ARRAY_LENGTH', 'JSON_EXTRACT_ARRAY_ELEMENT_TEXT', 'JSON_EXTRACT_PATH_TEXT', 'JSON_PARSE', 'JSON_SERIALIZE'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/Math_functions.html\n  math: ['ABS', 'ACOS', 'ASIN', 'ATAN', 'ATAN2', 'CBRT', 'CEILING', 'CEIL', 'COS', 'COT', 'DEGREES', 'DEXP', 'DLOG1', 'DLOG10', 'EXP', 'FLOOR', 'LN', 'LOG', 'MOD', 'PI', 'POWER', 'RADIANS', 'RANDOM', 'ROUND', 'SIN', 'SIGN', 'SQRT', 'TAN', 'TO_HEX', 'TRUNC'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/ml-function.html\n  machineLearning: ['EXPLAIN_MODEL'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/String_functions_header.html\n  string: ['ASCII', 'BPCHARCMP', 'BTRIM', 'BTTEXT_PATTERN_CMP', 'CHAR_LENGTH', 'CHARACTER_LENGTH', 'CHARINDEX', 'CHR', 'COLLATE', 'CONCAT', 'CRC32', 'DIFFERENCE', 'INITCAP', 'LEFT', 'RIGHT', 'LEN', 'LENGTH', 'LOWER', 'LPAD', 'RPAD', 'LTRIM', 'OCTETINDEX', 'OCTET_LENGTH', 'POSITION', 'QUOTE_IDENT', 'QUOTE_LITERAL', 'REGEXP_COUNT', 'REGEXP_INSTR', 'REGEXP_REPLACE', 'REGEXP_SUBSTR', 'REPEAT', 'REPLACE', 'REPLICATE', 'REVERSE', 'RTRIM', 'SOUNDEX', 'SPLIT_PART', 'STRPOS', 'STRTOL', 'SUBSTRING', 'TEXTLEN', 'TRANSLATE', 'TRIM', 'UPPER'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/c_Type_Info_Functions.html\n  superType: ['decimal_precision', 'decimal_scale', 'is_array', 'is_bigint', 'is_boolean', 'is_char', 'is_decimal', 'is_float', 'is_integer', 'is_object', 'is_scalar', 'is_smallint', 'is_varchar', 'json_typeof'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/c_Window_functions.html\n  window: ['AVG', 'COUNT', 'CUME_DIST', 'DENSE_RANK', 'FIRST_VALUE', 'LAST_VALUE', 'LAG', 'LEAD', 'LISTAGG', 'MAX', 'MEDIAN', 'MIN', 'NTH_VALUE', 'NTILE', 'PERCENT_RANK', 'PERCENTILE_CONT', 'PERCENTILE_DISC', 'RANK', 'RATIO_TO_REPORT', 'ROW_NUMBER', 'STDDEV_SAMP', 'STDDEV_POP', 'SUM', 'VAR_SAMP', 'VAR_POP'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/r_Data_type_formatting.html\n  dataType: ['CAST', 'CONVERT', 'TO_CHAR', 'TO_DATE', 'TO_NUMBER', 'TEXT_TO_INT_ALT', 'TEXT_TO_NUMERIC_ALT'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/r_System_administration_functions.html\n  sysAdmin: ['CHANGE_QUERY_PRIORITY', 'CHANGE_SESSION_PRIORITY', 'CHANGE_USER_PRIORITY', 'CURRENT_SETTING', 'PG_CANCEL_BACKEND', 'PG_TERMINATE_BACKEND', 'REBOOT_CLUSTER', 'SET_CONFIG'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/r_System_information_functions.html\n  sysInfo: ['CURRENT_AWS_ACCOUNT', 'CURRENT_DATABASE', 'CURRENT_NAMESPACE', 'CURRENT_SCHEMA', 'CURRENT_SCHEMAS', 'CURRENT_USER', 'CURRENT_USER_ID', 'HAS_ASSUMEROLE_PRIVILEGE', 'HAS_DATABASE_PRIVILEGE', 'HAS_SCHEMA_PRIVILEGE', 'HAS_TABLE_PRIVILEGE', 'PG_BACKEND_PID', 'PG_GET_COLS', 'PG_GET_GRANTEE_BY_IAM_ROLE', 'PG_GET_IAM_ROLE_BY_USER', 'PG_GET_LATE_BINDING_VIEW_COLS', 'PG_LAST_COPY_COUNT', 'PG_LAST_COPY_ID', 'PG_LAST_UNLOAD_ID', 'PG_LAST_QUERY_ID', 'PG_LAST_UNLOAD_COUNT', 'SESSION_USER', 'SLICE_NUM', 'USER', 'VERSION'],\n  dataTypes: ['DECIMAL', 'NUMERIC', 'CHAR', 'CHARACTER', 'VARCHAR', 'CHARACTER VARYING', 'NCHAR', 'NVARCHAR', 'VARBYTE']\n});\n//# sourceMappingURL=redshift.functions.js.map","import { flatKeywordList } from '../../utils.js';\nexport const keywords = flatKeywordList({\n  // https://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html\n  standard: ['AES128', 'AES256', 'ALL', 'ALLOWOVERWRITE', 'ANY', 'ARRAY', 'AS', 'ASC', 'AUTHORIZATION', 'BACKUP', 'BETWEEN', 'BINARY', 'BOTH', 'CHECK', 'COLUMN', 'CONSTRAINT', 'CREATE', 'CROSS', 'DEFAULT', 'DEFERRABLE', 'DEFLATE', 'DEFRAG', 'DESC', 'DISABLE', 'DISTINCT', 'DO', 'ENABLE', 'ENCODE', 'ENCRYPT', 'ENCRYPTION', 'EXPLICIT', 'FALSE', 'FOR', 'FOREIGN', 'FREEZE', 'FROM', 'FULL', 'GLOBALDICT256', 'GLOBALDICT64K', 'GROUP', 'IDENTITY', 'IGNORE', 'ILIKE', 'IN', 'INITIALLY', 'INNER', 'INTO', 'IS', 'ISNULL', 'LANGUAGE', 'LEADING', 'LIKE', 'LIMIT', 'LOCALTIME', 'LOCALTIMESTAMP', 'LUN', 'LUNS', 'MINUS', 'NATURAL', 'NEW', 'NOT', 'NOTNULL', 'NULL', 'NULLS', 'OFF', 'OFFLINE', 'OFFSET', 'OID', 'OLD', 'ON', 'ONLY', 'OPEN', 'ORDER', 'OUTER', 'OVERLAPS', 'PARALLEL', 'PARTITION', 'PERCENT', 'PERMISSIONS', 'PLACING', 'PRIMARY', 'RECOVER', 'REFERENCES', 'REJECTLOG', 'RESORT', 'RESPECT', 'RESTORE', 'SIMILAR', 'SNAPSHOT', 'SOME', 'SYSTEM', 'TABLE', 'TAG', 'TDES', 'THEN', 'TIMESTAMP', 'TO', 'TOP', 'TRAILING', 'TRUE', 'UNIQUE', 'USING', 'VERBOSE', 'WALLET', 'WITHOUT'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-data-conversion.html\n  dataConversionParams: ['ACCEPTANYDATE', 'ACCEPTINVCHARS', 'BLANKSASNULL', 'DATEFORMAT', 'EMPTYASNULL', 'ENCODING', 'ESCAPE', 'EXPLICIT_IDS', 'FILLRECORD', 'IGNOREBLANKLINES', 'IGNOREHEADER', 'REMOVEQUOTES', 'ROUNDEC', 'TIMEFORMAT', 'TRIMBLANKS', 'TRUNCATECOLUMNS'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-data-load.html\n  dataLoadParams: ['COMPROWS', 'COMPUPDATE', 'MAXERROR', 'NOLOAD', 'STATUPDATE'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-data-format.html\n  dataFormatParams: ['FORMAT', 'CSV', 'DELIMITER', 'FIXEDWIDTH', 'SHAPEFILE', 'AVRO', 'JSON', 'PARQUET', 'ORC'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-authorization.html\n  copyAuthParams: ['ACCESS_KEY_ID', 'CREDENTIALS', 'ENCRYPTED', 'IAM_ROLE', 'MASTER_SYMMETRIC_KEY', 'SECRET_ACCESS_KEY', 'SESSION_TOKEN'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-file-compression.html\n  copyCompressionParams: ['BZIP2', 'GZIP', 'LZOP', 'ZSTD'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/r_COPY-alphabetical-parm-list.html\n  copyMiscParams: ['MANIFEST', 'READRATIO', 'REGION', 'SSH'],\n  // https://docs.aws.amazon.com/redshift/latest/dg/c_Compression_encodings.html\n  compressionEncodings: ['RAW', 'AZ64', 'BYTEDICT', 'DELTA', 'DELTA32K', 'LZO', 'MOSTLY8', 'MOSTLY16', 'MOSTLY32', 'RUNLENGTH', 'TEXT255', 'TEXT32K'],\n  misc: [// CREATE EXTERNAL SCHEMA (https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_EXTERNAL_SCHEMA.html)\n  'CATALOG_ROLE', 'SECRET_ARN', 'EXTERNAL', // https://docs.aws.amazon.com/redshift/latest/dg/c_choosing_dist_sort.html\n  'AUTO', 'EVEN', 'KEY', 'PREDICATE', // ANALYZE | ANALYSE (https://docs.aws.amazon.com/redshift/latest/dg/r_ANALYZE.html)\n  // unknown\n  'COMPRESSION'],\n\n  /**\n   * Other keywords not included:\n   * STL: https://docs.aws.amazon.com/redshift/latest/dg/c_intro_STL_tables.html\n   * SVCS: https://docs.aws.amazon.com/redshift/latest/dg/svcs_views.html\n   * SVL: https://docs.aws.amazon.com/redshift/latest/dg/svl_views.html\n   * SVV: https://docs.aws.amazon.com/redshift/latest/dg/svv_views.html\n   */\n  // https://docs.aws.amazon.com/redshift/latest/dg/r_Character_types.html#r_Character_types-text-and-bpchar-types\n  dataTypes: ['BPCHAR', 'TEXT']\n});\n//# sourceMappingURL=redshift.keywords.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport Formatter from '../../formatter/Formatter.js';\nimport Tokenizer from '../../lexer/Tokenizer.js';\nimport { functions } from './redshift.functions.js';\nimport { keywords } from './redshift.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([// queries\n'WITH [RECURSIVE]', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'PARTITION BY', 'ORDER BY', 'LIMIT', 'OFFSET', // Data manipulation\n// - insert:\n'INSERT INTO', 'VALUES', // - update:\n'UPDATE', 'SET', // - delete:\n'DELETE [FROM]', // - truncate:\n'TRUNCATE [TABLE]', // Data definition\n'CREATE [OR REPLACE | MATERIALIZED] VIEW', 'CREATE [TEMPORARY | TEMP | LOCAL TEMPORARY | LOCAL TEMP] TABLE [IF NOT EXISTS]', 'DROP TABLE [IF EXISTS]', // - alter table:\n'ALTER TABLE', 'ALTER TABLE APPEND', 'ADD [COLUMN]', 'DROP [COLUMN]', 'RENAME TO', 'RENAME COLUMN', 'ALTER COLUMN', 'TYPE', // for alter column\n'ENCODE', // for alter column\n// https://docs.aws.amazon.com/redshift/latest/dg/c_SQL_commands.html\n'ABORT', 'ALTER DATABASE', 'ALTER DATASHARE', 'ALTER DEFAULT PRIVILEGES', 'ALTER GROUP', 'ALTER MATERIALIZED VIEW', 'ALTER PROCEDURE', 'ALTER SCHEMA', 'ALTER USER', 'ANALYSE', 'ANALYZE', 'ANALYSE COMPRESSION', 'ANALYZE COMPRESSION', 'BEGIN', 'CALL', 'CANCEL', 'CLOSE', 'COMMENT', 'COMMIT', 'COPY', 'CREATE DATABASE', 'CREATE DATASHARE', 'CREATE EXTERNAL FUNCTION', 'CREATE EXTERNAL SCHEMA', 'CREATE EXTERNAL TABLE', 'CREATE FUNCTION', 'CREATE GROUP', 'CREATE LIBRARY', 'CREATE MODEL', 'CREATE PROCEDURE', 'CREATE SCHEMA', 'CREATE USER', 'DEALLOCATE', 'DECLARE', 'DESC DATASHARE', 'DROP DATABASE', 'DROP DATASHARE', 'DROP FUNCTION', 'DROP GROUP', 'DROP LIBRARY', 'DROP MODEL', 'DROP MATERIALIZED VIEW', 'DROP PROCEDURE', 'DROP SCHEMA', 'DROP USER', 'DROP VIEW', 'DROP', 'EXECUTE', 'EXPLAIN', 'FETCH', 'GRANT', 'LOCK', 'PREPARE', 'REFRESH MATERIALIZED VIEW', 'RESET', 'REVOKE', 'ROLLBACK', 'SELECT INTO', 'SET SESSION AUTHORIZATION', 'SET SESSION CHARACTERISTICS', 'SHOW', 'SHOW EXTERNAL TABLE', 'SHOW MODEL', 'SHOW DATASHARES', 'SHOW PROCEDURE', 'SHOW TABLE', 'SHOW VIEW', 'START TRANSACTION', 'UNLOAD', 'VACUUM', // other\n'ALTER COLUMN']);\nconst reservedSetOperations = expandPhrases(['UNION [ALL]', 'EXCEPT', 'INTERSECT', 'MINUS']);\nconst reservedJoins = expandPhrases(['JOIN', '{LEFT | RIGHT | FULL} [OUTER] JOIN', '{INNER | CROSS} JOIN', 'NATURAL [INNER] JOIN', 'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN']);\nconst reservedPhrases = expandPhrases([// https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-data-conversion.html\n'NULL AS', // https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_EXTERNAL_SCHEMA.html\n'DATA CATALOG', 'HIVE METASTORE', // in window specifications\n'{ROWS | RANGE} BETWEEN']); // https://docs.aws.amazon.com/redshift/latest/dg/cm_chap_SQLCommandRef.html\n\nexport default class RedshiftFormatter extends Formatter {\n  tokenizer() {\n    return new Tokenizer({\n      reservedClauses,\n      reservedSelect,\n      reservedSetOperations,\n      reservedJoins,\n      reservedPhrases,\n      reservedKeywords: keywords,\n      reservedFunctionNames: functions,\n      stringTypes: [\"''-qq\"],\n      identTypes: [`\"\"-qq`],\n      identChars: {\n        first: '#'\n      },\n      paramTypes: {\n        numbered: ['$']\n      },\n      operators: ['^', '%', '@', '|/', '||/', '&', '|', // '#', conflicts with first char of identifier\n      '~', '<<', '>>', '||', '::']\n    });\n  }\n\n  formatOptions() {\n    return {\n      alwaysDenseOperators: ['::']\n    };\n  }\n\n}\n//# sourceMappingURL=redshift.formatter.js.map","import { flatKeywordList } from '../../utils.js';\nexport const keywords = flatKeywordList({\n  // https://deepkb.com/CO_000013/en/kb/IMPORT-fbfa59f0-2bf1-31fe-bb7b-0f9efe9932c6/spark-sql-keywords\n  all: ['ADD', 'AFTER', 'ALL', 'ALTER', 'ANALYZE', 'AND', 'ANTI', 'ANY', 'ARCHIVE', 'ARRAY', 'AS', 'ASC', 'AT', 'AUTHORIZATION', 'BETWEEN', 'BOTH', 'BUCKET', 'BUCKETS', 'BY', 'CACHE', 'CASCADE', 'CAST', 'CHANGE', 'CHECK', 'CLEAR', 'CLUSTER', 'CLUSTERED', 'CODEGEN', 'COLLATE', 'COLLECTION', 'COLUMN', 'COLUMNS', 'COMMENT', 'COMMIT', 'COMPACT', 'COMPACTIONS', 'COMPUTE', 'CONCATENATE', 'CONSTRAINT', 'COST', 'CREATE', 'CROSS', 'CUBE', 'CURRENT', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'DATA', 'DATABASE', 'DATABASES', 'DAY', 'DBPROPERTIES', 'DEFINED', 'DELETE', 'DELIMITED', 'DESC', 'DESCRIBE', 'DFS', 'DIRECTORIES', 'DIRECTORY', 'DISTINCT', 'DISTRIBUTE', 'DIV', 'DROP', 'ESCAPE', 'ESCAPED', 'EXCEPT', 'EXCHANGE', 'EXISTS', 'EXPORT', 'EXTENDED', 'EXTERNAL', 'EXTRACT', 'FALSE', 'FETCH', 'FIELDS', 'FILTER', 'FILEFORMAT', 'FIRST', 'FIRST_VALUE', 'FOLLOWING', 'FOR', 'FOREIGN', 'FORMAT', 'FORMATTED', 'FULL', 'FUNCTION', 'FUNCTIONS', 'GLOBAL', 'GRANT', 'GROUP', 'GROUPING', 'HOUR', 'IF', 'IGNORE', 'IMPORT', 'IN', 'INDEX', 'INDEXES', 'INNER', 'INPATH', 'INPUTFORMAT', 'INTERSECT', 'INTERVAL', 'INTO', 'IS', 'ITEMS', 'KEYS', 'LAST', 'LAST_VALUE', 'LATERAL', 'LAZY', 'LEADING', 'LEFT', 'LIKE', 'LINES', 'LIST', 'LOCAL', 'LOCATION', 'LOCK', 'LOCKS', 'LOGICAL', 'MACRO', 'MAP', 'MATCHED', 'MERGE', 'MINUTE', 'MONTH', 'MSCK', 'NAMESPACE', 'NAMESPACES', 'NATURAL', 'NO', 'NOT', 'NULL', 'NULLS', 'OF', 'ONLY', 'OPTION', 'OPTIONS', 'OR', 'ORDER', 'OUT', 'OUTER', 'OUTPUTFORMAT', 'OVER', 'OVERLAPS', 'OVERLAY', 'OVERWRITE', 'OWNER', 'PARTITION', 'PARTITIONED', 'PARTITIONS', 'PERCENT', 'PLACING', 'POSITION', 'PRECEDING', 'PRIMARY', 'PRINCIPALS', 'PROPERTIES', 'PURGE', 'QUERY', 'RANGE', 'RECORDREADER', 'RECORDWRITER', 'RECOVER', 'REDUCE', 'REFERENCES', 'RENAME', 'REPAIR', 'REPLACE', 'RESPECT', 'RESTRICT', 'REVOKE', 'RIGHT', 'RLIKE', 'ROLE', 'ROLES', 'ROLLBACK', 'ROLLUP', 'ROW', 'ROWS', 'SCHEMA', 'SECOND', 'SELECT', 'SEMI', 'SEPARATED', 'SERDE', 'SERDEPROPERTIES', 'SESSION_USER', 'SETS', 'SHOW', 'SKEWED', 'SOME', 'SORT', 'SORTED', 'START', 'STATISTICS', 'STORED', 'STRATIFY', 'STRUCT', 'SUBSTR', 'SUBSTRING', 'TABLE', 'TABLES', 'TBLPROPERTIES', 'TEMPORARY', 'TERMINATED', 'THEN', 'TO', 'TOUCH', 'TRAILING', 'TRANSACTION', 'TRANSACTIONS', 'TRIM', 'TRUE', 'TRUNCATE', 'UNARCHIVE', 'UNBOUNDED', 'UNCACHE', 'UNIQUE', 'UNKNOWN', 'UNLOCK', 'UNSET', 'USE', 'USER', 'USING', 'VIEW', 'WINDOW', 'YEAR', // other\n  'ANALYSE', 'ARRAY_ZIP', 'COALESCE', 'CONTAINS', 'CONVERT', 'DAYS', 'DAY_HOUR', 'DAY_MINUTE', 'DAY_SECOND', 'DECODE', 'DEFAULT', 'DISTINCTROW', 'ENCODE', 'EXPLODE', 'EXPLODE_OUTER', 'FIXED', 'GREATEST', 'GROUP_CONCAT', 'HOURS', 'HOUR_MINUTE', 'HOUR_SECOND', 'IFNULL', 'LEAST', 'LEVEL', 'MINUTE_SECOND', 'NULLIF', 'OFFSET', 'ON', 'OPTIMIZE', 'REGEXP', 'SEPARATOR', 'SIZE', 'STRING', 'TYPE', 'TYPES', 'UNSIGNED', 'VARIABLES', 'YEAR_MONTH']\n});\n//# sourceMappingURL=spark.keywords.js.map","import { flatKeywordList } from '../../utils.js';\nexport const functions = flatKeywordList({\n  // http://spark.apache.org/docs/latest/sql-ref-functions.html\n  //\n  // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#aggregate-functions\n  aggregate: [// 'ANY',\n  'APPROX_COUNT_DISTINCT', 'APPROX_PERCENTILE', 'AVG', 'BIT_AND', 'BIT_OR', 'BIT_XOR', 'BOOL_AND', 'BOOL_OR', 'COLLECT_LIST', 'COLLECT_SET', 'CORR', 'COUNT', 'COUNT', 'COUNT', 'COUNT_IF', 'COUNT_MIN_SKETCH', 'COVAR_POP', 'COVAR_SAMP', 'EVERY', 'FIRST', 'FIRST_VALUE', 'GROUPING', 'GROUPING_ID', 'KURTOSIS', 'LAST', 'LAST_VALUE', 'MAX', 'MAX_BY', 'MEAN', 'MIN', 'MIN_BY', 'PERCENTILE', 'PERCENTILE', 'PERCENTILE_APPROX', 'SKEWNESS', // 'SOME',\n  'STD', 'STDDEV', 'STDDEV_POP', 'STDDEV_SAMP', 'SUM', 'VAR_POP', 'VAR_SAMP', 'VARIANCE'],\n  // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#window-functions\n  window: ['CUME_DIST', 'DENSE_RANK', 'LAG', 'LEAD', 'NTH_VALUE', 'NTILE', 'PERCENT_RANK', 'RANK', 'ROW_NUMBER'],\n  // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#array-functions\n  array: ['ARRAY', 'ARRAY_CONTAINS', 'ARRAY_DISTINCT', 'ARRAY_EXCEPT', 'ARRAY_INTERSECT', 'ARRAY_JOIN', 'ARRAY_MAX', 'ARRAY_MIN', 'ARRAY_POSITION', 'ARRAY_REMOVE', 'ARRAY_REPEAT', 'ARRAY_UNION', 'ARRAYS_OVERLAP', 'ARRAYS_ZIP', 'FLATTEN', 'SEQUENCE', 'SHUFFLE', 'SLICE', 'SORT_ARRAY'],\n  // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#map-functions\n  map: ['ELEMENT_AT', 'ELEMENT_AT', 'MAP', 'MAP_CONCAT', 'MAP_ENTRIES', 'MAP_FROM_ARRAYS', 'MAP_FROM_ENTRIES', 'MAP_KEYS', 'MAP_VALUES', 'STR_TO_MAP'],\n  // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#date-and-timestamp-functions\n  datetime: ['ADD_MONTHS', 'CURRENT_DATE', 'CURRENT_DATE', 'CURRENT_TIMESTAMP', 'CURRENT_TIMESTAMP', 'CURRENT_TIMEZONE', 'DATE_ADD', 'DATE_FORMAT', 'DATE_FROM_UNIX_DATE', 'DATE_PART', 'DATE_SUB', 'DATE_TRUNC', 'DATEDIFF', 'DAY', 'DAYOFMONTH', 'DAYOFWEEK', 'DAYOFYEAR', 'EXTRACT', 'FROM_UNIXTIME', 'FROM_UTC_TIMESTAMP', 'HOUR', 'LAST_DAY', 'MAKE_DATE', 'MAKE_DT_INTERVAL', 'MAKE_INTERVAL', 'MAKE_TIMESTAMP', 'MAKE_YM_INTERVAL', 'MINUTE', 'MONTH', 'MONTHS_BETWEEN', 'NEXT_DAY', 'NOW', 'QUARTER', 'SECOND', 'SESSION_WINDOW', 'TIMESTAMP_MICROS', 'TIMESTAMP_MILLIS', 'TIMESTAMP_SECONDS', 'TO_DATE', 'TO_TIMESTAMP', 'TO_UNIX_TIMESTAMP', 'TO_UTC_TIMESTAMP', 'TRUNC', 'UNIX_DATE', 'UNIX_MICROS', 'UNIX_MILLIS', 'UNIX_SECONDS', 'UNIX_TIMESTAMP', 'WEEKDAY', 'WEEKOFYEAR', 'WINDOW', 'YEAR'],\n  // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#json-functions\n  json: ['FROM_JSON', 'GET_JSON_OBJECT', 'JSON_ARRAY_LENGTH', 'JSON_OBJECT_KEYS', 'JSON_TUPLE', 'SCHEMA_OF_JSON', 'TO_JSON'],\n  // http://spark.apache.org/docs/latest/api/sql/index.html\n  misc: ['ABS', 'ACOS', 'ACOSH', 'AGGREGATE', 'ARRAY_SORT', 'ASCII', 'ASIN', 'ASINH', 'ASSERT_TRUE', 'ATAN', 'ATAN2', 'ATANH', 'BASE64', 'BIGINT', 'BIN', 'BINARY', 'BIT_COUNT', 'BIT_GET', 'BIT_LENGTH', 'BOOLEAN', 'BROUND', 'BTRIM', 'CARDINALITY', 'CBRT', 'CEIL', 'CEILING', 'CHAR', 'CHAR_LENGTH', 'CHARACTER_LENGTH', 'CHR', 'CONCAT', 'CONCAT_WS', 'CONV', 'COS', 'COSH', 'COT', 'CRC32', 'CURRENT_CATALOG', 'CURRENT_DATABASE', 'CURRENT_USER', 'DATE', 'DECIMAL', 'DEGREES', 'DOUBLE', // 'E',\n  'ELT', 'EXP', 'EXPM1', 'FACTORIAL', 'FIND_IN_SET', 'FLOAT', 'FLOOR', 'FORALL', 'FORMAT_NUMBER', 'FORMAT_STRING', 'FROM_CSV', 'GETBIT', 'HASH', 'HEX', 'HYPOT', 'INITCAP', 'INLINE', 'INLINE_OUTER', 'INPUT_FILE_BLOCK_LENGTH', 'INPUT_FILE_BLOCK_START', 'INPUT_FILE_NAME', 'INSTR', 'INT', 'ISNAN', 'ISNOTNULL', 'ISNULL', 'JAVA_METHOD', 'LCASE', 'LEFT', 'LENGTH', 'LEVENSHTEIN', 'LN', 'LOCATE', 'LOG', 'LOG10', 'LOG1P', 'LOG2', 'LOWER', 'LPAD', 'LTRIM', 'MAP_FILTER', 'MAP_ZIP_WITH', 'MD5', 'MOD', 'MONOTONICALLY_INCREASING_ID', 'NAMED_STRUCT', 'NANVL', 'NEGATIVE', 'NVL', 'NVL2', 'OCTET_LENGTH', 'OVERLAY', 'PARSE_URL', 'PI', 'PMOD', 'POSEXPLODE', 'POSEXPLODE_OUTER', 'POSITION', 'POSITIVE', 'POW', 'POWER', 'PRINTF', 'RADIANS', 'RAISE_ERROR', 'RAND', 'RANDN', 'RANDOM', 'REFLECT', 'REGEXP_EXTRACT', 'REGEXP_EXTRACT_ALL', 'REGEXP_LIKE', 'REGEXP_REPLACE', 'REPEAT', 'REPLACE', 'REVERSE', 'RIGHT', 'RINT', 'ROUND', 'RPAD', 'RTRIM', 'SCHEMA_OF_CSV', 'SENTENCES', 'SHA', 'SHA1', 'SHA2', 'SHIFTLEFT', 'SHIFTRIGHT', 'SHIFTRIGHTUNSIGNED', 'SIGN', 'SIGNUM', 'SIN', 'SINH', 'SMALLINT', 'SOUNDEX', 'SPACE', 'SPARK_PARTITION_ID', 'SPLIT', 'SQRT', 'STACK', 'SUBSTR', 'SUBSTRING', 'SUBSTRING_INDEX', 'TAN', 'TANH', 'TIMESTAMP', 'TINYINT', 'TO_CSV', 'TRANSFORM_KEYS', 'TRANSFORM_VALUES', 'TRANSLATE', 'TRIM', 'TRY_ADD', 'TRY_DIVIDE', 'TYPEOF', 'UCASE', 'UNBASE64', 'UNHEX', 'UPPER', 'UUID', 'VERSION', 'WIDTH_BUCKET', 'XPATH', 'XPATH_BOOLEAN', 'XPATH_DOUBLE', 'XPATH_FLOAT', 'XPATH_INT', 'XPATH_LONG', 'XPATH_NUMBER', 'XPATH_SHORT', 'XPATH_STRING', 'XXHASH64', 'ZIP_WITH'],\n  cast: ['CAST'],\n  // Shorthand functions to use in place of CASE expression\n  caseAbbrev: ['COALESCE', 'NULLIF'],\n  // Parameterized data types\n  // https://spark.apache.org/docs/latest/sql-ref-datatypes.html\n  dataTypes: ['DECIMAL', 'DEC', 'NUMERIC', // No varchar type in Spark, only STRING. Added for the sake of tests\n  'VARCHAR']\n});\n//# sourceMappingURL=spark.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport Formatter from '../../formatter/Formatter.js';\nimport Tokenizer from '../../lexer/Tokenizer.js';\nimport { EOF_TOKEN, isToken, TokenType } from '../../lexer/token.js';\nimport { keywords } from './spark.keywords.js';\nimport { functions } from './spark.functions.js'; // http://spark.apache.org/docs/latest/sql-ref-syntax.html\n\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([// queries\n'WITH', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'WINDOW', 'PARTITION BY', 'ORDER BY', 'SORT BY', 'CLUSTER BY', 'DISTRIBUTE BY', 'LIMIT', // Data manipulation\n// - insert:\n'INSERT [INTO | OVERWRITE] [TABLE]', 'VALUES', // - truncate:\n'TRUNCATE TABLE', // - insert overwrite directory:\n//   https://spark.apache.org/docs/latest/sql-ref-syntax-dml-insert-overwrite-directory.html\n'INSERT OVERWRITE [LOCAL] DIRECTORY', // - load:\n//   https://spark.apache.org/docs/latest/sql-ref-syntax-dml-load.html\n'LOAD DATA [LOCAL] INPATH', '[OVERWRITE] INTO TABLE', // Data definition\n'CREATE [OR REPLACE] [GLOBAL TEMPORARY | TEMPORARY] VIEW [IF NOT EXISTS]', 'CREATE [EXTERNAL] TABLE [IF NOT EXISTS]', 'DROP TABLE [IF EXISTS]', // - alter table:\n'ALTER TABLE', 'ADD COLUMNS', 'DROP {COLUMN | COLUMNS}', 'RENAME TO', 'RENAME COLUMN', 'ALTER COLUMN', 'ALTER DATABASE', 'ALTER VIEW', 'CREATE DATABASE', 'CREATE FUNCTION', 'DROP DATABASE', 'DROP FUNCTION', 'DROP VIEW', 'REPAIR TABLE', 'USE DATABASE', // Data Retrieval\n'TABLESAMPLE', 'PIVOT', 'TRANSFORM', 'EXPLAIN', // Auxiliary\n'ADD FILE', 'ADD JAR', 'ANALYZE TABLE', 'CACHE TABLE', 'CLEAR CACHE', 'DESCRIBE DATABASE', 'DESCRIBE FUNCTION', 'DESCRIBE QUERY', 'DESCRIBE TABLE', 'LIST FILE', 'LIST JAR', 'REFRESH', 'REFRESH TABLE', 'REFRESH FUNCTION', 'RESET', 'SHOW COLUMNS', 'SHOW CREATE TABLE', 'SHOW DATABASES', 'SHOW FUNCTIONS', 'SHOW PARTITIONS', 'SHOW TABLE EXTENDED', 'SHOW TABLES', 'SHOW TBLPROPERTIES', 'SHOW VIEWS', 'UNCACHE TABLE', // other\n'LATERAL VIEW']);\nconst reservedSetOperations = expandPhrases(['UNION [ALL | DISTINCT]', 'EXCEPT [ALL | DISTINCT]', 'INTERSECT [ALL | DISTINCT]']);\nconst reservedJoins = expandPhrases(['JOIN', '{LEFT | RIGHT | FULL} [OUTER] JOIN', '{INNER | CROSS} JOIN', 'NATURAL [INNER] JOIN', 'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN', // non-standard-joins\n'[LEFT] {ANTI | SEMI} JOIN', 'NATURAL [LEFT] {ANTI | SEMI} JOIN']);\nconst reservedPhrases = expandPhrases(['ON DELETE', 'ON UPDATE', 'CURRENT ROW', '{ROWS | RANGE} BETWEEN']); // http://spark.apache.org/docs/latest/sql-programming-guide.html\n\nexport default class SparkFormatter extends Formatter {\n  tokenizer() {\n    return new Tokenizer({\n      reservedClauses,\n      reservedSelect,\n      reservedSetOperations,\n      reservedJoins,\n      reservedPhrases,\n      supportsXor: true,\n      reservedKeywords: keywords,\n      reservedFunctionNames: functions,\n      extraParens: ['[]'],\n      stringTypes: [\"''-bs\", '\"\"-bs', {\n        quote: \"''-raw\",\n        prefixes: ['R', 'X'],\n        requirePrefix: true\n      }, {\n        quote: '\"\"-raw',\n        prefixes: ['R', 'X'],\n        requirePrefix: true\n      }],\n      identTypes: ['``'],\n      variableTypes: [{\n        quote: '{}',\n        prefixes: ['$'],\n        requirePrefix: true\n      }],\n      operators: ['%', '~', '^', '|', '&', '<=>', '==', '!', '||', '->'],\n      postProcess\n    });\n  }\n\n}\n\nfunction postProcess(tokens) {\n  return tokens.map((token, i) => {\n    const prevToken = tokens[i - 1] || EOF_TOKEN;\n    const nextToken = tokens[i + 1] || EOF_TOKEN; // [WINDOW](...)\n\n    if (isToken.WINDOW(token) && nextToken.type === TokenType.OPEN_PAREN) {\n      // This is a function call, treat it as a reserved function name\n      return { ...token,\n        type: TokenType.RESERVED_FUNCTION_NAME\n      };\n    } // TODO: deprecate this once ITEMS is merged with COLLECTION\n\n\n    if (token.text === 'ITEMS' && token.type === TokenType.RESERVED_KEYWORD) {\n      if (!(prevToken.text === 'COLLECTION' && nextToken.text === 'TERMINATED')) {\n        // this is a word and not COLLECTION ITEMS\n        return { ...token,\n          type: TokenType.IDENTIFIER,\n          text: token.raw\n        };\n      }\n    }\n\n    return token;\n  });\n}\n//# sourceMappingURL=spark.formatter.js.map","import { flatKeywordList } from '../../utils.js';\nexport const functions = flatKeywordList({\n  // https://www.sqlite.org/lang_corefunc.html\n  scalar: ['ABS', 'CHANGES', 'CHAR', 'COALESCE', 'FORMAT', 'GLOB', 'HEX', 'IFNULL', 'IIF', 'INSTR', 'LAST_INSERT_ROWID', 'LENGTH', 'LIKE', 'LIKELIHOOD', 'LIKELY', 'LOAD_EXTENSION', 'LOWER', 'LTRIM', 'NULLIF', 'PRINTF', 'QUOTE', 'RANDOM', 'RANDOMBLOB', 'REPLACE', 'ROUND', 'RTRIM', 'SIGN', 'SOUNDEX', 'SQLITE_COMPILEOPTION_GET', 'SQLITE_COMPILEOPTION_USED', 'SQLITE_OFFSET', 'SQLITE_SOURCE_ID', 'SQLITE_VERSION', 'SUBSTR', 'SUBSTRING', 'TOTAL_CHANGES', 'TRIM', 'TYPEOF', 'UNICODE', 'UNLIKELY', 'UPPER', 'ZEROBLOB'],\n  // https://www.sqlite.org/lang_aggfunc.html\n  aggregate: ['AVG', 'COUNT', 'GROUP_CONCAT', 'MAX', 'MIN', 'SUM', 'TOTAL'],\n  // https://www.sqlite.org/lang_datefunc.html\n  datetime: ['DATE', 'TIME', 'DATETIME', 'JULIANDAY', 'UNIXEPOCH', 'STRFTIME'],\n  // https://www.sqlite.org/windowfunctions.html#biwinfunc\n  window: ['row_number', 'rank', 'dense_rank', 'percent_rank', 'cume_dist', 'ntile', 'lag', 'lead', 'first_value', 'last_value', 'nth_value'],\n  // https://www.sqlite.org/lang_mathfunc.html\n  math: ['ACOS', 'ACOSH', 'ASIN', 'ASINH', 'ATAN', 'ATAN2', 'ATANH', 'CEIL', 'CEILING', 'COS', 'COSH', 'DEGREES', 'EXP', 'FLOOR', 'LN', 'LOG', 'LOG', 'LOG10', 'LOG2', 'MOD', 'PI', 'POW', 'POWER', 'RADIANS', 'SIN', 'SINH', 'SQRT', 'TAN', 'TANH', 'TRUNC'],\n  // https://www.sqlite.org/json1.html\n  json: ['JSON', 'JSON_ARRAY', 'JSON_ARRAY_LENGTH', 'JSON_ARRAY_LENGTH', 'JSON_EXTRACT', 'JSON_INSERT', 'JSON_OBJECT', 'JSON_PATCH', 'JSON_REMOVE', 'JSON_REPLACE', 'JSON_SET', 'JSON_TYPE', 'JSON_TYPE', 'JSON_VALID', 'JSON_QUOTE', 'JSON_GROUP_ARRAY', 'JSON_GROUP_OBJECT', 'JSON_EACH', 'JSON_TREE'],\n  cast: ['CAST'],\n  // SQLite allows parameters for all data types\n  // Well, in fact it allows any word as a data type, e.g. CREATE TABLE foo (col1 madeupname(123));\n  // https://www.sqlite.org/datatype3.html\n  dataTypes: ['CHARACTER', 'VARCHAR', 'VARYING CHARACTER', 'NCHAR', 'NATIVE CHARACTER', 'NVARCHAR', 'NUMERIC', 'DECIMAL']\n});\n//# sourceMappingURL=sqlite.functions.js.map","import { flatKeywordList } from '../../utils.js';\nexport const keywords = flatKeywordList({\n  // https://www.sqlite.org/lang_keywords.html\n  all: ['ABORT', 'ACTION', 'ADD', 'AFTER', 'ALL', 'ALTER', 'AND', 'ANY', 'ARE', 'ARRAY', 'ALWAYS', 'ANALYZE', 'AS', 'ASC', 'ATTACH', 'AUTOINCREMENT', 'BEFORE', 'BEGIN', 'BETWEEN', 'BY', 'CASCADE', 'CASE', 'CAST', 'CHECK', 'COLLATE', 'COLUMN', 'COMMIT', 'CONFLICT', 'CONSTRAINT', 'CREATE', 'CROSS', 'CURRENT', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'DATABASE', 'DEFAULT', 'DEFERRABLE', 'DEFERRED', 'DELETE', 'DESC', 'DETACH', 'DISTINCT', 'DO', 'DROP', 'EACH', 'ELSE', 'END', 'ESCAPE', 'EXCEPT', 'EXCLUDE', 'EXCLUSIVE', 'EXISTS', 'EXPLAIN', 'FAIL', 'FILTER', 'FIRST', 'FOLLOWING', 'FOR', 'FOREIGN', 'FROM', 'FULL', 'GENERATED', 'GLOB', 'GROUP', 'GROUPS', 'HAVING', 'IF', 'IGNORE', 'IMMEDIATE', 'IN', 'INDEX', 'INDEXED', 'INITIALLY', 'INNER', 'INSERT', 'INSTEAD', 'INTERSECT', 'INTO', 'IS', 'ISNULL', 'JOIN', 'KEY', 'LAST', 'LEFT', 'LIKE', 'LIMIT', 'MATCH', 'MATERIALIZED', 'NATURAL', 'NO', 'NOT', 'NOTHING', 'NOTNULL', 'NULL', 'NULLS', 'OF', 'OFFSET', 'ON', 'ONLY', 'OPEN', 'OR', 'ORDER', 'OTHERS', 'OUTER', 'OVER', 'PARTITION', 'PLAN', 'PRAGMA', 'PRECEDING', 'PRIMARY', 'QUERY', 'RAISE', 'RANGE', 'RECURSIVE', 'REFERENCES', 'REGEXP', 'REINDEX', 'RELEASE', 'RENAME', 'REPLACE', 'RESTRICT', 'RETURNING', 'RIGHT', 'ROLLBACK', 'ROW', 'ROWS', 'SAVEPOINT', 'SELECT', 'SET', 'TABLE', 'TEMP', 'TEMPORARY', 'THEN', 'TIES', 'TO', 'TRANSACTION', 'TRIGGER', 'UNBOUNDED', 'UNION', 'UNIQUE', 'UPDATE', 'USING', 'VACUUM', 'VALUES', 'VIEW', 'VIRTUAL', 'WHEN', 'WHERE', 'WINDOW', 'WITH', 'WITHOUT']\n});\n//# sourceMappingURL=sqlite.keywords.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport Formatter from '../../formatter/Formatter.js';\nimport Tokenizer from '../../lexer/Tokenizer.js';\nimport { functions } from './sqlite.functions.js';\nimport { keywords } from './sqlite.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([// queries\n'WITH [RECURSIVE]', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'WINDOW', 'PARTITION BY', 'ORDER BY', 'LIMIT', 'OFFSET', // Data manipulation\n// - insert:\n'INSERT [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK] INTO', 'REPLACE INTO', 'VALUES', // - update:\n'UPDATE [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK]', 'SET', // - delete:\n'DELETE FROM', // Data definition\n'CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS]', 'CREATE [TEMPORARY | TEMP] TABLE [IF NOT EXISTS]', 'DROP TABLE [IF EXISTS]', // - alter table:\n'ALTER TABLE', 'ADD [COLUMN]', 'DROP [COLUMN]', 'RENAME [COLUMN]', 'RENAME TO', // other\n'SET SCHEMA']);\nconst reservedSetOperations = expandPhrases(['UNION [ALL]', 'EXCEPT', 'INTERSECT']); // joins - https://www.sqlite.org/syntax/join-operator.html\n\nconst reservedJoins = expandPhrases(['JOIN', '{LEFT | RIGHT | FULL} [OUTER] JOIN', '{INNER | CROSS} JOIN', 'NATURAL [INNER] JOIN', 'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN']);\nconst reservedPhrases = expandPhrases(['ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]', '{ROWS | RANGE | GROUPS} BETWEEN']);\nexport default class SqliteFormatter extends Formatter {\n  tokenizer() {\n    return new Tokenizer({\n      reservedClauses,\n      reservedSelect,\n      reservedSetOperations,\n      reservedJoins,\n      reservedPhrases,\n      reservedKeywords: keywords,\n      reservedFunctionNames: functions,\n      stringTypes: [\"''-qq\", {\n        quote: \"''-raw\",\n        prefixes: ['X'],\n        requirePrefix: true\n      } // Depending on context SQLite also supports double-quotes for strings,\n      // and single-quotes for identifiers.\n      ],\n      identTypes: [`\"\"-qq`, '``', '[]'],\n      // https://www.sqlite.org/lang_expr.html#parameters\n      paramTypes: {\n        positional: true,\n        numbered: ['?'],\n        named: [':', '@', '$']\n      },\n      operators: ['%', '~', '&', '|', '<<', '>>', '==', '->', '->>', '||']\n    });\n  }\n\n}\n//# sourceMappingURL=sqlite.formatter.js.map","import { flatKeywordList } from '../../utils.js';\nexport const functions = flatKeywordList({\n  // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_9_set_function_specification\n  set: ['GROUPING'],\n  // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_10_window_function\n  window: ['RANK', 'DENSE_RANK', 'PERCENT_RANK', 'CUME_DIST', 'ROW_NUMBER'],\n  // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_27_numeric_value_function\n  numeric: ['POSITION', 'OCCURRENCES_REGEX', 'POSITION_REGEX', 'EXTRACT', 'CHAR_LENGTH', 'CHARACTER_LENGTH', 'OCTET_LENGTH', 'CARDINALITY', 'ABS', 'MOD', 'LN', 'EXP', 'POWER', 'SQRT', 'FLOOR', 'CEIL', 'CEILING', 'WIDTH_BUCKET'],\n  // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_29_string_value_function\n  string: ['SUBSTRING', 'SUBSTRING_REGEX', 'UPPER', 'LOWER', 'CONVERT', 'TRANSLATE', 'TRANSLATE_REGEX', 'TRIM', 'OVERLAY', 'NORMALIZE', 'SPECIFICTYPE'],\n  // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_31_datetime_value_function\n  datetime: ['CURRENT_DATE', 'CURRENT_TIME', 'LOCALTIME', 'CURRENT_TIMESTAMP', 'LOCALTIMESTAMP'],\n  // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_38_multiset_value_function\n  // SET serves multiple roles: a SET() function and a SET keyword e.g. in UPDATE table SET ...\n  // multiset: ['SET'], (disabled for now)\n  // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_10_9_aggregate_function\n  aggregate: ['COUNT', 'AVG', 'MAX', 'MIN', 'SUM', // 'EVERY',\n  // 'ANY',\n  // 'SOME',\n  'STDDEV_POP', 'STDDEV_SAMP', 'VAR_SAMP', 'VAR_POP', 'COLLECT', 'FUSION', 'INTERSECTION', 'COVAR_POP', 'COVAR_SAMP', 'CORR', 'REGR_SLOPE', 'REGR_INTERCEPT', 'REGR_COUNT', 'REGR_R2', 'REGR_AVGX', 'REGR_AVGY', 'REGR_SXX', 'REGR_SYY', 'REGR_SXY', 'PERCENTILE_CONT', 'PERCENTILE_DISC'],\n  // CAST is a pretty complex case, involving multiple forms:\n  // - CAST(col AS int)\n  // - CAST(...) WITH ...\n  // - CAST FROM int\n  // - CREATE CAST(mycol AS int) WITH ...\n  cast: ['CAST'],\n  // Shorthand functions to use in place of CASE expression\n  caseAbbrev: ['COALESCE', 'NULLIF'],\n  // Non-standard functions that have widespread support\n  nonStandard: ['ROUND', 'SIN', 'COS', 'TAN', 'ASIN', 'ACOS', 'ATAN'],\n  // Data types with parameters like VARCHAR(100)\n  // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#predefined-type\n  dataTypes: ['CHARACTER', 'CHAR', 'CHARACTER VARYING', 'CHAR VARYING', 'VARCHAR', 'CHARACTER LARGE OBJECT', 'CHAR LARGE OBJECT', 'CLOB', 'NATIONAL CHARACTER', 'NATIONAL CHAR', 'NCHAR', 'NATIONAL CHARACTER VARYING', 'NATIONAL CHAR VARYING', 'NCHAR VARYING', 'NATIONAL CHARACTER LARGE OBJECT', 'NCHAR LARGE OBJECT', 'NCLOB', 'BINARY', 'BINARY VARYING', 'VARBINARY', 'BINARY LARGE OBJECT', 'BLOB', 'NUMERIC', 'DECIMAL', 'DEC', 'TIME', 'TIMESTAMP']\n});\n//# sourceMappingURL=sql.functions.js.map","import { flatKeywordList } from '../../utils.js';\nexport const keywords = flatKeywordList({\n  // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#reserved-word\n  all: ['ALL', 'ALLOCATE', 'ALTER', 'ANY', // <- moved over from functions\n  'ARE', 'ARRAY', 'AS', 'ASENSITIVE', 'ASYMMETRIC', 'AT', 'ATOMIC', 'AUTHORIZATION', 'BEGIN', 'BETWEEN', 'BIGINT', 'BINARY', 'BLOB', 'BOOLEAN', 'BOTH', 'BY', 'CALL', 'CALLED', 'CASCADED', 'CAST', 'CHAR', 'CHARACTER', 'CHECK', 'CLOB', 'CLOSE', 'COALESCE', 'COLLATE', 'COLUMN', 'COMMIT', 'CONDITION', 'CONNECT', 'CONSTRAINT', 'CORRESPONDING', 'CREATE', 'CROSS', 'CUBE', 'CURRENT', 'CURRENT_CATALOG', 'CURRENT_DEFAULT_TRANSFORM_GROUP', 'CURRENT_PATH', 'CURRENT_ROLE', 'CURRENT_SCHEMA', 'CURRENT_TRANSFORM_GROUP_FOR_TYPE', 'CURRENT_USER', 'CURSOR', 'CYCLE', 'DATE', 'DAY', 'DEALLOCATE', 'DEC', 'DECIMAL', 'DECLARE', 'DEFAULT', 'DELETE', 'DEREF', 'DESCRIBE', 'DETERMINISTIC', 'DISCONNECT', 'DISTINCT', 'DOUBLE', 'DROP', 'DYNAMIC', 'EACH', 'ELEMENT', 'END-EXEC', 'ESCAPE', 'EVERY', // <- moved over from functions\n  'EXCEPT', 'EXEC', 'EXECUTE', 'EXISTS', 'EXTERNAL', 'FALSE', 'FETCH', 'FILTER', 'FLOAT', 'FOR', 'FOREIGN', 'FREE', 'FROM', 'FULL', 'FUNCTION', 'GET', 'GLOBAL', 'GRANT', 'GROUP', 'HAVING', 'HOLD', 'HOUR', 'IDENTITY', 'IN', 'INDICATOR', 'INNER', 'INOUT', 'INSENSITIVE', 'INSERT', 'INT', 'INTEGER', 'INTERSECT', 'INTERVAL', 'INTO', 'IS', 'LANGUAGE', 'LARGE', 'LATERAL', 'LEADING', 'LEFT', 'LIKE', 'LIKE_REGEX', 'LOCAL', 'MATCH', 'MEMBER', 'MERGE', 'METHOD', 'MINUTE', 'MODIFIES', 'MODULE', 'MONTH', 'MULTISET', 'NATIONAL', 'NATURAL', 'NCHAR', 'NCLOB', 'NEW', 'NO', 'NONE', 'NOT', 'NULL', 'NULLIF', 'NUMERIC', 'OF', 'OLD', 'ON', 'ONLY', 'OPEN', 'ORDER', 'OUT', 'OUTER', 'OVER', 'OVERLAPS', 'PARAMETER', 'PARTITION', 'PRECISION', 'PREPARE', 'PRIMARY', 'PROCEDURE', 'RANGE', 'READS', 'REAL', 'RECURSIVE', 'REF', 'REFERENCES', 'REFERENCING', 'RELEASE', 'RESULT', 'RETURN', 'RETURNS', 'REVOKE', 'RIGHT', 'ROLLBACK', 'ROLLUP', 'ROW', 'ROWS', 'SAVEPOINT', 'SCOPE', 'SCROLL', 'SEARCH', 'SECOND', 'SELECT', 'SENSITIVE', 'SESSION_USER', 'SET', 'SIMILAR', 'SMALLINT', 'SOME', // <- moved over from functions\n  'SPECIFIC', 'SQL', 'SQLEXCEPTION', 'SQLSTATE', 'SQLWARNING', 'START', 'STATIC', 'SUBMULTISET', 'SYMMETRIC', 'SYSTEM', 'SYSTEM_USER', 'TABLE', 'TABLESAMPLE', 'THEN', 'TIME', 'TIMESTAMP', 'TIMEZONE_HOUR', 'TIMEZONE_MINUTE', 'TO', 'TRAILING', 'TRANSLATION', 'TREAT', 'TRIGGER', 'TRUE', 'UESCAPE', 'UNION', 'UNIQUE', 'UNKNOWN', 'UNNEST', 'UPDATE', 'USER', 'USING', 'VALUE', 'VALUES', 'VARBINARY', 'VARCHAR', 'VARYING', 'WHENEVER', 'WINDOW', 'WITHIN', 'WITHOUT', 'YEAR']\n});\n//# sourceMappingURL=sql.keywords.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport Formatter from '../../formatter/Formatter.js';\nimport Tokenizer from '../../lexer/Tokenizer.js';\nimport { functions } from './sql.functions.js';\nimport { keywords } from './sql.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([// queries\n'WITH [RECURSIVE]', 'FROM', 'WHERE', 'GROUP BY [ALL | DISTINCT]', 'HAVING', 'WINDOW', 'PARTITION BY', 'ORDER BY', 'LIMIT', 'OFFSET', 'FETCH {FIRST | NEXT}', // Data manipulation\n// - insert:\n'INSERT INTO', 'VALUES', // - update:\n'UPDATE', 'SET', 'WHERE CURRENT OF', // - delete:\n'DELETE FROM', // - truncate:\n'TRUNCATE TABLE', // Data definition\n'CREATE [RECURSIVE] VIEW', 'CREATE [GLOBAL TEMPORARY | LOCAL TEMPORARY] TABLE', 'DROP TABLE', // - alter table:\n'ALTER TABLE', 'ADD COLUMN', 'DROP [COLUMN]', 'RENAME COLUMN', 'RENAME TO', 'ALTER [COLUMN]', '{SET | DROP} DEFAULT', // for alter column\n'ADD SCOPE', // for alter column\n'DROP SCOPE {CASCADE | RESTRICT}', // for alter column\n'RESTART WITH', // for alter column\n// other\n'SET SCHEMA']);\nconst reservedSetOperations = expandPhrases(['UNION [ALL | DISTINCT]', 'EXCEPT [ALL | DISTINCT]', 'INTERSECT [ALL | DISTINCT]']);\nconst reservedJoins = expandPhrases(['JOIN', '{LEFT | RIGHT | FULL} [OUTER] JOIN', '{INNER | CROSS} JOIN', 'NATURAL [INNER] JOIN', 'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN']);\nconst reservedPhrases = expandPhrases(['ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]', '{ROWS | RANGE} BETWEEN']);\nexport default class SqlFormatter extends Formatter {\n  tokenizer() {\n    return new Tokenizer({\n      reservedClauses,\n      reservedSelect,\n      reservedSetOperations,\n      reservedJoins,\n      reservedPhrases,\n      reservedKeywords: keywords,\n      reservedFunctionNames: functions,\n      stringTypes: [{\n        quote: \"''-qq-bs\",\n        prefixes: ['N', 'U&']\n      }, {\n        quote: \"''-raw\",\n        prefixes: ['X'],\n        requirePrefix: true\n      }],\n      identTypes: [`\"\"-qq`, '``'],\n      paramTypes: {\n        positional: true\n      },\n      operators: ['||']\n    });\n  }\n\n}\n//# sourceMappingURL=sql.formatter.js.map","import { flatKeywordList } from '../../utils.js';\nexport const functions = flatKeywordList({\n  // https://github.com/trinodb/trino/tree/432d2897bdef99388c1a47188743a061c4ac1f34/docs/src/main/sphinx/functions\n  // rg '^\\.\\. function::' ./docs/src/main/sphinx/functions | cut -d' ' -f 3 | cut -d '(' -f 1 | sort | uniq\n  // rg '\\* ' ./docs/src/main/sphinx/functions/list-by-topic.rst | grep    '\\* :func:' | cut -d'`' -f 2\n  // rg '\\* ' ./docs/src/main/sphinx/functions/list-by-topic.rst | grep -v '\\* :func:'\n  // grep -e '^- ' ./docs/src/main/sphinx/functions/list.rst | grep  -e '^- :func:' | cut -d'`' -f2\n  // grep -e '^- ' ./docs/src/main/sphinx/functions/list.rst | grep -ve '^- :func:'\n  all: ['ABS', 'ACOS', 'ALL_MATCH', 'ANY_MATCH', 'APPROX_DISTINCT', 'APPROX_MOST_FREQUENT', 'APPROX_PERCENTILE', 'APPROX_SET', 'ARBITRARY', 'ARRAYS_OVERLAP', 'ARRAY_AGG', 'ARRAY_DISTINCT', 'ARRAY_EXCEPT', 'ARRAY_INTERSECT', 'ARRAY_JOIN', 'ARRAY_MAX', 'ARRAY_MIN', 'ARRAY_POSITION', 'ARRAY_REMOVE', 'ARRAY_SORT', 'ARRAY_UNION', 'ASIN', 'ATAN', 'ATAN2', 'AT_TIMEZONE', 'AVG', 'BAR', 'BETA_CDF', 'BING_TILE', 'BING_TILES_AROUND', 'BING_TILE_AT', 'BING_TILE_COORDINATES', 'BING_TILE_POLYGON', 'BING_TILE_QUADKEY', 'BING_TILE_ZOOM_LEVEL', 'BITWISE_AND', 'BITWISE_AND_AGG', 'BITWISE_LEFT_SHIFT', 'BITWISE_NOT', 'BITWISE_OR', 'BITWISE_OR_AGG', 'BITWISE_RIGHT_SHIFT', 'BITWISE_RIGHT_SHIFT_ARITHMETIC', 'BITWISE_XOR', 'BIT_COUNT', 'BOOL_AND', 'BOOL_OR', 'CARDINALITY', 'CAST', 'CBRT', 'CEIL', 'CEILING', 'CHAR2HEXINT', 'CHECKSUM', 'CHR', 'CLASSIFY', 'COALESCE', 'CODEPOINT', 'COLOR', 'COMBINATIONS', 'CONCAT', 'CONCAT_WS', 'CONTAINS', 'CONTAINS_SEQUENCE', 'CONVEX_HULL_AGG', 'CORR', 'COS', 'COSH', 'COSINE_SIMILARITY', 'COUNT', 'COUNT_IF', 'COVAR_POP', 'COVAR_SAMP', 'CRC32', 'CUME_DIST', 'CURRENT_CATALOG', 'CURRENT_DATE', 'CURRENT_GROUPS', 'CURRENT_SCHEMA', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_TIMEZONE', 'CURRENT_USER', 'DATE', 'DATE_ADD', 'DATE_DIFF', 'DATE_FORMAT', 'DATE_PARSE', 'DATE_TRUNC', 'DAY', 'DAY_OF_MONTH', 'DAY_OF_WEEK', 'DAY_OF_YEAR', 'DEGREES', 'DENSE_RANK', 'DOW', 'DOY', 'E', 'ELEMENT_AT', 'EMPTY_APPROX_SET', 'EVALUATE_CLASSIFIER_PREDICTIONS', 'EVERY', 'EXP', 'EXTRACT', 'FEATURES', 'FILTER', 'FIRST_VALUE', 'FLATTEN', 'FLOOR', 'FORMAT', 'FORMAT_DATETIME', 'FORMAT_NUMBER', 'FROM_BASE', 'FROM_BASE32', 'FROM_BASE64', 'FROM_BASE64URL', 'FROM_BIG_ENDIAN_32', 'FROM_BIG_ENDIAN_64', 'FROM_ENCODED_POLYLINE', 'FROM_GEOJSON_GEOMETRY', 'FROM_HEX', 'FROM_IEEE754_32', 'FROM_IEEE754_64', 'FROM_ISO8601_DATE', 'FROM_ISO8601_TIMESTAMP', 'FROM_ISO8601_TIMESTAMP_NANOS', 'FROM_UNIXTIME', 'FROM_UNIXTIME_NANOS', 'FROM_UTF8', 'GEOMETRIC_MEAN', 'GEOMETRY_FROM_HADOOP_SHAPE', 'GEOMETRY_INVALID_REASON', 'GEOMETRY_NEAREST_POINTS', 'GEOMETRY_TO_BING_TILES', 'GEOMETRY_UNION', 'GEOMETRY_UNION_AGG', 'GREATEST', 'GREAT_CIRCLE_DISTANCE', 'HAMMING_DISTANCE', 'HASH_COUNTS', 'HISTOGRAM', 'HMAC_MD5', 'HMAC_SHA1', 'HMAC_SHA256', 'HMAC_SHA512', 'HOUR', 'HUMAN_READABLE_SECONDS', 'IF', 'INDEX', 'INFINITY', 'INTERSECTION_CARDINALITY', 'INVERSE_BETA_CDF', 'INVERSE_NORMAL_CDF', 'IS_FINITE', 'IS_INFINITE', 'IS_JSON_SCALAR', 'IS_NAN', 'JACCARD_INDEX', 'JSON_ARRAY_CONTAINS', 'JSON_ARRAY_GET', 'JSON_ARRAY_LENGTH', 'JSON_EXISTS', 'JSON_EXTRACT', 'JSON_EXTRACT_SCALAR', 'JSON_FORMAT', 'JSON_PARSE', 'JSON_QUERY', 'JSON_SIZE', 'JSON_VALUE', 'KURTOSIS', 'LAG', 'LAST_DAY_OF_MONTH', 'LAST_VALUE', 'LEAD', 'LEARN_CLASSIFIER', 'LEARN_LIBSVM_CLASSIFIER', 'LEARN_LIBSVM_REGRESSOR', 'LEARN_REGRESSOR', 'LEAST', 'LENGTH', 'LEVENSHTEIN_DISTANCE', 'LINE_INTERPOLATE_POINT', 'LINE_INTERPOLATE_POINTS', 'LINE_LOCATE_POINT', 'LISTAGG', 'LN', 'LOCALTIME', 'LOCALTIMESTAMP', 'LOG', 'LOG10', 'LOG2', 'LOWER', 'LPAD', 'LTRIM', 'LUHN_CHECK', 'MAKE_SET_DIGEST', 'MAP', 'MAP_AGG', 'MAP_CONCAT', 'MAP_ENTRIES', 'MAP_FILTER', 'MAP_FROM_ENTRIES', 'MAP_KEYS', 'MAP_UNION', 'MAP_VALUES', 'MAP_ZIP_WITH', 'MAX', 'MAX_BY', 'MD5', 'MERGE', 'MERGE_SET_DIGEST', 'MILLISECOND', 'MIN', 'MINUTE', 'MIN_BY', 'MOD', 'MONTH', 'MULTIMAP_AGG', 'MULTIMAP_FROM_ENTRIES', 'MURMUR3', 'NAN', 'NGRAMS', 'NONE_MATCH', 'NORMALIZE', 'NORMAL_CDF', 'NOW', 'NTH_VALUE', 'NTILE', 'NULLIF', 'NUMERIC_HISTOGRAM', 'OBJECTID', 'OBJECTID_TIMESTAMP', 'PARSE_DATA_SIZE', 'PARSE_DATETIME', 'PARSE_DURATION', 'PERCENT_RANK', 'PI', 'POSITION', 'POW', 'POWER', 'QDIGEST_AGG', 'QUARTER', 'RADIANS', 'RAND', 'RANDOM', 'RANK', 'REDUCE', 'REDUCE_AGG', 'REGEXP_COUNT', 'REGEXP_EXTRACT', 'REGEXP_EXTRACT_ALL', 'REGEXP_LIKE', 'REGEXP_POSITION', 'REGEXP_REPLACE', 'REGEXP_SPLIT', 'REGRESS', 'REGR_INTERCEPT', 'REGR_SLOPE', 'RENDER', 'REPEAT', 'REPLACE', 'REVERSE', 'RGB', 'ROUND', 'ROW_NUMBER', 'RPAD', 'RTRIM', 'SECOND', 'SEQUENCE', 'SHA1', 'SHA256', 'SHA512', 'SHUFFLE', 'SIGN', 'SIMPLIFY_GEOMETRY', 'SIN', 'SKEWNESS', 'SLICE', 'SOUNDEX', 'SPATIAL_PARTITIONING', 'SPATIAL_PARTITIONS', 'SPLIT', 'SPLIT_PART', 'SPLIT_TO_MAP', 'SPLIT_TO_MULTIMAP', 'SPOOKY_HASH_V2_32', 'SPOOKY_HASH_V2_64', 'SQRT', 'STARTS_WITH', 'STDDEV', 'STDDEV_POP', 'STDDEV_SAMP', 'STRPOS', 'ST_AREA', 'ST_ASBINARY', 'ST_ASTEXT', 'ST_BOUNDARY', 'ST_BUFFER', 'ST_CENTROID', 'ST_CONTAINS', 'ST_CONVEXHULL', 'ST_COORDDIM', 'ST_CROSSES', 'ST_DIFFERENCE', 'ST_DIMENSION', 'ST_DISJOINT', 'ST_DISTANCE', 'ST_ENDPOINT', 'ST_ENVELOPE', 'ST_ENVELOPEASPTS', 'ST_EQUALS', 'ST_EXTERIORRING', 'ST_GEOMETRIES', 'ST_GEOMETRYFROMTEXT', 'ST_GEOMETRYN', 'ST_GEOMETRYTYPE', 'ST_GEOMFROMBINARY', 'ST_INTERIORRINGN', 'ST_INTERIORRINGS', 'ST_INTERSECTION', 'ST_INTERSECTS', 'ST_ISCLOSED', 'ST_ISEMPTY', 'ST_ISRING', 'ST_ISSIMPLE', 'ST_ISVALID', 'ST_LENGTH', 'ST_LINEFROMTEXT', 'ST_LINESTRING', 'ST_MULTIPOINT', 'ST_NUMGEOMETRIES', 'ST_NUMINTERIORRING', 'ST_NUMPOINTS', 'ST_OVERLAPS', 'ST_POINT', 'ST_POINTN', 'ST_POINTS', 'ST_POLYGON', 'ST_RELATE', 'ST_STARTPOINT', 'ST_SYMDIFFERENCE', 'ST_TOUCHES', 'ST_UNION', 'ST_WITHIN', 'ST_X', 'ST_XMAX', 'ST_XMIN', 'ST_Y', 'ST_YMAX', 'ST_YMIN', 'SUBSTR', 'SUBSTRING', 'SUM', 'TAN', 'TANH', 'TDIGEST_AGG', 'TIMESTAMP_OBJECTID', 'TIMEZONE_HOUR', 'TIMEZONE_MINUTE', 'TO_BASE', 'TO_BASE32', 'TO_BASE64', 'TO_BASE64URL', 'TO_BIG_ENDIAN_32', 'TO_BIG_ENDIAN_64', 'TO_CHAR', 'TO_DATE', 'TO_ENCODED_POLYLINE', 'TO_GEOJSON_GEOMETRY', 'TO_GEOMETRY', 'TO_HEX', 'TO_IEEE754_32', 'TO_IEEE754_64', 'TO_ISO8601', 'TO_MILLISECONDS', 'TO_SPHERICAL_GEOGRAPHY', 'TO_TIMESTAMP', 'TO_UNIXTIME', 'TO_UTF8', 'TRANSFORM', 'TRANSFORM_KEYS', 'TRANSFORM_VALUES', 'TRANSLATE', 'TRIM', 'TRIM_ARRAY', 'TRUNCATE', 'TRY', 'TRY_CAST', 'TYPEOF', 'UPPER', 'URL_DECODE', 'URL_ENCODE', 'URL_EXTRACT_FRAGMENT', 'URL_EXTRACT_HOST', 'URL_EXTRACT_PARAMETER', 'URL_EXTRACT_PATH', 'URL_EXTRACT_PORT', 'URL_EXTRACT_PROTOCOL', 'URL_EXTRACT_QUERY', 'UUID', 'VALUES_AT_QUANTILES', 'VALUE_AT_QUANTILE', 'VARIANCE', 'VAR_POP', 'VAR_SAMP', 'VERSION', 'WEEK', 'WEEK_OF_YEAR', 'WIDTH_BUCKET', 'WILSON_INTERVAL_LOWER', 'WILSON_INTERVAL_UPPER', 'WITH_TIMEZONE', 'WORD_STEM', 'XXHASH64', 'YEAR', 'YEAR_OF_WEEK', 'YOW', 'ZIP', 'ZIP_WITH'],\n  // https://trino.io/docs/current/sql/match-recognize.html#row-pattern-recognition-expressions\n  rowPattern: ['CLASSIFIER', 'FIRST', 'LAST', 'MATCH_NUMBER', 'NEXT', 'PERMUTE', 'PREV']\n});\n//# sourceMappingURL=trino.functions.js.map","import { flatKeywordList } from '../../utils.js';\nexport const keywords = flatKeywordList({\n  // https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L858-L1128\n  all: ['ABSENT', 'ADD', 'ADMIN', 'AFTER', 'ALL', 'ALTER', 'ANALYZE', 'AND', 'ANY', 'ARRAY', 'AS', 'ASC', 'AT', 'AUTHORIZATION', 'BERNOULLI', 'BETWEEN', 'BOTH', 'BY', 'CALL', 'CASCADE', 'CASE', 'CATALOGS', 'COLUMN', 'COLUMNS', 'COMMENT', 'COMMIT', 'COMMITTED', 'CONDITIONAL', 'CONSTRAINT', 'COPARTITION', 'CREATE', 'CROSS', 'CUBE', 'CURRENT', 'CURRENT_PATH', 'CURRENT_ROLE', 'DATA', 'DEALLOCATE', 'DEFAULT', 'DEFINE', 'DEFINER', 'DELETE', 'DENY', 'DESC', 'DESCRIBE', 'DESCRIPTOR', 'DISTINCT', 'DISTRIBUTED', 'DOUBLE', 'DROP', 'ELSE', 'EMPTY', 'ENCODING', 'END', 'ERROR', 'ESCAPE', 'EXCEPT', 'EXCLUDING', 'EXECUTE', 'EXISTS', 'EXPLAIN', 'FALSE', 'FETCH', 'FINAL', 'FIRST', 'FOLLOWING', 'FOR', 'FROM', 'FULL', 'FUNCTIONS', 'GRANT', 'GRANTED', 'GRANTS', 'GRAPHVIZ', 'GROUP', 'GROUPING', 'GROUPS', 'HAVING', 'IGNORE', 'IN', 'INCLUDING', 'INITIAL', 'INNER', 'INPUT', 'INSERT', 'INTERSECT', 'INTERVAL', 'INTO', 'INVOKER', 'IO', 'IS', 'ISOLATION', 'JOIN', 'JSON', 'JSON_ARRAY', 'JSON_OBJECT', 'KEEP', 'KEY', 'KEYS', 'LAST', 'LATERAL', 'LEADING', 'LEFT', 'LEVEL', 'LIKE', 'LIMIT', 'LOCAL', 'LOGICAL', 'MATCH', 'MATCHED', 'MATCHES', 'MATCH_RECOGNIZE', 'MATERIALIZED', 'MEASURES', 'NATURAL', 'NEXT', 'NFC', 'NFD', 'NFKC', 'NFKD', 'NO', 'NONE', 'NOT', 'NULL', 'NULLS', 'OBJECT', 'OF', 'OFFSET', 'OMIT', 'ON', 'ONE', 'ONLY', 'OPTION', 'OR', 'ORDER', 'ORDINALITY', 'OUTER', 'OUTPUT', 'OVER', 'OVERFLOW', 'PARTITION', 'PARTITIONS', 'PASSING', 'PAST', 'PATH', 'PATTERN', 'PER', 'PERMUTE', 'PRECEDING', 'PRECISION', 'PREPARE', 'PRIVILEGES', 'PROPERTIES', 'PRUNE', 'QUOTES', 'RANGE', 'READ', 'RECURSIVE', 'REFRESH', 'RENAME', 'REPEATABLE', 'RESET', 'RESPECT', 'RESTRICT', 'RETURNING', 'REVOKE', 'RIGHT', 'ROLE', 'ROLES', 'ROLLBACK', 'ROLLUP', 'ROW', 'ROWS', 'RUNNING', 'SCALAR', 'SCHEMA', 'SCHEMAS', 'SECURITY', 'SEEK', 'SELECT', 'SERIALIZABLE', 'SESSION', 'SET', 'SETS', 'SHOW', 'SKIP', 'SOME', 'START', 'STATS', 'STRING', 'SUBSET', 'SYSTEM', 'TABLE', 'TABLES', 'TABLESAMPLE', 'TEXT', 'THEN', 'TIES', 'TIME', 'TIMESTAMP', 'TO', 'TRAILING', 'TRANSACTION', 'TRUE', 'TYPE', 'UESCAPE', 'UNBOUNDED', 'UNCOMMITTED', 'UNCONDITIONAL', 'UNION', 'UNIQUE', 'UNKNOWN', 'UNMATCHED', 'UNNEST', 'UPDATE', 'USE', 'USER', 'USING', 'UTF16', 'UTF32', 'UTF8', 'VALIDATE', 'VALUE', 'VALUES', 'VERBOSE', 'VIEW', 'WHEN', 'WHERE', 'WINDOW', 'WITH', 'WITHIN', 'WITHOUT', 'WORK', 'WRAPPER', 'WRITE', 'ZONE'],\n  // https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-main/src/main/java/io/trino/metadata/TypeRegistry.java#L131-L168\n  // or https://trino.io/docs/current/language/types.html\n  types: ['BIGINT', 'INT', 'INTEGER', 'SMALLINT', 'TINYINT', 'BOOLEAN', 'DATE', 'DECIMAL', 'REAL', 'DOUBLE', 'HYPERLOGLOG', 'QDIGEST', 'TDIGEST', 'P4HYPERLOGLOG', 'INTERVAL', 'TIMESTAMP', 'TIME', 'VARBINARY', 'VARCHAR', 'CHAR', 'ROW', 'ARRAY', 'MAP', 'JSON', 'JSON2016', 'IPADDRESS', 'GEOMETRY', 'UUID', 'SETDIGEST', 'JONIREGEXP', 'RE2JREGEXP', 'LIKEPATTERN', 'COLOR', 'CODEPOINTS', 'FUNCTION', 'JSONPATH']\n});\n//# sourceMappingURL=trino.keywords.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport Formatter from '../../formatter/Formatter.js';\nimport Tokenizer from '../../lexer/Tokenizer.js';\nimport { functions } from './trino.functions.js';\nimport { keywords } from './trino.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']); // https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L41\n\nconst reservedClauses = expandPhrases([// queries\n'WITH [RECURSIVE]', 'FROM', 'WHERE', 'GROUP BY [ALL | DISTINCT]', 'HAVING', 'WINDOW', 'PARTITION BY', 'ORDER BY', 'LIMIT', 'OFFSET', 'FETCH {FIRST | NEXT}', // Data manipulation\n// - insert:\n'INSERT INTO', 'VALUES', // - update:\n'UPDATE', 'SET', // - delete:\n'DELETE FROM', // - truncate:\n'TRUNCATE TABLE', // Data definition\n'CREATE [OR REPLACE] [MATERIALIZED] VIEW', 'CREATE TABLE [IF NOT EXISTS]', 'DROP TABLE [IF EXISTS]', // - alter table:\n'ALTER TABLE [IF EXISTS]', 'ADD COLUMN [IF NOT EXISTS]', 'DROP COLUMN [IF EXISTS]', 'RENAME COLUMN [IF EXISTS]', 'RENAME TO', 'SET AUTHORIZATION [USER | ROLE]', 'SET PROPERTIES', 'EXECUTE', 'ALTER SCHEMA', 'ALTER MATERIALIZED VIEW', 'ALTER VIEW', 'CREATE SCHEMA', 'CREATE ROLE', 'DROP SCHEMA', 'DROP COLUMN', 'DROP MATERIALIZED VIEW', 'DROP VIEW', 'DROP ROLE', // Auxiliary\n'EXPLAIN', 'ANALYZE', 'EXPLAIN ANALYZE', 'EXPLAIN ANALYZE VERBOSE', 'USE', 'COMMENT ON TABLE', 'COMMENT ON COLUMN', 'DESCRIBE INPUT', 'DESCRIBE OUTPUT', 'REFRESH MATERIALIZED VIEW', 'RESET SESSION', 'SET SESSION', 'SET PATH', 'SET TIME ZONE', 'SHOW GRANTS', 'SHOW CREATE TABLE', 'SHOW CREATE SCHEMA', 'SHOW CREATE VIEW', 'SHOW CREATE MATERIALIZED VIEW', 'SHOW TABLES', 'SHOW SCHEMAS', 'SHOW CATALOGS', 'SHOW COLUMNS', 'SHOW STATS FOR', 'SHOW ROLES', 'SHOW CURRENT ROLES', 'SHOW ROLE GRANTS', 'SHOW FUNCTIONS', 'SHOW SESSION', // MATCH_RECOGNIZE\n'MATCH_RECOGNIZE', 'MEASURES', 'ONE ROW PER MATCH', 'ALL ROWS PER MATCH', 'AFTER MATCH', 'PATTERN', 'SUBSET', 'DEFINE']); // https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L231-L235\n// https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L288-L291\n\nconst reservedSetOperations = expandPhrases(['UNION [ALL | DISTINCT]', 'EXCEPT [ALL | DISTINCT]', 'INTERSECT [ALL | DISTINCT]']); // https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L299-L313\n\nconst reservedJoins = expandPhrases(['JOIN', '{LEFT | RIGHT | FULL} [OUTER] JOIN', '{INNER | CROSS} JOIN', 'NATURAL [INNER] JOIN', 'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN']);\nconst reservedPhrases = expandPhrases(['{ROWS | RANGE | GROUPS} BETWEEN']);\nexport default class TrinoFormatter extends Formatter {\n  tokenizer() {\n    return new Tokenizer({\n      reservedClauses,\n      reservedSelect,\n      reservedSetOperations,\n      reservedJoins,\n      reservedPhrases,\n      reservedKeywords: keywords,\n      reservedFunctionNames: functions,\n      // Trino also supports {- ... -} parenthesis.\n      // The formatting of these currently works out as a result of { and -\n      // not getting a space added in-between.\n      // https://trino.io/docs/current/sql/match-recognize.html#row-pattern-syntax\n      extraParens: ['[]', '{}'],\n      // https://trino.io/docs/current/language/types.html#string\n      // https://trino.io/docs/current/language/types.html#varbinary\n      stringTypes: [{\n        quote: \"''-qq\",\n        prefixes: ['U&']\n      }, {\n        quote: \"''-raw\",\n        prefixes: ['X'],\n        requirePrefix: true\n      }],\n      // https://trino.io/docs/current/language/reserved.html\n      identTypes: ['\"\"-qq'],\n      paramTypes: {\n        positional: true\n      },\n      operators: ['%', '->', ':', '||', // Row pattern syntax\n      '|', '^', '$' // '?', conflicts with positional placeholders\n      ]\n    });\n  }\n\n}\n//# sourceMappingURL=trino.formatter.js.map","import { flatKeywordList } from '../../utils.js';\nexport const functions = flatKeywordList({\n  // https://docs.microsoft.com/en-us/sql/t-sql/functions/functions?view=sql-server-ver15\n  aggregate: ['APPROX_COUNT_DISTINCT', 'AVG', 'CHECKSUM_AGG', 'COUNT', 'COUNT_BIG', 'GROUPING', 'GROUPING_ID', 'MAX', 'MIN', 'STDEV', 'STDEVP', 'SUM', 'VAR', 'VARP'],\n  analytic: ['CUME_DIST', 'FIRST_VALUE', 'LAG', 'LAST_VALUE', 'LEAD', 'PERCENTILE_CONT', 'PERCENTILE_DISC', 'PERCENT_RANK', 'Collation - COLLATIONPROPERTY', 'Collation - TERTIARY_WEIGHTS'],\n  configuration: ['@@DBTS', '@@LANGID', '@@LANGUAGE', '@@LOCK_TIMEOUT', '@@MAX_CONNECTIONS', '@@MAX_PRECISION', '@@NESTLEVEL', '@@OPTIONS', '@@REMSERVER', '@@SERVERNAME', '@@SERVICENAME', '@@SPID', '@@TEXTSIZE', '@@VERSION'],\n  conversion: ['CAST', 'CONVERT', 'PARSE', 'TRY_CAST', 'TRY_CONVERT', 'TRY_PARSE'],\n  cryptographic: ['ASYMKEY_ID', 'ASYMKEYPROPERTY', 'CERTPROPERTY', 'CERT_ID', 'CRYPT_GEN_RANDOM', 'DECRYPTBYASYMKEY', 'DECRYPTBYCERT', 'DECRYPTBYKEY', 'DECRYPTBYKEYAUTOASYMKEY', 'DECRYPTBYKEYAUTOCERT', 'DECRYPTBYPASSPHRASE', 'ENCRYPTBYASYMKEY', 'ENCRYPTBYCERT', 'ENCRYPTBYKEY', 'ENCRYPTBYPASSPHRASE', 'HASHBYTES', 'IS_OBJECTSIGNED', 'KEY_GUID', 'KEY_ID', 'KEY_NAME', 'SIGNBYASYMKEY', 'SIGNBYCERT', 'SYMKEYPROPERTY', 'VERIFYSIGNEDBYCERT', 'VERIFYSIGNEDBYASYMKEY'],\n  cursor: ['@@CURSOR_ROWS', '@@FETCH_STATUS', 'CURSOR_STATUS'],\n  dataType: ['DATALENGTH', 'IDENT_CURRENT', 'IDENT_INCR', 'IDENT_SEED', 'IDENTITY', 'SQL_VARIANT_PROPERTY'],\n  datetime: ['@@DATEFIRST', 'CURRENT_TIMESTAMP', 'CURRENT_TIMEZONE', 'CURRENT_TIMEZONE_ID', 'DATEADD', 'DATEDIFF', 'DATEDIFF_BIG', 'DATEFROMPARTS', 'DATENAME', 'DATEPART', 'DATETIME2FROMPARTS', 'DATETIMEFROMPARTS', 'DATETIMEOFFSETFROMPARTS', 'DAY', 'EOMONTH', 'GETDATE', 'GETUTCDATE', 'ISDATE', 'MONTH', 'SMALLDATETIMEFROMPARTS', 'SWITCHOFFSET', 'SYSDATETIME', 'SYSDATETIMEOFFSET', 'SYSUTCDATETIME', 'TIMEFROMPARTS', 'TODATETIMEOFFSET', 'YEAR', 'JSON', 'ISJSON', 'JSON_VALUE', 'JSON_QUERY', 'JSON_MODIFY'],\n  mathematical: ['ABS', 'ACOS', 'ASIN', 'ATAN', 'ATN2', 'CEILING', 'COS', 'COT', 'DEGREES', 'EXP', 'FLOOR', 'LOG', 'LOG10', 'PI', 'POWER', 'RADIANS', 'RAND', 'ROUND', 'SIGN', 'SIN', 'SQRT', 'SQUARE', 'TAN', 'CHOOSE', 'GREATEST', 'IIF', 'LEAST'],\n  metadata: ['@@PROCID', 'APP_NAME', 'APPLOCK_MODE', 'APPLOCK_TEST', 'ASSEMBLYPROPERTY', 'COL_LENGTH', 'COL_NAME', 'COLUMNPROPERTY', 'DATABASEPROPERTYEX', 'DB_ID', 'DB_NAME', 'FILE_ID', 'FILE_IDEX', 'FILE_NAME', 'FILEGROUP_ID', 'FILEGROUP_NAME', 'FILEGROUPPROPERTY', 'FILEPROPERTY', 'FILEPROPERTYEX', 'FULLTEXTCATALOGPROPERTY', 'FULLTEXTSERVICEPROPERTY', 'INDEX_COL', 'INDEXKEY_PROPERTY', 'INDEXPROPERTY', 'NEXT VALUE FOR', 'OBJECT_DEFINITION', 'OBJECT_ID', 'OBJECT_NAME', 'OBJECT_SCHEMA_NAME', 'OBJECTPROPERTY', 'OBJECTPROPERTYEX', 'ORIGINAL_DB_NAME', 'PARSENAME', 'SCHEMA_ID', 'SCHEMA_NAME', 'SCOPE_IDENTITY', 'SERVERPROPERTY', 'STATS_DATE', 'TYPE_ID', 'TYPE_NAME', 'TYPEPROPERTY'],\n  ranking: ['DENSE_RANK', 'NTILE', 'RANK', 'ROW_NUMBER', 'PUBLISHINGSERVERNAME'],\n  security: ['CERTENCODED', 'CERTPRIVATEKEY', 'CURRENT_USER', 'DATABASE_PRINCIPAL_ID', 'HAS_DBACCESS', 'HAS_PERMS_BY_NAME', 'IS_MEMBER', 'IS_ROLEMEMBER', 'IS_SRVROLEMEMBER', 'LOGINPROPERTY', 'ORIGINAL_LOGIN', 'PERMISSIONS', 'PWDENCRYPT', 'PWDCOMPARE', 'SESSION_USER', 'SESSIONPROPERTY', 'SUSER_ID', 'SUSER_NAME', 'SUSER_SID', 'SUSER_SNAME', 'SYSTEM_USER', 'USER', 'USER_ID', 'USER_NAME'],\n  string: ['ASCII', 'CHAR', 'CHARINDEX', 'CONCAT', 'CONCAT_WS', 'DIFFERENCE', 'FORMAT', 'LEFT', 'LEN', 'LOWER', 'LTRIM', 'NCHAR', 'PATINDEX', 'QUOTENAME', 'REPLACE', 'REPLICATE', 'REVERSE', 'RIGHT', 'RTRIM', 'SOUNDEX', 'SPACE', 'STR', 'STRING_AGG', 'STRING_ESCAPE', 'STUFF', 'SUBSTRING', 'TRANSLATE', 'TRIM', 'UNICODE', 'UPPER'],\n  system: ['$PARTITION', '@@ERROR', '@@IDENTITY', '@@PACK_RECEIVED', '@@ROWCOUNT', '@@TRANCOUNT', 'BINARY_CHECKSUM', 'CHECKSUM', 'COMPRESS', 'CONNECTIONPROPERTY', 'CONTEXT_INFO', 'CURRENT_REQUEST_ID', 'CURRENT_TRANSACTION_ID', 'DECOMPRESS', 'ERROR_LINE', 'ERROR_MESSAGE', 'ERROR_NUMBER', 'ERROR_PROCEDURE', 'ERROR_SEVERITY', 'ERROR_STATE', 'FORMATMESSAGE', 'GET_FILESTREAM_TRANSACTION_CONTEXT', 'GETANSINULL', 'HOST_ID', 'HOST_NAME', 'ISNULL', 'ISNUMERIC', 'MIN_ACTIVE_ROWVERSION', 'NEWID', 'NEWSEQUENTIALID', 'ROWCOUNT_BIG', 'SESSION_CONTEXT', 'XACT_STATE'],\n  statistical: ['@@CONNECTIONS', '@@CPU_BUSY', '@@IDLE', '@@IO_BUSY', '@@PACK_SENT', '@@PACKET_ERRORS', '@@TIMETICKS', '@@TOTAL_ERRORS', '@@TOTAL_READ', '@@TOTAL_WRITE', 'TEXTPTR', 'TEXTVALID'],\n  trigger: ['COLUMNS_UPDATED', 'EVENTDATA', 'TRIGGER_NESTLEVEL', 'UPDATE'],\n  // Shorthand functions to use in place of CASE expression\n  caseAbbrev: ['COALESCE', 'NULLIF'],\n  // Parameterized types\n  // https://docs.microsoft.com/en-us/sql/t-sql/data-types/data-types-transact-sql?view=sql-server-ver15\n  dataTypes: ['DECIMAL', 'NUMERIC', 'FLOAT', 'REAL', 'DATETIME2', 'DATETIMEOFFSET', 'TIME', 'CHAR', 'VARCHAR', 'NCHAR', 'NVARCHAR', 'BINARY', 'VARBINARY']\n});\n//# sourceMappingURL=transactsql.functions.js.map","import { flatKeywordList } from '../../utils.js';\nexport const keywords = flatKeywordList({\n  // https://docs.microsoft.com/en-us/sql/t-sql/language-elements/reserved-keywords-transact-sql?view=sql-server-ver15\n  standard: ['ADD', 'ALL', 'ALTER', 'AND', 'ANY', 'AS', 'ASC', 'AUTHORIZATION', 'BACKUP', 'BEGIN', 'BETWEEN', 'BREAK', 'BROWSE', 'BULK', 'BY', 'CASCADE', 'CHECK', 'CHECKPOINT', 'CLOSE', 'CLUSTERED', 'COALESCE', 'COLLATE', 'COLUMN', 'COMMIT', 'COMPUTE', 'CONSTRAINT', 'CONTAINS', 'CONTAINSTABLE', 'CONTINUE', 'CONVERT', 'CREATE', 'CROSS', 'CURRENT', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'CURSOR', 'DATABASE', 'DBCC', 'DEALLOCATE', 'DECLARE', 'DEFAULT', 'DELETE', 'DENY', 'DESC', 'DISK', 'DISTINCT', 'DISTRIBUTED', 'DOUBLE', 'DROP', 'DUMP', 'ERRLVL', 'ESCAPE', 'EXEC', 'EXECUTE', 'EXISTS', 'EXIT', 'EXTERNAL', 'FETCH', 'FILE', 'FILLFACTOR', 'FOR', 'FOREIGN', 'FREETEXT', 'FREETEXTTABLE', 'FROM', 'FULL', 'FUNCTION', 'GOTO', 'GRANT', 'GROUP', 'HAVING', 'HOLDLOCK', 'IDENTITY', 'IDENTITYCOL', 'IDENTITY_INSERT', 'IF', 'IN', 'INDEX', 'INNER', 'INSERT', 'INTERSECT', 'INTO', 'IS', 'JOIN', 'KEY', 'KILL', 'LEFT', 'LIKE', 'LINENO', 'LOAD', 'MERGE', 'NATIONAL', 'NOCHECK', 'NONCLUSTERED', 'NOT', 'NULL', 'NULLIF', 'OF', 'OFF', 'OFFSETS', 'ON', 'OPEN', 'OPENDATASOURCE', 'OPENQUERY', 'OPENROWSET', 'OPENXML', 'OPTION', 'OR', 'ORDER', 'OUTER', 'OVER', 'PERCENT', 'PIVOT', 'PLAN', 'PRECISION', 'PRIMARY', 'PRINT', 'PROC', 'PROCEDURE', 'PUBLIC', 'RAISERROR', 'READ', 'READTEXT', 'RECONFIGURE', 'REFERENCES', 'REPLICATION', 'RESTORE', 'RESTRICT', 'RETURN', 'REVERT', 'REVOKE', 'RIGHT', 'ROLLBACK', 'ROWCOUNT', 'ROWGUIDCOL', 'RULE', 'SAVE', 'SCHEMA', 'SECURITYAUDIT', 'SELECT', 'SEMANTICKEYPHRASETABLE', 'SEMANTICSIMILARITYDETAILSTABLE', 'SEMANTICSIMILARITYTABLE', 'SESSION_USER', 'SET', 'SETUSER', 'SHUTDOWN', 'SOME', 'STATISTICS', 'SYSTEM_USER', 'TABLE', 'TABLESAMPLE', 'TEXTSIZE', 'THEN', 'TO', 'TOP', 'TRAN', 'TRANSACTION', 'TRIGGER', 'TRUNCATE', 'TRY_CONVERT', 'TSEQUAL', 'UNION', 'UNIQUE', 'UNPIVOT', 'UPDATE', 'UPDATETEXT', 'USE', 'USER', 'VALUES', 'VARYING', 'VIEW', 'WAITFOR', 'WHERE', 'WHILE', 'WITH', 'WITHIN GROUP', 'WRITETEXT'],\n  odbc: ['ABSOLUTE', 'ACTION', 'ADA', 'ADD', 'ALL', 'ALLOCATE', 'ALTER', 'AND', 'ANY', 'ARE', 'AS', 'ASC', 'ASSERTION', 'AT', 'AUTHORIZATION', 'AVG', 'BEGIN', 'BETWEEN', 'BIT', 'BIT_LENGTH', 'BOTH', 'BY', 'CASCADE', 'CASCADED', 'CAST', 'CATALOG', 'CHAR', 'CHARACTER', 'CHARACTER_LENGTH', 'CHAR_LENGTH', 'CHECK', 'CLOSE', 'COALESCE', 'COLLATE', 'COLLATION', 'COLUMN', 'COMMIT', 'CONNECT', 'CONNECTION', 'CONSTRAINT', 'CONSTRAINTS', 'CONTINUE', 'CONVERT', 'CORRESPONDING', 'COUNT', 'CREATE', 'CROSS', 'CURRENT', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'CURSOR', 'DATE', 'DAY', 'DEALLOCATE', 'DEC', 'DECIMAL', 'DECLARE', 'DEFAULT', 'DEFERRABLE', 'DEFERRED', 'DELETE', 'DESC', 'DESCRIBE', 'DESCRIPTOR', 'DIAGNOSTICS', 'DISCONNECT', 'DISTINCT', 'DOMAIN', 'DOUBLE', 'DROP', 'END-EXEC', 'ESCAPE', 'EXCEPTION', 'EXEC', 'EXECUTE', 'EXISTS', 'EXTERNAL', 'EXTRACT', 'FALSE', 'FETCH', 'FIRST', 'FLOAT', 'FOR', 'FOREIGN', 'FORTRAN', 'FOUND', 'FROM', 'FULL', 'GET', 'GLOBAL', 'GO', 'GOTO', 'GRANT', 'GROUP', 'HAVING', 'HOUR', 'IDENTITY', 'IMMEDIATE', 'IN', 'INCLUDE', 'INDEX', 'INDICATOR', 'INITIALLY', 'INNER', 'INPUT', 'INSENSITIVE', 'INSERT', 'INT', 'INTEGER', 'INTERSECT', 'INTERVAL', 'INTO', 'IS', 'ISOLATION', 'JOIN', 'KEY', 'LANGUAGE', 'LAST', 'LEADING', 'LEFT', 'LEVEL', 'LIKE', 'LOCAL', 'LOWER', 'MATCH', 'MAX', 'MIN', 'MINUTE', 'MODULE', 'MONTH', 'NAMES', 'NATIONAL', 'NATURAL', 'NCHAR', 'NEXT', 'NO', 'NONE', 'NOT', 'NULL', 'NULLIF', 'NUMERIC', 'OCTET_LENGTH', 'OF', 'ONLY', 'OPEN', 'OPTION', 'OR', 'ORDER', 'OUTER', 'OUTPUT', 'OVERLAPS', 'PAD', 'PARTIAL', 'PASCAL', 'POSITION', 'PRECISION', 'PREPARE', 'PRESERVE', 'PRIMARY', 'PRIOR', 'PRIVILEGES', 'PROCEDURE', 'PUBLIC', 'READ', 'REAL', 'REFERENCES', 'RELATIVE', 'RESTRICT', 'REVOKE', 'RIGHT', 'ROLLBACK', 'ROWS', 'SCHEMA', 'SCROLL', 'SECOND', 'SECTION', 'SELECT', 'SESSION', 'SESSION_USER', 'SET', 'SIZE', 'SMALLINT', 'SOME', 'SPACE', 'SQL', 'SQLCA', 'SQLCODE', 'SQLERROR', 'SQLSTATE', 'SQLWARNING', 'SUBSTRING', 'SUM', 'SYSTEM_USER', 'TABLE', 'TEMPORARY', 'TIME', 'TIMESTAMP', 'TIMEZONE_HOUR', 'TIMEZONE_MINUTE', 'TO', 'TRAILING', 'TRANSACTION', 'TRANSLATE', 'TRANSLATION', 'TRIM', 'TRUE', 'UNION', 'UNIQUE', 'UNKNOWN', 'UPDATE', 'UPPER', 'USAGE', 'USER', 'VALUE', 'VALUES', 'VARCHAR', 'VARYING', 'VIEW', 'WHENEVER', 'WHERE', 'WITH', 'WORK', 'WRITE', 'YEAR', 'ZONE']\n});\n//# sourceMappingURL=transactsql.keywords.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport Formatter from '../../formatter/Formatter.js';\nimport Tokenizer from '../../lexer/Tokenizer.js';\nimport { functions } from './transactsql.functions.js';\nimport { keywords } from './transactsql.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([// queries\n'WITH', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'WINDOW', 'PARTITION BY', 'ORDER BY', 'OFFSET', 'FETCH {FIRST | NEXT}', // Data manipulation\n// - insert:\n'INSERT [INTO]', 'VALUES', // - update:\n'UPDATE', 'SET', 'WHERE CURRENT OF', // - delete:\n'DELETE [FROM]', // - truncate:\n'TRUNCATE TABLE', // - merge:\n'MERGE [INTO]', 'WHEN [NOT] MATCHED [BY TARGET | BY SOURCE] [THEN]', 'UPDATE SET', // Data definition\n'CREATE [OR ALTER] [MATERIALIZED] VIEW', 'CREATE TABLE', 'DROP TABLE [IF EXISTS]', // - alter table:\n'ALTER TABLE', 'ADD', 'DROP COLUMN [IF EXISTS]', 'ALTER COLUMN', // https://docs.microsoft.com/en-us/sql/t-sql/statements/statements?view=sql-server-ver15\n'ADD SENSITIVITY CLASSIFICATION', 'ADD SIGNATURE', 'AGGREGATE', 'ANSI_DEFAULTS', 'ANSI_NULLS', 'ANSI_NULL_DFLT_OFF', 'ANSI_NULL_DFLT_ON', 'ANSI_PADDING', 'ANSI_WARNINGS', 'APPLICATION ROLE', 'ARITHABORT', 'ARITHIGNORE', 'ASSEMBLY', 'ASYMMETRIC KEY', 'AUTHORIZATION', 'AVAILABILITY GROUP', 'BACKUP', 'BACKUP CERTIFICATE', 'BACKUP MASTER KEY', 'BACKUP SERVICE MASTER KEY', 'BEGIN CONVERSATION TIMER', 'BEGIN DIALOG CONVERSATION', 'BROKER PRIORITY', 'BULK INSERT', 'CERTIFICATE', 'CLOSE MASTER KEY', 'CLOSE SYMMETRIC KEY', 'COLLATE', 'COLUMN ENCRYPTION KEY', 'COLUMN MASTER KEY', 'COLUMNSTORE INDEX', 'CONCAT_NULL_YIELDS_NULL', 'CONTEXT_INFO', 'CONTRACT', 'CREDENTIAL', 'CRYPTOGRAPHIC PROVIDER', 'CURSOR_CLOSE_ON_COMMIT', 'DATABASE', 'DATABASE AUDIT SPECIFICATION', 'DATABASE ENCRYPTION KEY', 'DATABASE HADR', 'DATABASE SCOPED CONFIGURATION', 'DATABASE SCOPED CREDENTIAL', 'DATABASE SET', 'DATEFIRST', 'DATEFORMAT', 'DEADLOCK_PRIORITY', 'DENY', 'DENY XML', 'DISABLE TRIGGER', 'ENABLE TRIGGER', 'END CONVERSATION', 'ENDPOINT', 'EVENT NOTIFICATION', 'EVENT SESSION', 'EXECUTE AS', 'EXTERNAL DATA SOURCE', 'EXTERNAL FILE FORMAT', 'EXTERNAL LANGUAGE', 'EXTERNAL LIBRARY', 'EXTERNAL RESOURCE POOL', 'EXTERNAL TABLE', 'FIPS_FLAGGER', 'FMTONLY', 'FORCEPLAN', 'FULLTEXT CATALOG', 'FULLTEXT INDEX', 'FULLTEXT STOPLIST', 'FUNCTION', 'GET CONVERSATION GROUP', 'GET_TRANSMISSION_STATUS', 'GRANT', 'GRANT XML', 'IDENTITY_INSERT', 'IMPLICIT_TRANSACTIONS', 'INDEX', 'LANGUAGE', 'LOCK_TIMEOUT', 'LOGIN', 'MASTER KEY', 'MESSAGE TYPE', 'MOVE CONVERSATION', 'NOCOUNT', 'NOEXEC', 'NUMERIC_ROUNDABORT', 'OFFSETS', 'OPEN MASTER KEY', 'OPEN SYMMETRIC KEY', 'PARSEONLY', 'PARTITION FUNCTION', 'PARTITION SCHEME', 'PROCEDURE', 'QUERY_GOVERNOR_COST_LIMIT', 'QUEUE', 'QUOTED_IDENTIFIER', 'RECEIVE', 'REMOTE SERVICE BINDING', 'REMOTE_PROC_TRANSACTIONS', 'RESOURCE GOVERNOR', 'RESOURCE POOL', 'RESTORE', 'RESTORE FILELISTONLY', 'RESTORE HEADERONLY', 'RESTORE LABELONLY', 'RESTORE MASTER KEY', 'RESTORE REWINDONLY', 'RESTORE SERVICE MASTER KEY', 'RESTORE VERIFYONLY', 'REVERT', 'REVOKE', 'REVOKE XML', 'ROLE', 'ROUTE', 'ROWCOUNT', 'RULE', 'SCHEMA', 'SEARCH PROPERTY LIST', 'SECURITY POLICY', 'SELECTIVE XML INDEX', 'SEND', 'SENSITIVITY CLASSIFICATION', 'SEQUENCE', 'SERVER AUDIT', 'SERVER AUDIT SPECIFICATION', 'SERVER CONFIGURATION', 'SERVER ROLE', 'SERVICE', 'SERVICE MASTER KEY', 'SETUSER', 'SHOWPLAN_ALL', 'SHOWPLAN_TEXT', 'SHOWPLAN_XML', 'SIGNATURE', 'SPATIAL INDEX', 'STATISTICS', 'STATISTICS IO', 'STATISTICS PROFILE', 'STATISTICS TIME', 'STATISTICS XML', 'SYMMETRIC KEY', 'SYNONYM', 'TABLE', 'TABLE IDENTITY', 'TEXTSIZE', 'TRANSACTION ISOLATION LEVEL', 'TRIGGER', 'TYPE', 'UPDATE STATISTICS', 'USER', 'WORKLOAD GROUP', 'XACT_ABORT', 'XML INDEX', 'XML SCHEMA COLLECTION']);\nconst reservedSetOperations = expandPhrases(['UNION [ALL]', 'EXCEPT', 'INTERSECT']);\nconst reservedJoins = expandPhrases(['JOIN', '{LEFT | RIGHT | FULL} [OUTER] JOIN', '{INNER | CROSS} JOIN', // non-standard joins\n'{CROSS | OUTER} APPLY']);\nconst reservedPhrases = expandPhrases(['ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]', '{ROWS | RANGE} BETWEEN']); // https://docs.microsoft.com/en-us/sql/t-sql/language-reference?view=sql-server-ver15\n\nexport default class TransactSqlFormatter extends Formatter {\n  tokenizer() {\n    return new Tokenizer({\n      reservedClauses,\n      reservedSelect,\n      reservedSetOperations,\n      reservedJoins,\n      reservedPhrases,\n      reservedKeywords: keywords,\n      reservedFunctionNames: functions,\n      nestedBlockComments: true,\n      stringTypes: [{\n        quote: \"''-qq\",\n        prefixes: ['N']\n      }],\n      identTypes: [`\"\"-qq`, '[]'],\n      identChars: {\n        first: '#@',\n        rest: '#@$'\n      },\n      paramTypes: {\n        named: ['@'],\n        quoted: ['@']\n      },\n      operators: ['%', '&', '|', '^', '~', '!<', '!>', '+=', '-=', '*=', '/=', '%=', '|=', '&=', '^=', '::'] // TODO: Support for money constants\n\n    });\n  }\n\n  formatOptions() {\n    return {\n      alwaysDenseOperators: ['::']\n    };\n  }\n\n}\n//# sourceMappingURL=transactsql.formatter.js.map","import { flatKeywordList } from '../../utils.js';\nexport const keywords = flatKeywordList({\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/restricted-keywords/list-of-restricted-keywords.html\n  all: ['ABORT', 'ABSOLUTE', 'ACCESS', 'ACCESSIBLE', 'ACCOUNT', 'ACTION', 'ACTIVE', 'ADD', 'ADMIN', 'AFTER', 'AGAINST', 'AGGREGATE', 'AGGREGATES', 'AGGREGATOR', 'AGGREGATOR_ID', 'AGGREGATOR_PLAN_HASH', 'AGGREGATORS', 'ALGORITHM', 'ALL', 'ALSO', 'ALTER', 'ALWAYS', 'ANALYZE', 'AND', 'ANY', 'ARGHISTORY', 'ARRANGE', 'ARRANGEMENT', 'ARRAY', 'AS', 'ASC', 'ASCII', 'ASENSITIVE', 'ASM', 'ASSERTION', 'ASSIGNMENT', 'AST', 'ASYMMETRIC', 'ASYNC', 'AT', 'ATTACH', 'ATTRIBUTE', 'AUTHORIZATION', 'AUTO', 'AUTO_INCREMENT', 'AUTO_REPROVISION', 'AUTOSTATS', 'AUTOSTATS_CARDINALITY_MODE', 'AUTOSTATS_ENABLED', 'AUTOSTATS_HISTOGRAM_MODE', 'AUTOSTATS_SAMPLING', 'AVAILABILITY', 'AVG', 'AVG_ROW_LENGTH', 'AVRO', 'AZURE', 'BACKGROUND', '_BACKGROUND_THREADS_FOR_CLEANUP', 'BACKUP', 'BACKUP_HISTORY', 'BACKUP_ID', 'BACKWARD', 'BATCH', 'BATCHES', 'BATCH_INTERVAL', '_BATCH_SIZE_LIMIT', 'BEFORE', 'BEGIN', 'BETWEEN', 'BIGINT', 'BINARY', '_BINARY', 'BIT', 'BLOB', 'BOOL', 'BOOLEAN', 'BOOTSTRAP', 'BOTH', '_BT', 'BTREE', 'BUCKET_COUNT', 'BUCKETS', 'BY', 'BYTE', 'BYTE_LENGTH', 'CACHE', 'CALL', 'CALL_FOR_PIPELINE', 'CALLED', 'CAPTURE', 'CASCADE', 'CASCADED', 'CASE', 'CATALOG', 'CHAIN', 'CHANGE', 'CHAR', 'CHARACTER', 'CHARACTERISTICS', 'CHARSET', 'CHECK', 'CHECKPOINT', '_CHECK_CAN_CONNECT', '_CHECK_CONSISTENCY', 'CHECKSUM', '_CHECKSUM', 'CLASS', 'CLEAR', 'CLIENT', 'CLIENT_FOUND_ROWS', 'CLOSE', 'CLUSTER', 'CLUSTERED', 'CNF', 'COALESCE', 'COLLATE', 'COLLATION', 'COLUMN', 'COLUMNAR', 'COLUMNS', 'COLUMNSTORE', 'COLUMNSTORE_SEGMENT_ROWS', 'COMMENT', 'COMMENTS', 'COMMIT', 'COMMITTED', '_COMMIT_LOG_TAIL', 'COMPACT', 'COMPILE', 'COMPRESSED', 'COMPRESSION', 'CONCURRENT', 'CONCURRENTLY', 'CONDITION', 'CONFIGURATION', 'CONNECTION', 'CONNECTIONS', 'CONFIG', 'CONSTRAINT', 'CONTAINS', 'CONTENT', 'CONTINUE', '_CONTINUE_REPLAY', 'CONVERSION', 'CONVERT', 'COPY', '_CORE', 'COST', 'CREATE', 'CREDENTIALS', 'CROSS', 'CUBE', 'CSV', 'CUME_DIST', 'CURRENT', 'CURRENT_CATALOG', 'CURRENT_DATE', 'CURRENT_SCHEMA', 'CURRENT_SECURITY_GROUPS', 'CURRENT_SECURITY_ROLES', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'CURSOR', 'CYCLE', 'DATA', 'DATABASE', 'DATABASES', 'DATE', 'DATETIME', 'DAY', 'DAY_HOUR', 'DAY_MICROSECOND', 'DAY_MINUTE', 'DAY_SECOND', 'DEALLOCATE', 'DEC', 'DECIMAL', 'DECLARE', 'DEFAULT', 'DEFAULTS', 'DEFERRABLE', 'DEFERRED', 'DEFINED', 'DEFINER', 'DELAYED', 'DELAY_KEY_WRITE', 'DELETE', 'DELIMITER', 'DELIMITERS', 'DENSE_RANK', 'DESC', 'DESCRIBE', 'DETACH', 'DETERMINISTIC', 'DICTIONARY', 'DIFFERENTIAL', 'DIRECTORY', 'DISABLE', 'DISCARD', '_DISCONNECT', 'DISK', 'DISTINCT', 'DISTINCTROW', 'DISTRIBUTED_JOINS', 'DIV', 'DO', 'DOCUMENT', 'DOMAIN', 'DOUBLE', 'DROP', '_DROP_PROFILE', 'DUAL', 'DUMP', 'DUPLICATE', 'DURABILITY', 'DYNAMIC', 'EARLIEST', 'EACH', 'ECHO', 'ELECTION', 'ELSE', 'ELSEIF', 'ENABLE', 'ENCLOSED', 'ENCODING', 'ENCRYPTED', 'END', 'ENGINE', 'ENGINES', 'ENUM', 'ERRORS', 'ESCAPE', 'ESCAPED', 'ESTIMATE', 'EVENT', 'EVENTS', 'EXCEPT', 'EXCLUDE', 'EXCLUDING', 'EXCLUSIVE', 'EXECUTE', 'EXISTS', 'EXIT', 'EXPLAIN', 'EXTENDED', 'EXTENSION', 'EXTERNAL', 'EXTERNAL_HOST', 'EXTERNAL_PORT', 'EXTRACTOR', 'EXTRACTORS', 'EXTRA_JOIN', '_FAILOVER', 'FAILED_LOGIN_ATTEMPTS', 'FAILURE', 'FALSE', 'FAMILY', 'FAULT', 'FETCH', 'FIELDS', 'FILE', 'FILES', 'FILL', 'FIX_ALTER', 'FIXED', 'FLOAT', 'FLOAT4', 'FLOAT8', 'FLUSH', 'FOLLOWING', 'FOR', 'FORCE', 'FORCE_COMPILED_MODE', 'FORCE_INTERPRETER_MODE', 'FOREGROUND', 'FOREIGN', 'FORMAT', 'FORWARD', 'FREEZE', 'FROM', 'FS', '_FSYNC', 'FULL', 'FULLTEXT', 'FUNCTION', 'FUNCTIONS', 'GC', 'GCS', 'GET_FORMAT', '_GC', '_GCX', 'GENERATE', 'GEOGRAPHY', 'GEOGRAPHYPOINT', 'GEOMETRY', 'GEOMETRYPOINT', 'GLOBAL', '_GLOBAL_VERSION_TIMESTAMP', 'GRANT', 'GRANTED', 'GRANTS', 'GROUP', 'GROUPING', 'GROUPS', 'GZIP', 'HANDLE', 'HANDLER', 'HARD_CPU_LIMIT_PERCENTAGE', 'HASH', 'HAS_TEMP_TABLES', 'HAVING', 'HDFS', 'HEADER', 'HEARTBEAT_NO_LOGGING', 'HIGH_PRIORITY', 'HISTOGRAM', 'HOLD', 'HOLDING', 'HOST', 'HOSTS', 'HOUR', 'HOUR_MICROSECOND', 'HOUR_MINUTE', 'HOUR_SECOND', 'IDENTIFIED', 'IDENTITY', 'IF', 'IGNORE', 'ILIKE', 'IMMEDIATE', 'IMMUTABLE', 'IMPLICIT', 'IMPORT', 'IN', 'INCLUDING', 'INCREMENT', 'INCREMENTAL', 'INDEX', 'INDEXES', 'INFILE', 'INHERIT', 'INHERITS', '_INIT_PROFILE', 'INIT', 'INITIALIZE', 'INITIALLY', 'INJECT', 'INLINE', 'INNER', 'INOUT', 'INPUT', 'INSENSITIVE', 'INSERT', 'INSERT_METHOD', 'INSTANCE', 'INSTEAD', 'IN', 'INT', 'INT1', 'INT2', 'INT3', 'INT4', 'INT8', 'INTEGER', '_INTERNAL_DYNAMIC_TYPECAST', 'INTERPRETER_MODE', 'INTERSECT', 'INTERVAL', 'INTO', 'INVOKER', 'ISOLATION', 'ITERATE', 'JOIN', 'JSON', 'KAFKA', 'KEY', 'KEY_BLOCK_SIZE', 'KEYS', 'KILL', 'KILLALL', 'LABEL', 'LAG', 'LANGUAGE', 'LARGE', 'LAST', 'LAST_VALUE', 'LATERAL', 'LATEST', 'LC_COLLATE', 'LC_CTYPE', 'LEAD', 'LEADING', 'LEAF', 'LEAKPROOF', 'LEAVE', 'LEAVES', 'LEFT', 'LEVEL', 'LICENSE', 'LIKE', 'LIMIT', 'LINES', 'LISTEN', 'LLVM', 'LOADDATA_WHERE', 'LOAD', 'LOCAL', 'LOCALTIME', 'LOCALTIMESTAMP', 'LOCATION', 'LOCK', 'LONG', 'LONGBLOB', 'LONGTEXT', 'LOOP', 'LOW_PRIORITY', '_LS', 'LZ4', 'MANAGEMENT', '_MANAGEMENT_THREAD', 'MAPPING', 'MASTER', 'MATCH', 'MATERIALIZED', 'MAXVALUE', 'MAX_CONCURRENCY', 'MAX_ERRORS', 'MAX_PARTITIONS_PER_BATCH', 'MAX_QUEUE_DEPTH', 'MAX_RETRIES_PER_BATCH_PARTITION', 'MAX_ROWS', 'MBC', 'MPL', 'MEDIUMBLOB', 'MEDIUMINT', 'MEDIUMTEXT', 'MEMBER', 'MEMORY', 'MEMORY_PERCENTAGE', '_MEMSQL_TABLE_ID_LOOKUP', 'MEMSQL', 'MEMSQL_DESERIALIZE', 'MEMSQL_IMITATING_KAFKA', 'MEMSQL_SERIALIZE', 'MERGE', 'METADATA', 'MICROSECOND', 'MIDDLEINT', 'MIN_ROWS', 'MINUS', 'MINUTE_MICROSECOND', 'MINUTE_SECOND', 'MINVALUE', 'MOD', 'MODE', 'MODEL', 'MODIFIES', 'MODIFY', 'MONTH', 'MOVE', 'MPL', 'NAMES', 'NAMED', 'NAMESPACE', 'NATIONAL', 'NATURAL', 'NCHAR', 'NEXT', 'NO', 'NODE', 'NONE', 'NO_QUERY_REWRITE', 'NOPARAM', 'NOT', 'NOTHING', 'NOTIFY', 'NOWAIT', 'NO_WRITE_TO_BINLOG', 'NO_QUERY_REWRITE', 'NORELY', 'NTH_VALUE', 'NTILE', 'NULL', 'NULLCOLS', 'NULLS', 'NUMERIC', 'NVARCHAR', 'OBJECT', 'OF', 'OFF', 'OFFLINE', 'OFFSET', 'OFFSETS', 'OIDS', 'ON', 'ONLINE', 'ONLY', 'OPEN', 'OPERATOR', 'OPTIMIZATION', 'OPTIMIZE', 'OPTIMIZER', 'OPTIMIZER_STATE', 'OPTION', 'OPTIONS', 'OPTIONALLY', 'OR', 'ORDER', 'ORDERED_SERIALIZE', 'ORPHAN', 'OUT', 'OUT_OF_ORDER', 'OUTER', 'OUTFILE', 'OVER', 'OVERLAPS', 'OVERLAY', 'OWNED', 'OWNER', 'PACK_KEYS', 'PAIRED', 'PARSER', 'PARQUET', 'PARTIAL', 'PARTITION', 'PARTITION_ID', 'PARTITIONING', 'PARTITIONS', 'PASSING', 'PASSWORD', 'PASSWORD_LOCK_TIME', 'PAUSE', '_PAUSE_REPLAY', 'PERIODIC', 'PERSISTED', 'PIPELINE', 'PIPELINES', 'PLACING', 'PLAN', 'PLANS', 'PLANCACHE', 'PLUGINS', 'POOL', 'POOLS', 'PORT', 'PRECEDING', 'PRECISION', 'PREPARE', 'PRESERVE', 'PRIMARY', 'PRIOR', 'PRIVILEGES', 'PROCEDURAL', 'PROCEDURE', 'PROCEDURES', 'PROCESS', 'PROCESSLIST', 'PROFILE', 'PROFILES', 'PROGRAM', 'PROMOTE', 'PROXY', 'PURGE', 'QUARTER', 'QUERIES', 'QUERY', 'QUERY_TIMEOUT', 'QUEUE', 'RANGE', 'RANK', 'READ', '_READ', 'READS', 'REAL', 'REASSIGN', 'REBALANCE', 'RECHECK', 'RECORD', 'RECURSIVE', 'REDUNDANCY', 'REDUNDANT', 'REF', 'REFERENCE', 'REFERENCES', 'REFRESH', 'REGEXP', 'REINDEX', 'RELATIVE', 'RELEASE', 'RELOAD', 'RELY', 'REMOTE', 'REMOVE', 'RENAME', 'REPAIR', '_REPAIR_TABLE', 'REPEAT', 'REPEATABLE', '_REPL', '_REPROVISIONING', 'REPLACE', 'REPLICA', 'REPLICATE', 'REPLICATING', 'REPLICATION', 'REQUIRE', 'RESOURCE', 'RESOURCE_POOL', 'RESET', 'RESTART', 'RESTORE', 'RESTRICT', 'RESULT', '_RESURRECT', 'RETRY', 'RETURN', 'RETURNING', 'RETURNS', 'REVERSE', 'RG_POOL', 'REVOKE', 'RIGHT', 'RIGHT_ANTI_JOIN', 'RIGHT_SEMI_JOIN', 'RIGHT_STRAIGHT_JOIN', 'RLIKE', 'ROLES', 'ROLLBACK', 'ROLLUP', 'ROUTINE', 'ROW', 'ROW_COUNT', 'ROW_FORMAT', 'ROW_NUMBER', 'ROWS', 'ROWSTORE', 'RULE', '_RPC', 'RUNNING', 'S3', 'SAFE', 'SAVE', 'SAVEPOINT', 'SCALAR', 'SCHEMA', 'SCHEMAS', 'SCHEMA_BINDING', 'SCROLL', 'SEARCH', 'SECOND', 'SECOND_MICROSECOND', 'SECURITY', 'SELECT', 'SEMI_JOIN', '_SEND_THREADS', 'SENSITIVE', 'SEPARATOR', 'SEQUENCE', 'SEQUENCES', 'SERIAL', 'SERIALIZABLE', 'SERIES', 'SERVICE_USER', 'SERVER', 'SESSION', 'SESSION_USER', 'SET', 'SETOF', 'SECURITY_LISTS_INTERSECT', 'SHA', 'SHARD', 'SHARDED', 'SHARDED_ID', 'SHARE', 'SHOW', 'SHUTDOWN', 'SIGNAL', 'SIGNED', 'SIMILAR', 'SIMPLE', 'SITE', 'SKIP', 'SKIPPED_BATCHES', '__SLEEP', 'SMALLINT', 'SNAPSHOT', '_SNAPSHOT', '_SNAPSHOTS', 'SOFT_CPU_LIMIT_PERCENTAGE', 'SOME', 'SONAME', 'SPARSE', 'SPATIAL', 'SPATIAL_CHECK_INDEX', 'SPECIFIC', 'SQL', 'SQL_BIG_RESULT', 'SQL_BUFFER_RESULT', 'SQL_CACHE', 'SQL_CALC_FOUND_ROWS', 'SQLEXCEPTION', 'SQL_MODE', 'SQL_NO_CACHE', 'SQL_NO_LOGGING', 'SQL_SMALL_RESULT', 'SQLSTATE', 'SQLWARNING', 'STDIN', 'STDOUT', 'STOP', 'STORAGE', 'STRAIGHT_JOIN', 'STRICT', 'STRING', 'STRIP', 'SUCCESS', 'SUPER', 'SYMMETRIC', 'SYNC_SNAPSHOT', 'SYNC', '_SYNC', '_SYNC2', '_SYNC_PARTITIONS', '_SYNC_SNAPSHOT', 'SYNCHRONIZE', 'SYSID', 'SYSTEM', 'TABLE', 'TABLE_CHECKSUM', 'TABLES', 'TABLESPACE', 'TAGS', 'TARGET_SIZE', 'TASK', 'TEMP', 'TEMPLATE', 'TEMPORARY', 'TEMPTABLE', '_TERM_BUMP', 'TERMINATE', 'TERMINATED', 'TEXT', 'THEN', 'TIME', 'TIMEOUT', 'TIMESTAMP', 'TIMESTAMPADD', 'TIMESTAMPDIFF', 'TIMEZONE', 'TINYBLOB', 'TINYINT', 'TINYTEXT', 'TO', 'TRACELOGS', 'TRADITIONAL', 'TRAILING', 'TRANSFORM', 'TRANSACTION', '_TRANSACTIONS_EXPERIMENTAL', 'TREAT', 'TRIGGER', 'TRIGGERS', 'TRUE', 'TRUNC', 'TRUNCATE', 'TRUSTED', 'TWO_PHASE', '_TWOPCID', 'TYPE', 'TYPES', 'UNBOUNDED', 'UNCOMMITTED', 'UNDEFINED', 'UNDO', 'UNENCRYPTED', 'UNENFORCED', 'UNHOLD', 'UNICODE', 'UNION', 'UNIQUE', '_UNITTEST', 'UNKNOWN', 'UNLISTEN', '_UNLOAD', 'UNLOCK', 'UNLOGGED', 'UNPIVOT', 'UNSIGNED', 'UNTIL', 'UPDATE', 'UPGRADE', 'USAGE', 'USE', 'USER', 'USERS', 'USING', 'UTC_DATE', 'UTC_TIME', 'UTC_TIMESTAMP', '_UTF8', 'VACUUM', 'VALID', 'VALIDATE', 'VALIDATOR', 'VALUE', 'VALUES', 'VARBINARY', 'VARCHAR', 'VARCHARACTER', 'VARIABLES', 'VARIADIC', 'VARYING', 'VERBOSE', 'VIEW', 'VOID', 'VOLATILE', 'VOTING', 'WAIT', '_WAKE', 'WARNINGS', 'WEEK', 'WHEN', 'WHERE', 'WHILE', 'WHITESPACE', 'WINDOW', 'WITH', 'WITHOUT', 'WITHIN', '_WM_HEARTBEAT', 'WORK', 'WORKLOAD', 'WRAPPER', 'WRITE', 'XACT_ID', 'XOR', 'YEAR', 'YEAR_MONTH', 'YES', 'ZEROFILL', 'ZONE']\n});\n//# sourceMappingURL=singlestoredb.keywords.js.map","import { flatKeywordList } from '../../utils.js';\nexport const functions = flatKeywordList({\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/vector-functions/vector-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/window-functions/window-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/string-functions/string-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/conditional-functions/conditional-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/numeric-functions/numeric-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/geospatial-functions/geospatial-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/json-functions/json-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/information-functions/information-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/aggregate-functions/aggregate-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/time-series-functions/time-series-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/identifier-generation-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/date-and-time-functions/date-and-time-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/distinct-count-estimation-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/full-text-search-functions/full-text-search-functions.html\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/regular-expression-functions.html\n  all: ['ABS', 'ACOS', 'ADDDATE', 'ADDTIME', 'AES_DECRYPT', 'AES_ENCRYPT', 'ANY_VALUE', 'APPROX_COUNT_DISTINCT', 'APPROX_COUNT_DISTINCT_ACCUMULATE', 'APPROX_COUNT_DISTINCT_COMBINE', 'APPROX_COUNT_DISTINCT_ESTIMATE', 'APPROX_GEOGRAPHY_INTERSECTS', 'APPROX_PERCENTILE', 'ASCII', 'ASIN', 'ATAN', 'ATAN2', 'AVG', 'BIN', 'BINARY', 'BIT_AND', 'BIT_COUNT', 'BIT_OR', 'BIT_XOR', 'CAST', 'CEIL', 'CEILING', 'CHAR', 'CHARACTER_LENGTH', 'CHAR_LENGTH', 'CHARSET', 'COALESCE', 'COERCIBILITY', 'COLLATION', 'COLLECT', 'CONCAT', 'CONCAT_WS', 'CONNECTION_ID', 'CONV', 'CONVERT', 'CONVERT_TZ', 'COS', 'COT', 'COUNT', 'CUME_DIST', 'CURDATE', 'CURRENT_DATE', 'CURRENT_ROLE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'CURTIME', 'DATABASE', 'DATE', 'DATE_ADD', 'DATEDIFF', 'DATE_FORMAT', 'DATE_SUB', 'DATE_TRUNC', 'DAY', 'DAYNAME', 'DAYOFMONTH', 'DAYOFWEEK', 'DAYOFYEAR', 'DECODE', 'DEFAULT', 'DEGREES', 'DENSE_RANK', 'DIV', 'DOT_PRODUCT', 'ELT', 'EUCLIDEAN_DISTANCE', 'EXP', 'EXTRACT', 'FIELD', 'FIRST', 'FIRST_VALUE', 'FLOOR', 'FORMAT', 'FOUND_ROWS', 'FROM_BASE64', 'FROM_DAYS', 'FROM_UNIXTIME', 'GEOGRAPHY_AREA', 'GEOGRAPHY_CONTAINS', 'GEOGRAPHY_DISTANCE', 'GEOGRAPHY_INTERSECTS', 'GEOGRAPHY_LATITUDE', 'GEOGRAPHY_LENGTH', 'GEOGRAPHY_LONGITUDE', 'GEOGRAPHY_POINT', 'GEOGRAPHY_WITHIN_DISTANCE', 'GEOMETRY_AREA', 'GEOMETRY_CONTAINS', 'GEOMETRY_DISTANCE', 'GEOMETRY_FILTER', 'GEOMETRY_INTERSECTS', 'GEOMETRY_LENGTH', 'GEOMETRY_POINT', 'GEOMETRY_WITHIN_DISTANCE', 'GEOMETRY_X', 'GEOMETRY_Y', 'GREATEST', 'GROUPING', 'GROUP_CONCAT', 'HEX', 'HIGHLIGHT', 'HOUR', 'ICU_VERSION', 'IF', 'IFNULL', 'INET_ATON', 'INET_NTOA', 'INET6_ATON', 'INET6_NTOA', 'INITCAP', 'INSERT', 'INSTR', 'INTERVAL', 'IS', 'IS NULL', 'JSON_AGG', 'JSON_ARRAY_CONTAINS_DOUBLE', 'JSON_ARRAY_CONTAINS_JSON', 'JSON_ARRAY_CONTAINS_STRING', 'JSON_ARRAY_PUSH_DOUBLE', 'JSON_ARRAY_PUSH_JSON', 'JSON_ARRAY_PUSH_STRING', 'JSON_DELETE_KEY', 'JSON_EXTRACT_DOUBLE', 'JSON_EXTRACT_JSON', 'JSON_EXTRACT_STRING', 'JSON_EXTRACT_BIGINT', 'JSON_GET_TYPE', 'JSON_LENGTH', 'JSON_SET_DOUBLE', 'JSON_SET_JSON', 'JSON_SET_STRING', 'JSON_SPLICE_DOUBLE', 'JSON_SPLICE_JSON', 'JSON_SPLICE_STRING', 'LAG', 'LAST_DAY', 'LAST_VALUE', 'LCASE', 'LEAD', 'LEAST', 'LEFT', 'LENGTH', 'LIKE', 'LN', 'LOCALTIME', 'LOCALTIMESTAMP', 'LOCATE', 'LOG', 'LOG10', 'LOG2', 'LPAD', 'LTRIM', 'MATCH', 'MAX', 'MD5', 'MEDIAN', 'MICROSECOND', 'MIN', 'MINUTE', 'MOD', 'MONTH', 'MONTHNAME', 'MONTHS_BETWEEN', 'NOT', 'NOW', 'NTH_VALUE', 'NTILE', 'NULLIF', 'OCTET_LENGTH', 'PERCENT_RANK', 'PERCENTILE_CONT', 'PERCENTILE_DISC', 'PI', 'PIVOT', 'POSITION', 'POW', 'POWER', 'QUARTER', 'QUOTE', 'RADIANS', 'RAND', 'RANK', 'REGEXP', 'REPEAT', 'REPLACE', 'REVERSE', 'RIGHT', 'RLIKE', 'ROUND', 'ROW_COUNT', 'ROW_NUMBER', 'RPAD', 'RTRIM', 'SCALAR', 'SCHEMA', 'SEC_TO_TIME', 'SHA1', 'SHA2', 'SIGMOID', 'SIGN', 'SIN', 'SLEEP', 'SPLIT', 'SOUNDEX', 'SOUNDS LIKE', 'SOURCE_POS_WAIT', 'SPACE', 'SQRT', 'STDDEV', 'STDDEV_POP', 'STDDEV_SAMP', 'STR_TO_DATE', 'SUBDATE', 'SUBSTR', 'SUBSTRING', 'SUBSTRING_INDEX', 'SUM', 'SYS_GUID', 'TAN', 'TIME', 'TIMEDIFF', 'TIME_BUCKET', 'TIME_FORMAT', 'TIMESTAMP', 'TIMESTAMPADD', 'TIMESTAMPDIFF', 'TIME_TO_SEC', 'TO_BASE64', 'TO_CHAR', 'TO_DAYS', 'TO_JSON', 'TO_NUMBER', 'TO_SECONDS', 'TO_TIMESTAMP', 'TRIM', 'TRUNC', 'TRUNCATE', 'UCASE', 'UNHEX', 'UNIX_TIMESTAMP', 'UPDATEXML', 'UPPER', 'USER', 'UTC_DATE', 'UTC_TIME', 'UTC_TIMESTAMP', 'UUID', 'VALUES', 'VARIANCE', 'VAR_POP', 'VAR_SAMP', 'VECTOR_SUB', 'VERSION', 'WEEK', 'WEEKDAY', 'WEEKOFYEAR', 'YEAR', // Data types with parameters\n  // https://docs.singlestore.com/managed-service/en/reference/sql-reference/data-types.html\n  'BIT', 'TINYINT', 'SMALLINT', 'MEDIUMINT', 'INT', 'INTEGER', 'BIGINT', 'DECIMAL', 'DEC', 'NUMERIC', 'FIXED', 'FLOAT', 'DOUBLE', 'DOUBLE PRECISION', 'REAL', 'DATETIME', 'TIMESTAMP', 'TIME', 'YEAR', 'CHAR', 'NATIONAL CHAR', 'VARCHAR', 'NATIONAL VARCHAR', 'BINARY', 'VARBINARY', 'BLOB', 'TEXT', 'ENUM']\n});\n//# sourceMappingURL=singlestoredb.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport Formatter from '../../formatter/Formatter.js';\nimport Tokenizer from '../../lexer/Tokenizer.js';\nimport { EOF_TOKEN, isToken, TokenType } from '../../lexer/token.js';\nimport { keywords } from './singlestoredb.keywords.js';\nimport { functions } from './singlestoredb.functions.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT | DISTINCTROW]']);\nconst reservedClauses = expandPhrases([// queries\n'WITH', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'PARTITION BY', 'ORDER BY', 'LIMIT', 'OFFSET', // Data manipulation\n// - insert:\n'INSERT [IGNORE] [INTO]', 'VALUES', 'REPLACE [INTO]', // - update:\n'UPDATE', 'SET', // - delete:\n'DELETE [FROM]', // - truncate:\n'TRUNCATE [TABLE]', // Data definition\n'CREATE VIEW', 'CREATE [ROWSTORE] [REFERENCE | TEMPORARY | GLOBAL TEMPORARY] TABLE [IF NOT EXISTS]', 'CREATE [OR REPLACE] [TEMPORARY] PROCEDURE [IF NOT EXISTS]', 'CREATE [OR REPLACE] [EXTERNAL] FUNCTION', 'DROP [TEMPORARY] TABLE [IF EXISTS]', // - alter table:\n'ALTER [ONLINE] TABLE', 'ADD [COLUMN]', 'ADD [UNIQUE] {INDEX | KEY}', 'DROP [COLUMN]', 'MODIFY [COLUMN]', 'CHANGE', 'RENAME [TO | AS]', // https://docs.singlestore.com/managed-service/en/reference/sql-reference.html\n'ADD AGGREGATOR', 'ADD LEAF', 'AGGREGATOR SET AS MASTER', 'ALTER DATABASE', 'ALTER PIPELINE', 'ALTER RESOURCE POOL', 'ALTER USER', 'ALTER VIEW', 'ANALYZE TABLE', 'ATTACH DATABASE', 'ATTACH LEAF', 'ATTACH LEAF ALL', 'BACKUP DATABASE', 'BINLOG', 'BOOTSTRAP AGGREGATOR', 'CACHE INDEX', 'CALL', 'CHANGE', 'CHANGE MASTER TO', 'CHANGE REPLICATION FILTER', 'CHANGE REPLICATION SOURCE TO', 'CHECK BLOB CHECKSUM', 'CHECK TABLE', 'CHECKSUM TABLE', 'CLEAR ORPHAN DATABASES', 'CLONE', 'COMMIT', 'CREATE DATABASE', 'CREATE GROUP', 'CREATE INDEX', 'CREATE LINK', 'CREATE MILESTONE', 'CREATE PIPELINE', 'CREATE RESOURCE POOL', 'CREATE ROLE', 'CREATE USER', 'DEALLOCATE PREPARE', 'DESCRIBE', 'DETACH DATABASE', 'DETACH PIPELINE', 'DO', 'DROP DATABASE', 'DROP FUNCTION', 'DROP INDEX', 'DROP LINK', 'DROP PIPELINE', 'DROP PROCEDURE', 'DROP RESOURCE POOL', 'DROP ROLE', 'DROP USER', 'DROP VIEW', 'EXECUTE', 'EXPLAIN', 'FLUSH', 'FORCE', 'GRANT', 'HANDLER', 'HELP', 'KILL CONNECTION', 'KILLALL QUERIES', 'LOAD DATA', 'LOAD INDEX INTO CACHE', 'LOAD XML', 'LOCK INSTANCE FOR BACKUP', 'LOCK TABLES', 'MASTER_POS_WAIT', 'OPTIMIZE TABLE', 'PREPARE', 'PURGE BINARY LOGS', 'REBALANCE PARTITIONS', 'RELEASE SAVEPOINT', 'REMOVE AGGREGATOR', 'REMOVE LEAF', 'REPAIR TABLE', 'REPLACE', 'REPLICATE DATABASE', 'RESET', 'RESET MASTER', 'RESET PERSIST', 'RESET REPLICA', 'RESET SLAVE', 'RESTART', 'RESTORE DATABASE', 'RESTORE REDUNDANCY', 'REVOKE', 'ROLLBACK', 'ROLLBACK TO SAVEPOINT', 'SAVEPOINT', 'SET CHARACTER SET', 'SET DEFAULT ROLE', 'SET NAMES', 'SET PASSWORD', 'SET RESOURCE GROUP', 'SET ROLE', 'SET TRANSACTION', 'SHOW', 'SHOW CHARACTER SET', 'SHOW COLLATION', 'SHOW COLUMNS', 'SHOW CREATE DATABASE', 'SHOW CREATE FUNCTION', 'SHOW CREATE PIPELINE', 'SHOW CREATE PROCEDURE', 'SHOW CREATE TABLE', 'SHOW CREATE USER', 'SHOW CREATE VIEW', 'SHOW DATABASES', 'SHOW ENGINE', 'SHOW ENGINES', 'SHOW ERRORS', 'SHOW FUNCTION CODE', 'SHOW FUNCTION STATUS', 'SHOW GRANTS', 'SHOW INDEX', 'SHOW MASTER STATUS', 'SHOW OPEN TABLES', 'SHOW PLUGINS', 'SHOW PRIVILEGES', 'SHOW PROCEDURE CODE', 'SHOW PROCEDURE STATUS', 'SHOW PROCESSLIST', 'SHOW PROFILE', 'SHOW PROFILES', 'SHOW RELAYLOG EVENTS', 'SHOW REPLICA STATUS', 'SHOW REPLICAS', 'SHOW SLAVE', 'SHOW SLAVE HOSTS', 'SHOW STATUS', 'SHOW TABLE STATUS', 'SHOW TABLES', 'SHOW VARIABLES', 'SHOW WARNINGS', 'SHUTDOWN', 'SNAPSHOT DATABASE', 'SOURCE_POS_WAIT', 'START GROUP_REPLICATION', 'START PIPELINE', 'START REPLICA', 'START SLAVE', 'START TRANSACTION', 'STOP GROUP_REPLICATION', 'STOP PIPELINE', 'STOP REPLICA', 'STOP REPLICATING', 'STOP SLAVE', 'TEST PIPELINE', 'TRUNCATE TABLE', 'UNLOCK INSTANCE', 'UNLOCK TABLES', 'USE', 'XA', // flow control\n'ITERATE', 'LEAVE', 'LOOP', 'REPEAT', 'RETURN', 'WHILE']);\nconst reservedSetOperations = expandPhrases(['UNION [ALL | DISTINCT]', 'EXCEPT', 'INTERSECT', 'MINUS']);\nconst reservedJoins = expandPhrases(['JOIN', '{LEFT | RIGHT | FULL} [OUTER] JOIN', '{INNER | CROSS} JOIN', 'NATURAL {LEFT | RIGHT} [OUTER] JOIN', // non-standard joins\n'STRAIGHT_JOIN']);\nconst reservedPhrases = expandPhrases(['ON DELETE', 'ON UPDATE', 'CHARACTER SET', '{ROWS | RANGE} BETWEEN']);\nexport default class SingleStoreDbFormatter extends Formatter {\n  tokenizer() {\n    return new Tokenizer({\n      reservedClauses,\n      reservedSelect,\n      reservedSetOperations,\n      reservedJoins,\n      reservedPhrases,\n      reservedKeywords: keywords,\n      reservedFunctionNames: functions,\n      // TODO: support _binary\"some string\" prefix\n      stringTypes: ['\"\"-qq-bs', \"''-qq-bs\", {\n        quote: \"''-raw\",\n        prefixes: ['B', 'X'],\n        requirePrefix: true\n      }],\n      identTypes: ['``'],\n      identChars: {\n        first: '$',\n        rest: '$',\n        allowFirstCharNumber: true\n      },\n      variableTypes: [{\n        regex: '@@?[A-Za-z0-9_$]+'\n      }, {\n        quote: '``',\n        prefixes: ['@'],\n        requirePrefix: true\n      }],\n      lineCommentTypes: ['--', '#'],\n      operators: [':=', '&', '|', '^', '~', '<<', '>>', '<=>', '&&', '||'],\n      postProcess\n    });\n  }\n\n}\n\nfunction postProcess(tokens) {\n  return tokens.map((token, i) => {\n    const nextToken = tokens[i + 1] || EOF_TOKEN;\n\n    if (isToken.SET(token) && nextToken.text === '(') {\n      // This is SET datatype, not SET statement\n      return { ...token,\n        type: TokenType.RESERVED_FUNCTION_NAME\n      };\n    }\n\n    return token;\n  });\n}\n//# sourceMappingURL=singlestoredb.formatter.js.map","import { flatKeywordList } from '../../utils.js';\nexport const functions = flatKeywordList({\n  // https://docs.snowflake.com/en/sql-reference-functions.html\n  //\n  // https://docs.snowflake.com/en/sql-reference/functions-all.html\n  // 1. run in console on this page: $x('//tbody/tr/*[1]//a/span/text()').map(x => x.nodeValue)\n  // 2. split all lines that contain ',' or '/' into multiple lines\n  // 3. remove all '— Deprecated' parts from the strings\n  // 4. delete all strings that end with '<object_type>', they are already covered in the list\n  // 5. remove all strings that contain '[', they are operators not functions\n  // 6. fix all values that contain '*'\n  // 7. delete operatos ':', '::', '||'\n  //\n  // Steps 1-5 can be combined by the following script in the developer console:\n  // $x('//tbody/tr/*[1]//a/span/text()').map(x => x.nodeValue) // Step 1\n  //   .map(x => x.split(x.includes(',') ? ',' : '/')).flat().map(x => x.trim()) // Step 2\n  //   .map(x => x.replace('— Deprecated', '')) // Step 3\n  //   .filter(x => !x.endsWith('<object_type>')) // Step 4\n  //   .filter(x => !x.includes('[')) // Step 5\n  all: ['ABS', 'ACOS', 'ACOSH', 'ADD_MONTHS', 'ALL_USER_NAMES', 'ANY_VALUE', 'APPROX_COUNT_DISTINCT', 'APPROX_PERCENTILE', 'APPROX_PERCENTILE_ACCUMULATE', 'APPROX_PERCENTILE_COMBINE', 'APPROX_PERCENTILE_ESTIMATE', 'APPROX_TOP_K', 'APPROX_TOP_K_ACCUMULATE', 'APPROX_TOP_K_COMBINE', 'APPROX_TOP_K_ESTIMATE', 'APPROXIMATE_JACCARD_INDEX', 'APPROXIMATE_SIMILARITY', 'ARRAY_AGG', 'ARRAY_APPEND', 'ARRAY_CAT', 'ARRAY_COMPACT', 'ARRAY_CONSTRUCT', 'ARRAY_CONSTRUCT_COMPACT', 'ARRAY_CONTAINS', 'ARRAY_INSERT', 'ARRAY_INTERSECTION', 'ARRAY_POSITION', 'ARRAY_PREPEND', 'ARRAY_SIZE', 'ARRAY_SLICE', 'ARRAY_TO_STRING', 'ARRAY_UNION_AGG', 'ARRAY_UNIQUE_AGG', 'ARRAYS_OVERLAP', 'AS_ARRAY', 'AS_BINARY', 'AS_BOOLEAN', 'AS_CHAR', 'AS_VARCHAR', 'AS_DATE', 'AS_DECIMAL', 'AS_NUMBER', 'AS_DOUBLE', 'AS_REAL', 'AS_INTEGER', 'AS_OBJECT', 'AS_TIME', 'AS_TIMESTAMP_LTZ', 'AS_TIMESTAMP_NTZ', 'AS_TIMESTAMP_TZ', 'ASCII', 'ASIN', 'ASINH', 'ATAN', 'ATAN2', 'ATANH', 'AUTO_REFRESH_REGISTRATION_HISTORY', 'AUTOMATIC_CLUSTERING_HISTORY', 'AVG', 'BASE64_DECODE_BINARY', 'BASE64_DECODE_STRING', 'BASE64_ENCODE', 'BIT_LENGTH', 'BITAND', 'BITAND_AGG', 'BITMAP_BIT_POSITION', 'BITMAP_BUCKET_NUMBER', 'BITMAP_CONSTRUCT_AGG', 'BITMAP_COUNT', 'BITMAP_OR_AGG', 'BITNOT', 'BITOR', 'BITOR_AGG', 'BITSHIFTLEFT', 'BITSHIFTRIGHT', 'BITXOR', 'BITXOR_AGG', 'BOOLAND', 'BOOLAND_AGG', 'BOOLNOT', 'BOOLOR', 'BOOLOR_AGG', 'BOOLXOR', 'BOOLXOR_AGG', 'BUILD_SCOPED_FILE_URL', 'BUILD_STAGE_FILE_URL', 'CASE', 'CAST', 'CBRT', 'CEIL', 'CHARINDEX', 'CHECK_JSON', 'CHECK_XML', 'CHR', 'CHAR', 'COALESCE', 'COLLATE', 'COLLATION', 'COMPLETE_TASK_GRAPHS', 'COMPRESS', 'CONCAT', 'CONCAT_WS', 'CONDITIONAL_CHANGE_EVENT', 'CONDITIONAL_TRUE_EVENT', 'CONTAINS', 'CONVERT_TIMEZONE', 'COPY_HISTORY', 'CORR', 'COS', 'COSH', 'COT', 'COUNT', 'COUNT_IF', 'COVAR_POP', 'COVAR_SAMP', 'CUME_DIST', 'CURRENT_ACCOUNT', 'CURRENT_AVAILABLE_ROLES', 'CURRENT_CLIENT', 'CURRENT_DATABASE', 'CURRENT_DATE', 'CURRENT_IP_ADDRESS', 'CURRENT_REGION', 'CURRENT_ROLE', 'CURRENT_SCHEMA', 'CURRENT_SCHEMAS', 'CURRENT_SECONDARY_ROLES', 'CURRENT_SESSION', 'CURRENT_STATEMENT', 'CURRENT_TASK_GRAPHS', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_TRANSACTION', 'CURRENT_USER', 'CURRENT_VERSION', 'CURRENT_WAREHOUSE', 'DATA_TRANSFER_HISTORY', 'DATABASE_REFRESH_HISTORY', 'DATABASE_REFRESH_PROGRESS', 'DATABASE_REFRESH_PROGRESS_BY_JOB', 'DATABASE_STORAGE_USAGE_HISTORY', 'DATE_FROM_PARTS', 'DATE_PART', 'DATE_TRUNC', 'DATEADD', 'DATEDIFF', 'DAYNAME', 'DECODE', 'DECOMPRESS_BINARY', 'DECOMPRESS_STRING', 'DECRYPT', 'DECRYPT_RAW', 'DEGREES', 'DENSE_RANK', 'DIV0', 'EDITDISTANCE', 'ENCRYPT', 'ENCRYPT_RAW', 'ENDSWITH', 'EQUAL_NULL', 'EXP', 'EXPLAIN_JSON', 'EXTERNAL_FUNCTIONS_HISTORY', 'EXTERNAL_TABLE_FILES', 'EXTERNAL_TABLE_FILE_REGISTRATION_HISTORY', 'EXTRACT', 'EXTRACT_SEMANTIC_CATEGORIES', 'FACTORIAL', 'FIRST_VALUE', 'FLATTEN', 'FLOOR', 'GENERATE_COLUMN_DESCRIPTION', 'GENERATOR', 'GET', 'GET_ABSOLUTE_PATH', 'GET_DDL', 'GET_IGNORE_CASE', 'GET_OBJECT_REFERENCES', 'GET_PATH', 'GET_PRESIGNED_URL', 'GET_RELATIVE_PATH', 'GET_STAGE_LOCATION', 'GETBIT', 'GREATEST', 'GROUPING', 'GROUPING_ID', 'HASH', 'HASH_AGG', 'HAVERSINE', 'HEX_DECODE_BINARY', 'HEX_DECODE_STRING', 'HEX_ENCODE', 'HLL', 'HLL_ACCUMULATE', 'HLL_COMBINE', 'HLL_ESTIMATE', 'HLL_EXPORT', 'HLL_IMPORT', 'HOUR', 'MINUTE', 'SECOND', 'IFF', 'IFNULL', 'ILIKE', 'ILIKE ANY', 'INFER_SCHEMA', 'INITCAP', 'INSERT', 'INVOKER_ROLE', 'INVOKER_SHARE', 'IS_ARRAY', 'IS_BINARY', 'IS_BOOLEAN', 'IS_CHAR', 'IS_VARCHAR', 'IS_DATE', 'IS_DATE_VALUE', 'IS_DECIMAL', 'IS_DOUBLE', 'IS_REAL', 'IS_GRANTED_TO_INVOKER_ROLE', 'IS_INTEGER', 'IS_NULL_VALUE', 'IS_OBJECT', 'IS_ROLE_IN_SESSION', 'IS_TIME', 'IS_TIMESTAMP_LTZ', 'IS_TIMESTAMP_NTZ', 'IS_TIMESTAMP_TZ', 'JAROWINKLER_SIMILARITY', 'JSON_EXTRACT_PATH_TEXT', 'KURTOSIS', 'LAG', 'LAST_DAY', 'LAST_QUERY_ID', 'LAST_TRANSACTION', 'LAST_VALUE', 'LEAD', 'LEAST', 'LEFT', 'LENGTH', 'LEN', 'LIKE', 'LIKE ALL', 'LIKE ANY', 'LISTAGG', 'LN', 'LOCALTIME', 'LOCALTIMESTAMP', 'LOG', 'LOGIN_HISTORY', 'LOGIN_HISTORY_BY_USER', 'LOWER', 'LPAD', 'LTRIM', 'MATERIALIZED_VIEW_REFRESH_HISTORY', 'MD5', 'MD5_HEX', 'MD5_BINARY', 'MD5_NUMBER — Obsoleted', 'MD5_NUMBER_LOWER64', 'MD5_NUMBER_UPPER64', 'MEDIAN', 'MIN', 'MAX', 'MINHASH', 'MINHASH_COMBINE', 'MOD', 'MODE', 'MONTHNAME', 'MONTHS_BETWEEN', 'NEXT_DAY', 'NORMAL', 'NTH_VALUE', 'NTILE', 'NULLIF', 'NULLIFZERO', 'NVL', 'NVL2', 'OBJECT_AGG', 'OBJECT_CONSTRUCT', 'OBJECT_CONSTRUCT_KEEP_NULL', 'OBJECT_DELETE', 'OBJECT_INSERT', 'OBJECT_KEYS', 'OBJECT_PICK', 'OCTET_LENGTH', 'PARSE_IP', 'PARSE_JSON', 'PARSE_URL', 'PARSE_XML', 'PERCENT_RANK', 'PERCENTILE_CONT', 'PERCENTILE_DISC', 'PI', 'PIPE_USAGE_HISTORY', 'POLICY_CONTEXT', 'POLICY_REFERENCES', 'POSITION', 'POW', 'POWER', 'PREVIOUS_DAY', 'QUERY_ACCELERATION_HISTORY', 'QUERY_HISTORY', 'QUERY_HISTORY_BY_SESSION', 'QUERY_HISTORY_BY_USER', 'QUERY_HISTORY_BY_WAREHOUSE', 'RADIANS', 'RANDOM', 'RANDSTR', 'RANK', 'RATIO_TO_REPORT', 'REGEXP', 'REGEXP_COUNT', 'REGEXP_INSTR', 'REGEXP_LIKE', 'REGEXP_REPLACE', 'REGEXP_SUBSTR', 'REGEXP_SUBSTR_ALL', 'REGR_AVGX', 'REGR_AVGY', 'REGR_COUNT', 'REGR_INTERCEPT', 'REGR_R2', 'REGR_SLOPE', 'REGR_SXX', 'REGR_SXY', 'REGR_SYY', 'REGR_VALX', 'REGR_VALY', 'REPEAT', 'REPLACE', 'REPLICATION_GROUP_REFRESH_HISTORY', 'REPLICATION_GROUP_REFRESH_PROGRESS', 'REPLICATION_GROUP_REFRESH_PROGRESS_BY_JOB', 'REPLICATION_GROUP_USAGE_HISTORY', 'REPLICATION_USAGE_HISTORY', 'REST_EVENT_HISTORY', 'RESULT_SCAN', 'REVERSE', 'RIGHT', 'RLIKE', 'ROUND', 'ROW_NUMBER', 'RPAD', 'RTRIM', 'RTRIMMED_LENGTH', 'SEARCH_OPTIMIZATION_HISTORY', 'SEQ1', 'SEQ2', 'SEQ4', 'SEQ8', 'SERVERLESS_TASK_HISTORY', 'SHA1', 'SHA1_HEX', 'SHA1_BINARY', 'SHA2', 'SHA2_HEX', 'SHA2_BINARY', 'SIGN', 'SIN', 'SINH', 'SKEW', 'SOUNDEX', 'SPACE', 'SPLIT', 'SPLIT_PART', 'SPLIT_TO_TABLE', 'SQRT', 'SQUARE', 'ST_AREA', 'ST_ASEWKB', 'ST_ASEWKT', 'ST_ASGEOJSON', 'ST_ASWKB', 'ST_ASBINARY', 'ST_ASWKT', 'ST_ASTEXT', 'ST_AZIMUTH', 'ST_CENTROID', 'ST_COLLECT', 'ST_CONTAINS', 'ST_COVEREDBY', 'ST_COVERS', 'ST_DIFFERENCE', 'ST_DIMENSION', 'ST_DISJOINT', 'ST_DISTANCE', 'ST_DWITHIN', 'ST_ENDPOINT', 'ST_ENVELOPE', 'ST_GEOGFROMGEOHASH', 'ST_GEOGPOINTFROMGEOHASH', 'ST_GEOGRAPHYFROMWKB', 'ST_GEOGRAPHYFROMWKT', 'ST_GEOHASH', 'ST_GEOMETRYFROMWKB', 'ST_GEOMETRYFROMWKT', 'ST_HAUSDORFFDISTANCE', 'ST_INTERSECTION', 'ST_INTERSECTS', 'ST_LENGTH', 'ST_MAKEGEOMPOINT', 'ST_GEOM_POINT', 'ST_MAKELINE', 'ST_MAKEPOINT', 'ST_POINT', 'ST_MAKEPOLYGON', 'ST_POLYGON', 'ST_NPOINTS', 'ST_NUMPOINTS', 'ST_PERIMETER', 'ST_POINTN', 'ST_SETSRID', 'ST_SIMPLIFY', 'ST_SRID', 'ST_STARTPOINT', 'ST_SYMDIFFERENCE', 'ST_UNION', 'ST_WITHIN', 'ST_X', 'ST_XMAX', 'ST_XMIN', 'ST_Y', 'ST_YMAX', 'ST_YMIN', 'STAGE_DIRECTORY_FILE_REGISTRATION_HISTORY', 'STAGE_STORAGE_USAGE_HISTORY', 'STARTSWITH', 'STDDEV', 'STDDEV_POP', 'STDDEV_SAMP', 'STRIP_NULL_VALUE', 'STRTOK', 'STRTOK_SPLIT_TO_TABLE', 'STRTOK_TO_ARRAY', 'SUBSTR', 'SUBSTRING', 'SUM', 'SYSDATE', 'SYSTEM$ABORT_SESSION', 'SYSTEM$ABORT_TRANSACTION', 'SYSTEM$AUTHORIZE_PRIVATELINK', 'SYSTEM$AUTHORIZE_STAGE_PRIVATELINK_ACCESS', 'SYSTEM$BEHAVIOR_CHANGE_BUNDLE_STATUS', 'SYSTEM$CANCEL_ALL_QUERIES', 'SYSTEM$CANCEL_QUERY', 'SYSTEM$CLUSTERING_DEPTH', 'SYSTEM$CLUSTERING_INFORMATION', 'SYSTEM$CLUSTERING_RATIO ', 'SYSTEM$CURRENT_USER_TASK_NAME', 'SYSTEM$DATABASE_REFRESH_HISTORY ', 'SYSTEM$DATABASE_REFRESH_PROGRESS', 'SYSTEM$DATABASE_REFRESH_PROGRESS_BY_JOB ', 'SYSTEM$DISABLE_BEHAVIOR_CHANGE_BUNDLE', 'SYSTEM$DISABLE_DATABASE_REPLICATION', 'SYSTEM$ENABLE_BEHAVIOR_CHANGE_BUNDLE', 'SYSTEM$ESTIMATE_QUERY_ACCELERATION', 'SYSTEM$ESTIMATE_SEARCH_OPTIMIZATION_COSTS', 'SYSTEM$EXPLAIN_JSON_TO_TEXT', 'SYSTEM$EXPLAIN_PLAN_JSON', 'SYSTEM$EXTERNAL_TABLE_PIPE_STATUS', 'SYSTEM$GENERATE_SAML_CSR', 'SYSTEM$GENERATE_SCIM_ACCESS_TOKEN', 'SYSTEM$GET_AWS_SNS_IAM_POLICY', 'SYSTEM$GET_PREDECESSOR_RETURN_VALUE', 'SYSTEM$GET_PRIVATELINK', 'SYSTEM$GET_PRIVATELINK_AUTHORIZED_ENDPOINTS', 'SYSTEM$GET_PRIVATELINK_CONFIG', 'SYSTEM$GET_SNOWFLAKE_PLATFORM_INFO', 'SYSTEM$GET_TAG', 'SYSTEM$GET_TAG_ALLOWED_VALUES', 'SYSTEM$GET_TAG_ON_CURRENT_COLUMN', 'SYSTEM$GET_TAG_ON_CURRENT_TABLE', 'SYSTEM$GLOBAL_ACCOUNT_SET_PARAMETER', 'SYSTEM$LAST_CHANGE_COMMIT_TIME', 'SYSTEM$LINK_ACCOUNT_OBJECTS_BY_NAME', 'SYSTEM$MIGRATE_SAML_IDP_REGISTRATION', 'SYSTEM$PIPE_FORCE_RESUME', 'SYSTEM$PIPE_STATUS', 'SYSTEM$REVOKE_PRIVATELINK', 'SYSTEM$REVOKE_STAGE_PRIVATELINK_ACCESS', 'SYSTEM$SET_RETURN_VALUE', 'SYSTEM$SHOW_OAUTH_CLIENT_SECRETS', 'SYSTEM$STREAM_GET_TABLE_TIMESTAMP', 'SYSTEM$STREAM_HAS_DATA', 'SYSTEM$TASK_DEPENDENTS_ENABLE', 'SYSTEM$TYPEOF', 'SYSTEM$USER_TASK_CANCEL_ONGOING_EXECUTIONS', 'SYSTEM$VERIFY_EXTERNAL_OAUTH_TOKEN', 'SYSTEM$WAIT', 'SYSTEM$WHITELIST', 'SYSTEM$WHITELIST_PRIVATELINK', 'TAG_REFERENCES', 'TAG_REFERENCES_ALL_COLUMNS', 'TAG_REFERENCES_WITH_LINEAGE', 'TAN', 'TANH', 'TASK_DEPENDENTS', 'TASK_HISTORY', 'TIME_FROM_PARTS', 'TIME_SLICE', 'TIMEADD', 'TIMEDIFF', 'TIMESTAMP_FROM_PARTS', 'TIMESTAMPADD', 'TIMESTAMPDIFF', 'TO_ARRAY', 'TO_BINARY', 'TO_BOOLEAN', 'TO_CHAR', 'TO_VARCHAR', 'TO_DATE', 'DATE', 'TO_DECIMAL', 'TO_NUMBER', 'TO_NUMERIC', 'TO_DOUBLE', 'TO_GEOGRAPHY', 'TO_GEOMETRY', 'TO_JSON', 'TO_OBJECT', 'TO_TIME', 'TIME', 'TO_TIMESTAMP', 'TO_TIMESTAMP_LTZ', 'TO_TIMESTAMP_NTZ', 'TO_TIMESTAMP_TZ', 'TO_VARIANT', 'TO_XML', 'TRANSLATE', 'TRIM', 'TRUNCATE', 'TRUNC', 'TRUNC', 'TRY_BASE64_DECODE_BINARY', 'TRY_BASE64_DECODE_STRING', 'TRY_CAST', 'TRY_HEX_DECODE_BINARY', 'TRY_HEX_DECODE_STRING', 'TRY_PARSE_JSON', 'TRY_TO_BINARY', 'TRY_TO_BOOLEAN', 'TRY_TO_DATE', 'TRY_TO_DECIMAL', 'TRY_TO_NUMBER', 'TRY_TO_NUMERIC', 'TRY_TO_DOUBLE', 'TRY_TO_GEOGRAPHY', 'TRY_TO_GEOMETRY', 'TRY_TO_TIME', 'TRY_TO_TIMESTAMP', 'TRY_TO_TIMESTAMP_LTZ', 'TRY_TO_TIMESTAMP_NTZ', 'TRY_TO_TIMESTAMP_TZ', 'TYPEOF', 'UNICODE', 'UNIFORM', 'UPPER', 'UUID_STRING', 'VALIDATE', 'VALIDATE_PIPE_LOAD', 'VAR_POP', 'VAR_SAMP', 'VARIANCE', 'VARIANCE_SAMP', 'VARIANCE_POP', 'WAREHOUSE_LOAD_HISTORY', 'WAREHOUSE_METERING_HISTORY', 'WIDTH_BUCKET', 'XMLGET', 'YEAR', 'YEAROFWEEK', 'YEAROFWEEKISO', 'DAY', 'DAYOFMONTH', 'DAYOFWEEK', 'DAYOFWEEKISO', 'DAYOFYEAR', 'WEEK', 'WEEK', 'WEEKOFYEAR', 'WEEKISO', 'MONTH', 'QUARTER', 'ZEROIFNULL', 'ZIPF']\n});\n//# sourceMappingURL=snowflake.functions.js.map","import { flatKeywordList } from '../../utils.js';\nexport const keywords = flatKeywordList({\n  // https://docs.snowflake.com/en/sql-reference/reserved-keywords.html\n  //\n  // run in console on this page: $x('//tbody/tr/*[1]/p/text()').map(x => x.nodeValue)\n  all: ['ACCOUNT', 'ALL', 'ALTER', 'AND', 'ANY', 'AS', 'BETWEEN', 'BY', 'CASE', 'CAST', 'CHECK', 'COLUMN', 'CONNECT', 'CONNECTION', 'CONSTRAINT', 'CREATE', 'CROSS', 'CURRENT', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'DATABASE', 'DELETE', 'DISTINCT', 'DROP', 'ELSE', 'EXISTS', 'FALSE', 'FOLLOWING', 'FOR', 'FROM', 'FULL', 'GRANT', 'GROUP', 'GSCLUSTER', 'HAVING', 'ILIKE', 'IN', 'INCREMENT', 'INNER', 'INSERT', 'INTERSECT', 'INTO', 'IS', 'ISSUE', 'JOIN', 'LATERAL', 'LEFT', 'LIKE', 'LOCALTIME', 'LOCALTIMESTAMP', 'MINUS', 'NATURAL', 'NOT', 'NULL', 'OF', 'ON', 'OR', 'ORDER', 'ORGANIZATION', 'QUALIFY', 'REGEXP', 'REVOKE', 'RIGHT', 'RLIKE', 'ROW', 'ROWS', 'SAMPLE', 'SCHEMA', 'SELECT', 'SET', 'SOME', 'START', 'TABLE', 'TABLESAMPLE', 'THEN', 'TO', 'TRIGGER', 'TRUE', 'TRY_CAST', 'UNION', 'UNIQUE', 'UPDATE', 'USING', 'VALUES', 'VIEW', 'WHEN', 'WHENEVER', 'WHERE', 'WITH']\n});\n//# sourceMappingURL=snowflake.keywords.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport Formatter from '../../formatter/Formatter.js';\nimport Tokenizer from '../../lexer/Tokenizer.js';\nimport { functions } from './snowflake.functions.js';\nimport { keywords } from './snowflake.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']); // https://docs.snowflake.com/en/sql-reference/sql-all.html\n//\n// 1. run in console on this page: $x('//tbody/tr/*[1]//a/span/text()').map(x => x.nodeValue)\n// 2. delete all lines that contain a sting like '(.*)', they are already covered in the list\n// 3. delete all lines that contain a sting like '<.*>', they are already covered in the list\n// 4. delete all lines that contain '…', they are part of a regex statement that can't be covered here\n// 5. Manually add 'COPY INTO'\n//\n// Steps 1-4 can be combined by the following script in the developer console:\n// $x('//tbody/tr/*[1]//a/span/text()').map(x => x.nodeValue) // Step 1\n//   filter(x => !x.match(/\\(.*\\)/) && !x.match(/…/) && !x.match(/<.*>/)) // Step 2-4\n\nconst reservedClauses = expandPhrases([// queries\n'WITH [RECURSIVE]', 'FROM', 'WHERE', 'GROUP BY', 'HAVING', 'PARTITION BY', 'ORDER BY', 'LIMIT', 'OFFSET', 'FETCH [FIRST | NEXT]', // Data manipulation\n// - insert:\n'INSERT [OVERWRITE] [ALL INTO | INTO | ALL | FIRST]', '{THEN | ELSE} INTO', 'VALUES', // - update:\n'UPDATE', 'SET', // - delete:\n'DELETE FROM', // - truncate:\n'TRUNCATE [TABLE] [IF EXISTS]', // Data definition\n// - view\n'CREATE [OR REPLACE] [SECURE] [RECURSIVE] VIEW [IF NOT EXISTS]', // - create/drop/merge table\n'CREATE [OR REPLACE] [VOLATILE] TABLE [IF NOT EXISTS]', 'CREATE [OR REPLACE] [LOCAL | GLOBAL] {TEMP|TEMPORARY} TABLE [IF NOT EXISTS]', 'CLUSTER BY', '[WITH] {MASKING POLICY | TAG | ROW ACCESS POLICY}', 'COPY GRANTS', 'USING TEMPLATE', 'MERGE INTO', 'WHEN MATCHED [AND]', 'THEN {UPDATE SET | DELETE}', 'WHEN NOT MATCHED THEN INSERT', 'DROP TABLE [IF EXISTS]', // - alter table:\n'ALTER TABLE [IF EXISTS]', 'RENAME TO', 'SWAP WITH', '[SUSPEND | RESUME] RECLUSTER', 'DROP CLUSTERING KEY', 'ADD [COLUMN]', 'RENAME COLUMN', '{ALTER | MODIFY} [COLUMN]', 'DROP [COLUMN]', '{ADD | ALTER | MODIFY | DROP} [CONSTRAINT]', 'RENAME CONSTRAINT', '{ADD | DROP} SEARCH OPTIMIZATION', '{SET | UNSET} [TAG]', '{ADD | DROP} ROW ACCESS POLICY', 'DROP ALL ROW ACCESS POLICIES', '{SET | DROP} DEFAULT', // for alter column\n'{SET | DROP} NOT NULL', // for alter column\n'[SET DATA] TYPE', // for alter column\n'[UNSET] COMMENT', // for alter column\n'{SET | UNSET} MASKING POLICY', // for alter column\n// other\n// https://docs.snowflake.com/en/sql-reference/sql-all.html\n//\n// 1. run in console on this page: $x('//tbody/tr/*[1]//a/span/text()').map(x => x.nodeValue)\n// 2. delete all lines that contain a sting like '(.*)', they are already covered in the list\n// 3. delete all lines that contain a sting like '<.*>', they are already covered in the list\n// 4. delete all lines that contain '…', they are part of a regex statement that can't be covered here\n// 5. Manually add 'COPY INTO'\n// 6. Remove all lines that are already in the above definitions:\n//   - ALTER TABLE\n//   - COMMENT\n//   - CREATE TABLE\n//   - CREATE VIEW\n//   - DROP TABLE\n//   - TRUNCATE TABLE\n//   - SELECT\n//   - UPDATE\n//   - SET\n//\n// Steps 1-4 can be combined by the following script in the developer console:\n// $x('//tbody/tr/*[1]//a/span/text()').map(x => x.nodeValue) // Step 1\n//   filter(x => !x.match(/\\(.*\\)/) && !x.match(/…/) && !x.match(/<.*>/)) // Step 2-4\n'ALTER ACCOUNT', 'ALTER API INTEGRATION', 'ALTER CONNECTION', 'ALTER DATABASE', 'ALTER EXTERNAL TABLE', 'ALTER FAILOVER GROUP', 'ALTER FILE FORMAT', 'ALTER FUNCTION', 'ALTER INTEGRATION', 'ALTER MASKING POLICY', 'ALTER MATERIALIZED VIEW', 'ALTER NETWORK POLICY', 'ALTER NOTIFICATION INTEGRATION', 'ALTER PIPE', 'ALTER PROCEDURE', 'ALTER REPLICATION GROUP', 'ALTER RESOURCE MONITOR', 'ALTER ROLE', 'ALTER ROW ACCESS POLICY', 'ALTER SCHEMA', 'ALTER SECURITY INTEGRATION', 'ALTER SEQUENCE', 'ALTER SESSION', 'ALTER SESSION POLICY', 'ALTER SHARE', 'ALTER STAGE', 'ALTER STORAGE INTEGRATION', 'ALTER STREAM', 'ALTER TAG', 'ALTER TASK', 'ALTER USER', 'ALTER VIEW', 'ALTER WAREHOUSE', 'BEGIN', 'CALL', 'COMMIT', 'COPY INTO', 'CREATE ACCOUNT', 'CREATE API INTEGRATION', 'CREATE CONNECTION', 'CREATE DATABASE', 'CREATE EXTERNAL FUNCTION', 'CREATE EXTERNAL TABLE', 'CREATE FAILOVER GROUP', 'CREATE FILE FORMAT', 'CREATE FUNCTION', 'CREATE INTEGRATION', 'CREATE MANAGED ACCOUNT', 'CREATE MASKING POLICY', 'CREATE MATERIALIZED VIEW', 'CREATE NETWORK POLICY', 'CREATE NOTIFICATION INTEGRATION', 'CREATE PIPE', 'CREATE PROCEDURE', 'CREATE REPLICATION GROUP', 'CREATE RESOURCE MONITOR', 'CREATE ROLE', 'CREATE ROW ACCESS POLICY', 'CREATE SCHEMA', 'CREATE SECURITY INTEGRATION', 'CREATE SEQUENCE', 'CREATE SESSION POLICY', 'CREATE SHARE', 'CREATE STAGE', 'CREATE STORAGE INTEGRATION', 'CREATE STREAM', 'CREATE TAG', 'CREATE TASK', 'CREATE USER', 'CREATE WAREHOUSE', 'DELETE', 'DESCRIBE DATABASE', 'DESCRIBE EXTERNAL TABLE', 'DESCRIBE FILE FORMAT', 'DESCRIBE FUNCTION', 'DESCRIBE INTEGRATION', 'DESCRIBE MASKING POLICY', 'DESCRIBE MATERIALIZED VIEW', 'DESCRIBE NETWORK POLICY', 'DESCRIBE PIPE', 'DESCRIBE PROCEDURE', 'DESCRIBE RESULT', 'DESCRIBE ROW ACCESS POLICY', 'DESCRIBE SCHEMA', 'DESCRIBE SEQUENCE', 'DESCRIBE SESSION POLICY', 'DESCRIBE SHARE', 'DESCRIBE STAGE', 'DESCRIBE STREAM', 'DESCRIBE TABLE', 'DESCRIBE TASK', 'DESCRIBE TRANSACTION', 'DESCRIBE USER', 'DESCRIBE VIEW', 'DESCRIBE WAREHOUSE', 'DROP CONNECTION', 'DROP DATABASE', 'DROP EXTERNAL TABLE', 'DROP FAILOVER GROUP', 'DROP FILE FORMAT', 'DROP FUNCTION', 'DROP INTEGRATION', 'DROP MANAGED ACCOUNT', 'DROP MASKING POLICY', 'DROP MATERIALIZED VIEW', 'DROP NETWORK POLICY', 'DROP PIPE', 'DROP PROCEDURE', 'DROP REPLICATION GROUP', 'DROP RESOURCE MONITOR', 'DROP ROLE', 'DROP ROW ACCESS POLICY', 'DROP SCHEMA', 'DROP SEQUENCE', 'DROP SESSION POLICY', 'DROP SHARE', 'DROP STAGE', 'DROP STREAM', 'DROP TAG', 'DROP TASK', 'DROP USER', 'DROP VIEW', 'DROP WAREHOUSE', 'EXECUTE IMMEDIATE', 'EXECUTE TASK', 'EXPLAIN', 'GET', 'GRANT OWNERSHIP', 'GRANT ROLE', 'INSERT', 'LIST', 'MERGE', 'PUT', 'REMOVE', 'REVOKE ROLE', 'ROLLBACK', 'SHOW COLUMNS', 'SHOW CONNECTIONS', 'SHOW DATABASES', 'SHOW DATABASES IN FAILOVER GROUP', 'SHOW DATABASES IN REPLICATION GROUP', 'SHOW DELEGATED AUTHORIZATIONS', 'SHOW EXTERNAL FUNCTIONS', 'SHOW EXTERNAL TABLES', 'SHOW FAILOVER GROUPS', 'SHOW FILE FORMATS', 'SHOW FUNCTIONS', 'SHOW GLOBAL ACCOUNTS', 'SHOW GRANTS', 'SHOW INTEGRATIONS', 'SHOW LOCKS', 'SHOW MANAGED ACCOUNTS', 'SHOW MASKING POLICIES', 'SHOW MATERIALIZED VIEWS', 'SHOW NETWORK POLICIES', 'SHOW OBJECTS', 'SHOW ORGANIZATION ACCOUNTS', 'SHOW PARAMETERS', 'SHOW PIPES', 'SHOW PRIMARY KEYS', 'SHOW PROCEDURES', 'SHOW REGIONS', 'SHOW REPLICATION ACCOUNTS', 'SHOW REPLICATION DATABASES', 'SHOW REPLICATION GROUPS', 'SHOW RESOURCE MONITORS', 'SHOW ROLES', 'SHOW ROW ACCESS POLICIES', 'SHOW SCHEMAS', 'SHOW SEQUENCES', 'SHOW SESSION POLICIES', 'SHOW SHARES', 'SHOW SHARES IN FAILOVER GROUP', 'SHOW SHARES IN REPLICATION GROUP', 'SHOW STAGES', 'SHOW STREAMS', 'SHOW TABLES', 'SHOW TAGS', 'SHOW TASKS', 'SHOW TRANSACTIONS', 'SHOW USER FUNCTIONS', 'SHOW USERS', 'SHOW VARIABLES', 'SHOW VIEWS', 'SHOW WAREHOUSES', 'TRUNCATE MATERIALIZED VIEW', 'UNDROP DATABASE', 'UNDROP SCHEMA', 'UNDROP TABLE', 'UNDROP TAG', 'UNSET', 'USE DATABASE', 'USE ROLE', 'USE SCHEMA', 'USE SECONDARY ROLES', 'USE WAREHOUSE']);\nconst reservedSetOperations = expandPhrases(['UNION [ALL]', 'MINUS', 'EXCEPT', 'INTERSECT']);\nconst reservedJoins = expandPhrases(['[INNER] JOIN', '[NATURAL] {LEFT | RIGHT | FULL} [OUTER] JOIN', '{CROSS | NATURAL} JOIN']);\nconst reservedPhrases = expandPhrases(['{ROWS | RANGE} BETWEEN', 'ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]']);\nexport default class SnowflakeFormatter extends Formatter {\n  tokenizer() {\n    return new Tokenizer({\n      reservedClauses,\n      reservedSelect,\n      reservedSetOperations,\n      reservedJoins,\n      reservedPhrases,\n      reservedKeywords: keywords,\n      reservedFunctionNames: functions,\n      stringTypes: ['$$', `''-qq-bs`],\n      identTypes: ['\"\"-qq'],\n      variableTypes: [// for accessing columns at certain positons in the table\n      {\n        regex: '[$][1-9]\\\\d*'\n      }, // identifier style syntax\n      {\n        regex: '[$][_a-zA-Z][_a-zA-Z0-9$]*'\n      }],\n      extraParens: ['[]'],\n      identChars: {\n        rest: '$'\n      },\n      lineCommentTypes: ['--', '//'],\n      operators: [// Modulo\n      '%', // Type cast\n      '::', // String concat\n      '||', // Get Path\n      ':', // Generators: https://docs.snowflake.com/en/sql-reference/functions/generator.html#generator\n      '=>']\n    });\n  }\n\n  formatOptions() {\n    return {\n      alwaysDenseOperators: [':', '::']\n    };\n  }\n\n}\n//# sourceMappingURL=snowflake.formatter.js.map","import BigQueryFormatter from './languages/bigquery/bigquery.formatter.js';\nimport Db2Formatter from './languages/db2/db2.formatter.js';\nimport HiveFormatter from './languages/hive/hive.formatter.js';\nimport MariaDbFormatter from './languages/mariadb/mariadb.formatter.js';\nimport MySqlFormatter from './languages/mysql/mysql.formatter.js';\nimport N1qlFormatter from './languages/n1ql/n1ql.formatter.js';\nimport PlSqlFormatter from './languages/plsql/plsql.formatter.js';\nimport PostgreSqlFormatter from './languages/postgresql/postgresql.formatter.js';\nimport RedshiftFormatter from './languages/redshift/redshift.formatter.js';\nimport SparkFormatter from './languages/spark/spark.formatter.js';\nimport SqliteFormatter from './languages/sqlite/sqlite.formatter.js';\nimport SqlFormatter from './languages/sql/sql.formatter.js';\nimport TrinoFormatter from './languages/trino/trino.formatter.js';\nimport TransactSqlFormatter from './languages/transactsql/transactsql.formatter.js';\nimport SingleStoreDbFormatter from './languages/singlestoredb/singlestoredb.formatter.js';\nimport SnowflakeFormatter from './languages/snowflake/snowflake.formatter.js';\nexport const formatters = {\n  bigquery: BigQueryFormatter,\n  db2: Db2Formatter,\n  hive: HiveFormatter,\n  mariadb: MariaDbFormatter,\n  mysql: MySqlFormatter,\n  n1ql: N1qlFormatter,\n  plsql: PlSqlFormatter,\n  postgresql: PostgreSqlFormatter,\n  redshift: RedshiftFormatter,\n  singlestoredb: SingleStoreDbFormatter,\n  snowflake: SnowflakeFormatter,\n  spark: SparkFormatter,\n  sql: SqlFormatter,\n  sqlite: SqliteFormatter,\n  transactsql: TransactSqlFormatter,\n  trino: TrinoFormatter,\n  tsql: TransactSqlFormatter // alias for transactsql\n\n};\nexport const supportedDialects = Object.keys(formatters);\nconst defaultOptions = {\n  language: 'sql',\n  tabWidth: 2,\n  useTabs: false,\n  keywordCase: 'preserve',\n  indentStyle: 'standard',\n  logicalOperatorNewline: 'before',\n  tabulateAlias: false,\n  commaPosition: 'after',\n  expressionWidth: 50,\n  linesBetweenQueries: 1,\n  denseOperators: false,\n  newlineBeforeSemicolon: false\n};\n/**\n * Format whitespace in a query to make it easier to read.\n *\n * @param {string} query - input SQL query string\n * @param {FormatOptions} cfg Configuration options (see docs in README)\n * @return {string} formatted query\n */\n\nexport const format = (query, cfg = {}) => {\n  if (typeof query !== 'string') {\n    throw new Error('Invalid query argument. Expected string, instead got ' + typeof query);\n  }\n\n  const options = validateConfig({ ...defaultOptions,\n    ...cfg\n  });\n  const FormatterCls = typeof options.language === 'string' ? formatters[options.language] : options.language;\n  return new FormatterCls(options).format(query);\n};\nexport class ConfigError extends Error {}\n\nfunction validateConfig(cfg) {\n  if (typeof cfg.language === 'string' && !supportedDialects.includes(cfg.language)) {\n    throw new ConfigError(`Unsupported SQL dialect: ${cfg.language}`);\n  }\n\n  if ('multilineLists' in cfg) {\n    throw new ConfigError('multilineLists config is no more supported.');\n  }\n\n  if ('newlineBeforeOpenParen' in cfg) {\n    throw new ConfigError('newlineBeforeOpenParen config is no more supported.');\n  }\n\n  if ('newlineBeforeCloseParen' in cfg) {\n    throw new ConfigError('newlineBeforeCloseParen config is no more supported.');\n  }\n\n  if ('aliasAs' in cfg) {\n    throw new ConfigError('aliasAs config is no more supported.');\n  }\n\n  if (cfg.expressionWidth <= 0) {\n    throw new ConfigError(`expressionWidth config must be positive number. Received ${cfg.expressionWidth} instead.`);\n  }\n\n  if (cfg.commaPosition === 'before' && cfg.useTabs) {\n    throw new ConfigError('commaPosition: before does not work when tabs are used for indentation.');\n  }\n\n  if (cfg.params && !validateParams(cfg.params)) {\n    // eslint-disable-next-line no-console\n    console.warn('WARNING: All \"params\" option values should be strings.');\n  }\n\n  return cfg;\n}\n\nfunction validateParams(params) {\n  const paramValues = params instanceof Array ? params : Object.values(params);\n  return paramValues.every(p => typeof p === 'string');\n}\n//# sourceMappingURL=sqlFormatter.js.map","<script lang=\"ts\">\n    import type { QueryExecResult } from \"sql.js\";\n\n    export let result: QueryExecResult;\n</script>\n\n<div class=\"table-container\">\n    <table class=\"table is-fullwidth is-striped is-hoverable\">\n        <thead>\n            <tr>\n                {#each result.columns as column}\n                    <th class=\"th\">{column}</th>\n                {/each}\n            </tr>\n        </thead>\n        <tbody>\n            {#each result.values as row, rowIndex}\n                <tr>\n                    {#each row as field, fieldIndex}\n                        <td\n                            title={`Row ${rowIndex + 1}, ${result.columns[fieldIndex]}`}\n                        >\n                            {field}\n                        </td>\n                    {/each}\n                </tr>\n            {/each}\n        </tbody>\n    </table>\n</div>\n\n<style>\n    tr {\n        width: 100%;\n    }\n\n    .table-container {\n        width: 100%;\n        max-height: 300px;\n        overflow: auto;\n    }\n\n    .th,\n    td {\n        color: var(--color, black);\n        background-color: var(--background-color, rgb(211, 211, 211));\n    }\n</style>\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nexport { _arrayLikeToArray as arrayLikeToArray, _arrayWithHoles as arrayWithHoles, _defineProperty as defineProperty, _iterableToArrayLimit as iterableToArrayLimit, _nonIterableRest as nonIterableRest, _objectSpread2 as objectSpread2, _objectWithoutProperties as objectWithoutProperties, _objectWithoutPropertiesLoose as objectWithoutPropertiesLoose, _slicedToArray as slicedToArray, _unsupportedIterableToArray as unsupportedIterableToArray };\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction compose() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return function (x) {\n    return fns.reduceRight(function (y, f) {\n      return f(y);\n    }, x);\n  };\n}\n\nfunction curry(fn) {\n  return function curried() {\n    var _this = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return args.length >= fn.length ? fn.apply(this, args) : function () {\n      for (var _len3 = arguments.length, nextArgs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        nextArgs[_key3] = arguments[_key3];\n      }\n\n      return curried.apply(_this, [].concat(args, nextArgs));\n    };\n  };\n}\n\nfunction isObject(value) {\n  return {}.toString.call(value).includes('Object');\n}\n\nfunction isEmpty(obj) {\n  return !Object.keys(obj).length;\n}\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nfunction hasOwnProperty(object, property) {\n  return Object.prototype.hasOwnProperty.call(object, property);\n}\n\nfunction validateChanges(initial, changes) {\n  if (!isObject(changes)) errorHandler('changeType');\n  if (Object.keys(changes).some(function (field) {\n    return !hasOwnProperty(initial, field);\n  })) errorHandler('changeField');\n  return changes;\n}\n\nfunction validateSelector(selector) {\n  if (!isFunction(selector)) errorHandler('selectorType');\n}\n\nfunction validateHandler(handler) {\n  if (!(isFunction(handler) || isObject(handler))) errorHandler('handlerType');\n  if (isObject(handler) && Object.values(handler).some(function (_handler) {\n    return !isFunction(_handler);\n  })) errorHandler('handlersType');\n}\n\nfunction validateInitial(initial) {\n  if (!initial) errorHandler('initialIsRequired');\n  if (!isObject(initial)) errorHandler('initialType');\n  if (isEmpty(initial)) errorHandler('initialContent');\n}\n\nfunction throwError(errorMessages, type) {\n  throw new Error(errorMessages[type] || errorMessages[\"default\"]);\n}\n\nvar errorMessages = {\n  initialIsRequired: 'initial state is required',\n  initialType: 'initial state should be an object',\n  initialContent: 'initial state shouldn\\'t be an empty object',\n  handlerType: 'handler should be an object or a function',\n  handlersType: 'all handlers should be a functions',\n  selectorType: 'selector should be a function',\n  changeType: 'provided value of changes should be an object',\n  changeField: 'it seams you want to change a field in the state which is not specified in the \"initial\" state',\n  \"default\": 'an unknown error accured in `state-local` package'\n};\nvar errorHandler = curry(throwError)(errorMessages);\nvar validators = {\n  changes: validateChanges,\n  selector: validateSelector,\n  handler: validateHandler,\n  initial: validateInitial\n};\n\nfunction create(initial) {\n  var handler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  validators.initial(initial);\n  validators.handler(handler);\n  var state = {\n    current: initial\n  };\n  var didUpdate = curry(didStateUpdate)(state, handler);\n  var update = curry(updateState)(state);\n  var validate = curry(validators.changes)(initial);\n  var getChanges = curry(extractChanges)(state);\n\n  function getState() {\n    var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (state) {\n      return state;\n    };\n    validators.selector(selector);\n    return selector(state.current);\n  }\n\n  function setState(causedChanges) {\n    compose(didUpdate, update, validate, getChanges)(causedChanges);\n  }\n\n  return [getState, setState];\n}\n\nfunction extractChanges(state, causedChanges) {\n  return isFunction(causedChanges) ? causedChanges(state.current) : causedChanges;\n}\n\nfunction updateState(state, changes) {\n  state.current = _objectSpread2(_objectSpread2({}, state.current), changes);\n  return changes;\n}\n\nfunction didStateUpdate(state, handler, changes) {\n  isFunction(handler) ? handler(state.current) : Object.keys(changes).forEach(function (field) {\n    var _handler$field;\n\n    return (_handler$field = handler[field]) === null || _handler$field === void 0 ? void 0 : _handler$field.call(handler, state.current[field]);\n  });\n  return changes;\n}\n\nvar index = {\n  create: create\n};\n\nexport default index;\n","import curry from '../utils/curry.js';\nimport isObject from '../utils/isObject.js';\n\n/**\n * validates the configuration object and informs about deprecation\n * @param {Object} config - the configuration object \n * @return {Object} config - the validated configuration object\n */\n\nfunction validateConfig(config) {\n  if (!config) errorHandler('configIsRequired');\n  if (!isObject(config)) errorHandler('configType');\n\n  if (config.urls) {\n    informAboutDeprecation();\n    return {\n      paths: {\n        vs: config.urls.monacoBase\n      }\n    };\n  }\n\n  return config;\n}\n/**\n * logs deprecation message\n */\n\n\nfunction informAboutDeprecation() {\n  console.warn(errorMessages.deprecation);\n}\n\nfunction throwError(errorMessages, type) {\n  throw new Error(errorMessages[type] || errorMessages[\"default\"]);\n}\n\nvar errorMessages = {\n  configIsRequired: 'the configuration object is required',\n  configType: 'the configuration object should be an object',\n  \"default\": 'an unknown error accured in `@monaco-editor/loader` package',\n  deprecation: \"Deprecation warning!\\n    You are using deprecated way of configuration.\\n\\n    Instead of using\\n      monaco.config({ urls: { monacoBase: '...' } })\\n    use\\n      monaco.config({ paths: { vs: '...' } })\\n\\n    For more please check the link https://github.com/suren-atoyan/monaco-loader#config\\n  \"\n};\nvar errorHandler = curry(throwError)(errorMessages);\nvar validators = {\n  config: validateConfig\n};\n\nexport default validators;\nexport { errorHandler, errorMessages };\n","function curry(fn) {\n  return function curried() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return args.length >= fn.length ? fn.apply(this, args) : function () {\n      for (var _len2 = arguments.length, nextArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        nextArgs[_key2] = arguments[_key2];\n      }\n\n      return curried.apply(_this, [].concat(args, nextArgs));\n    };\n  };\n}\n\nexport default curry;\n","function isObject(value) {\n  return {}.toString.call(value).includes('Object');\n}\n\nexport default isObject;\n","import { objectSpread2 as _objectSpread2 } from '../_virtual/_rollupPluginBabelHelpers.js';\n\nfunction merge(target, source) {\n  Object.keys(source).forEach(function (key) {\n    if (source[key] instanceof Object) {\n      if (target[key]) {\n        Object.assign(source[key], merge(target[key], source[key]));\n      }\n    }\n  });\n  return _objectSpread2(_objectSpread2({}, target), source);\n}\n\nexport default merge;\n","// The source (has been changed) is https://github.com/facebook/react/issues/5465#issuecomment-157888325\nvar CANCELATION_MESSAGE = {\n  type: 'cancelation',\n  msg: 'operation is manually canceled'\n};\n\nfunction makeCancelable(promise) {\n  var hasCanceled_ = false;\n  var wrappedPromise = new Promise(function (resolve, reject) {\n    promise.then(function (val) {\n      return hasCanceled_ ? reject(CANCELATION_MESSAGE) : resolve(val);\n    });\n    promise[\"catch\"](reject);\n  });\n  return wrappedPromise.cancel = function () {\n    return hasCanceled_ = true;\n  }, wrappedPromise;\n}\n\nexport default makeCancelable;\nexport { CANCELATION_MESSAGE };\n","import { slicedToArray as _slicedToArray, objectWithoutProperties as _objectWithoutProperties } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport state from 'state-local';\nimport config$1 from '../config/index.js';\nimport validators from '../validators/index.js';\nimport compose from '../utils/compose.js';\nimport merge from '../utils/deepMerge.js';\nimport makeCancelable from '../utils/makeCancelable.js';\n\n/** the local state of the module */\n\nvar _state$create = state.create({\n  config: config$1,\n  isInitialized: false,\n  resolve: null,\n  reject: null,\n  monaco: null\n}),\n    _state$create2 = _slicedToArray(_state$create, 2),\n    getState = _state$create2[0],\n    setState = _state$create2[1];\n/**\n * set the loader configuration\n * @param {Object} config - the configuration object\n */\n\n\nfunction config(globalConfig) {\n  var _validators$config = validators.config(globalConfig),\n      monaco = _validators$config.monaco,\n      config = _objectWithoutProperties(_validators$config, [\"monaco\"]);\n\n  setState(function (state) {\n    return {\n      config: merge(state.config, config),\n      monaco: monaco\n    };\n  });\n}\n/**\n * handles the initialization of the monaco-editor\n * @return {Promise} - returns an instance of monaco (with a cancelable promise)\n */\n\n\nfunction init() {\n  var state = getState(function (_ref) {\n    var monaco = _ref.monaco,\n        isInitialized = _ref.isInitialized,\n        resolve = _ref.resolve;\n    return {\n      monaco: monaco,\n      isInitialized: isInitialized,\n      resolve: resolve\n    };\n  });\n\n  if (!state.isInitialized) {\n    setState({\n      isInitialized: true\n    });\n\n    if (state.monaco) {\n      state.resolve(state.monaco);\n      return makeCancelable(wrapperPromise);\n    }\n\n    if (window.monaco && window.monaco.editor) {\n      storeMonacoInstance(window.monaco);\n      state.resolve(window.monaco);\n      return makeCancelable(wrapperPromise);\n    }\n\n    compose(injectScripts, getMonacoLoaderScript)(configureLoader);\n  }\n\n  return makeCancelable(wrapperPromise);\n}\n/**\n * injects provided scripts into the document.body\n * @param {Object} script - an HTML script element\n * @return {Object} - the injected HTML script element\n */\n\n\nfunction injectScripts(script) {\n  return document.body.appendChild(script);\n}\n/**\n * creates an HTML script element with/without provided src\n * @param {string} [src] - the source path of the script\n * @return {Object} - the created HTML script element\n */\n\n\nfunction createScript(src) {\n  var script = document.createElement('script');\n  return src && (script.src = src), script;\n}\n/**\n * creates an HTML script element with the monaco loader src\n * @return {Object} - the created HTML script element\n */\n\n\nfunction getMonacoLoaderScript(configureLoader) {\n  var state = getState(function (_ref2) {\n    var config = _ref2.config,\n        reject = _ref2.reject;\n    return {\n      config: config,\n      reject: reject\n    };\n  });\n  var loaderScript = createScript(\"\".concat(state.config.paths.vs, \"/loader.js\"));\n\n  loaderScript.onload = function () {\n    return configureLoader();\n  };\n\n  loaderScript.onerror = state.reject;\n  return loaderScript;\n}\n/**\n * configures the monaco loader\n */\n\n\nfunction configureLoader() {\n  var state = getState(function (_ref3) {\n    var config = _ref3.config,\n        resolve = _ref3.resolve,\n        reject = _ref3.reject;\n    return {\n      config: config,\n      resolve: resolve,\n      reject: reject\n    };\n  });\n  var require = window.require;\n\n  require.config(state.config);\n\n  require(['vs/editor/editor.main'], function (monaco) {\n    storeMonacoInstance(monaco);\n    state.resolve(monaco);\n  }, function (error) {\n    state.reject(error);\n  });\n}\n/**\n * store monaco instance in local state\n */\n\n\nfunction storeMonacoInstance(monaco) {\n  if (!getState().monaco) {\n    setState({\n      monaco: monaco\n    });\n  }\n}\n/**\n * internal helper function\n * extracts stored monaco instance\n * @return {Object|null} - the monaco instance\n */\n\n\nfunction __getMonacoInstance() {\n  return getState(function (_ref4) {\n    var monaco = _ref4.monaco;\n    return monaco;\n  });\n}\n\nvar wrapperPromise = new Promise(function (resolve, reject) {\n  return setState({\n    resolve: resolve,\n    reject: reject\n  });\n});\nvar loader = {\n  config: config,\n  init: init,\n  __getMonacoInstance: __getMonacoInstance\n};\n\nexport default loader;\n","var config = {\n  paths: {\n    vs: 'https://cdn.jsdelivr.net/npm/monaco-editor@0.43.0/min/vs'\n  }\n};\n\nexport default config;\n","var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            overrideMap,\n            overrideMap === errorMap ? undefined : errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" &&\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nvar _ZodEnum_cache, _ZodNativeEnum_cache;\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        var _a, _b;\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message !== null && message !== void 0 ? message : ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: (_a = message !== null && message !== void 0 ? message : required_error) !== null && _a !== void 0 ? _a : ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: (_b = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b !== void 0 ? _b : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this, this._def);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    // let regex = `\\\\d{2}:\\\\d{2}:\\\\d{2}`;\n    let regex = `([01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d`;\n    if (args.precision) {\n        regex = `${regex}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        regex = `${regex}(\\\\.\\\\d+)?`;\n    }\n    return regex;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nfunction datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a, _b;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            local: (_b = options === null || options === void 0 ? void 0 : options.local) !== null && _b !== void 0 ? _b : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * @deprecated Use z.string().min(1) instead.\n     * @see {@link ZodString.min}\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = BigInt(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodEnum_cache, new Set(this._def.values), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\").has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\n_ZodEnum_cache = new WeakMap();\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodNativeEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodNativeEnum_cache, new Set(util.getValidEnumValues(this._def.values)), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\").has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\n_ZodNativeEnum_cache = new WeakMap();\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result)\n            ? result.then((data) => freeze(data))\n            : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\nfunction custom(check, params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            if (!check(data)) {\n                const p = typeof params === \"function\"\n                    ? params(data)\n                    : typeof params === \"string\"\n                        ? { message: params }\n                        : params;\n                const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\n            }\n        });\n    return ZodAny.create();\n}\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    datetimeRegex: datetimeRegex,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    ZodReadonly: ZodReadonly,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodReadonly, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, datetimeRegex, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };\n","var compose = function compose() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return function (x) {\n    return fns.reduceRight(function (y, f) {\n      return f(y);\n    }, x);\n  };\n};\n\nexport default compose;\n","<script lang=\"ts\">\n    import loader from \"@monaco-editor/loader\";\n    import type { editor } from \"monaco-editor\";\n\n    type Monaco =\n        typeof import(\"../node_modules/monaco-editor/esm/vs/editor/editor.api\");\n\n    export let style: string;\n    export let value: string = \"\";\n\n    $: style, toggleTheme();\n\n    let divEditor: HTMLElement;\n    let monaco: Monaco | null;\n    let editor: editor.IStandaloneCodeEditor;\n    let theme: \"vs\" | \"vs-dark\" = \"vs-dark\";\n\n    function toggleTheme(): void {\n        if (monaco == null) {\n            return;\n        }\n\n        theme = theme == \"vs\" ? \"vs-dark\" : \"vs\";\n        monaco.editor.setTheme(theme);\n    }\n\n    function getCurrentValue(): string {\n        if (editor == null) {\n            console.warn(\"sql editor not ready, can't get value\");\n            return \"\";\n        }\n\n        const currentValue = editor.getValue({\n            lineEnding: \"\\n\",\n            preserveBOM: false,\n        });\n\n        return currentValue;\n    }\n\n    export function setValue(value: string): void {\n        if (editor == null) {\n            console.warn(\"sql editor not ready, can't set value\", { value });\n            return;\n        }\n\n        editor.setValue(value);\n    }\n\n    export async function init(): Promise<string> {\n        if (divEditor == null) {\n            return \"editor element not found\";\n        }\n\n        monaco = await loader.init();\n        if (monaco == null) {\n            return \"failed to initialize SQL editor\";\n        }\n\n        editor = monaco.editor.create(divEditor, {\n            value: value,\n            language: \"sql\",\n            theme: \"vs-dark\",\n        });\n\n        editor.onDidChangeModelContent(() => {\n            value = getCurrentValue();\n        });\n\n        return \"\";\n    }\n</script>\n\n<div bind:this={divEditor} class=\"custom-editor\" />\n\n<style>\n    .custom-editor {\n        width: 100%;\n        min-height: 300px;\n        margin-bottom: 0.5rem;\n        outline: 1px solid #b7b7b7;\n    }\n</style>\n","<script lang=\"ts\">\n    import { createEventDispatcher } from \"svelte\";\n    import type { Log } from \"./log\";\n\n    export let log: Log;\n\n    let container: HTMLDivElement;\n\n    const dispatch = createEventDispatcher<{\n        open: undefined;\n        close: undefined;\n        setEditor: string;\n    }>();\n\n    async function copy(): Promise<void> {\n        await navigator.clipboard.writeText(log.text);\n        alert(\"Copied!\");\n    }\n\n    function insert(): void {\n        dispatch(\"setEditor\", log.text);\n    }\n\n    export function open(): void {\n        container.scrollIntoView({\n            behavior: \"smooth\",\n        });\n\n        log.isOpen = true;\n        dispatch(\"open\");\n    }\n\n    export function close(): void {\n        log.isOpen = false;\n        dispatch(\"close\");\n    }\n\n    function toggleVisibility(): void {\n        if (log.isOpen) {\n            close();\n            return;\n        }\n\n        open();\n    }\n</script>\n\n<div class=\"log\" bind:this={container}>\n    <p\n        class=\"log-title mb-2\"\n        on:keydown={() => {}}\n        on:click={() => toggleVisibility()}\n    >\n        {(log.isOpen ? \"- \" : \"+\") + log.title}\n    </p>\n\n    {#if log.isOpen}\n        <div class=\"buttons\">\n            <button class=\"button is-info\" on:click={() => copy()}>\n                Copy\n            </button>\n\n            <button class=\"button is-info\" on:click={() => insert()}>\n                Insert in editor\n            </button>\n        </div>\n\n        <textarea value={log.text} readonly></textarea>\n    {/if}\n</div>\n\n<style>\n    .log {\n        margin-left: 0.5rem;\n    }\n\n    .log-title {\n        color: var(--color, black);\n        font-size: large;\n    }\n\n    .log-title:hover {\n        cursor: pointer;\n        background-color: rgb(211, 211, 211);\n        color: black;\n    }\n\n    textarea {\n        width: 100%;\n        height: 16rem;\n    }\n</style>\n","<script lang=\"ts\">\n    import { createEventDispatcher } from \"svelte\";\n    import LogEntry from \"./LogEntry.svelte\";\n    import type { Log } from \"./log\";\n\n    const dispatch = createEventDispatcher<{\n        setEditor: string;\n    }>();\n\n    let logEntries: Log[] = [];\n    let logsVisible: boolean = true;\n\n    export function addLog(log: Log): void {\n        logEntries = [...logEntries, log];\n    }\n\n    export function clear(): void {\n        logEntries = [];\n    }\n\n    function setEditor(text: string): void {\n        dispatch(\"setEditor\", text);\n    }\n\n    function closeAllOtherLogs(openedLogIndex: number): void {\n        for (let i = 0; i < logEntries.length; i++) {\n            logEntries[i].isOpen = openedLogIndex == i;\n        }\n    }\n</script>\n\n<div class=\"logger\">\n    <label\n        class=\"label\"\n        for=\"\"\n        on:keydown={() => {}}\n        on:click={() => (logsVisible = !logsVisible)}\n    >\n        {logsVisible ? \"-\" : \"+\"}\n        Logs\n    </label>\n\n    {#if logsVisible}\n        {#each logEntries as log, index (log.timestamp)}\n            <LogEntry\n                {log}\n                on:open={() => closeAllOtherLogs(index)}\n                on:setEditor={(e) => setEditor(e.detail)}\n            />\n        {/each}\n    {/if}\n</div>\n\n<style>\n    label {\n        margin-top: 0.5rem;\n        width: 100%;\n        border-radius: 0.2rem;\n        color: var(--color, black);\n    }\n\n    label:hover {\n        background-color: var(\n            --label-hover-background-color,\n            rgb(211, 211, 211)\n        );\n        cursor: pointer;\n    }\n</style>\n","<script lang=\"ts\">\n    import { onMount, tick } from \"svelte\";\n    import { waitUntil } from \"./utils\";\n    import type { Database, QueryExecResult } from \"sql.js\";\n    import { format } from \"sql-formatter\";\n    import ResultTable from \"./ResultTable.svelte\";\n    import SqlEditor from \"./SqlEditor.svelte\";\n    import { z } from \"zod\";\n    import Logger from \"./Logger.svelte\";\n\n    export let style: string;\n\n    const queryShowTables = \"SELECT * FROM sqlite_master WHERE type='table';\";\n\n    let labelEditor: HTMLLabelElement;\n    let labelResults: HTMLLabelElement;\n    let logger: Logger;\n    let db: Database;\n    let query: string = `SELECT * FROM todo ORDER BY userId, completed DESC, title;`;\n    let results: QueryExecResult[] = [];\n    let databaseError: string = \"\";\n    let editorError: string = \"\";\n    let editorLoaded: boolean = false;\n    let editorVisible: boolean = true;\n    let resultsVisible: boolean = true;\n    let sqlEditor: SqlEditor;\n\n    async function seed() {\n        executeQuery(`CREATE TABLE todo (\n            ID INTEGER PRIMARY KEY AUTOINCREMENT,\n            userId INTEGER,\n            title VARCHAR (255),\n            completed INTEGER (1)\n        )`);\n\n        const todo = z.object({\n            userId: z.number(),\n            id: z.number(),\n            title: z.string(),\n            completed: z.boolean(),\n        });\n\n        const getTodosResponse = todo.array();\n\n        const response = await fetch(\n            \"https://jsonplaceholder.typicode.com/todos\",\n        );\n        const rawBody = await response.text();\n\n        if (!response.ok) {\n            const title = `ERROR: failed to seed database, status ${response.status}`;\n            showLog(title, `${title}:\\n${rawBody}`);\n            return;\n        }\n\n        const jsonBody = JSON.parse(rawBody);\n        const parseResult = getTodosResponse.safeParse(jsonBody);\n\n        if (!parseResult.success) {\n            const parseError = parseResult.error.errors[0];\n            const msg = `${parseError.path.join(\".\")}: ${parseError.message}; ${\n                parseError.code\n            }`;\n\n            const title = `ERROR: failed to seed database, JSON error`;\n            showLog(title, `${title}:\\n${msg}`);\n            return;\n        }\n\n        const todos = parseResult.data;\n        let query = \"\";\n\n        for (let i = 0; i < todos.length; i++) {\n            const todo = todos[i];\n            query += `\n                INSERT INTO todo (ID, userId, title, completed)\n                VALUES (${todo.id}, ${todo.userId}, '${todo.title}', ${\n                    todo.completed ? 1 : 0\n                });\n            `;\n        }\n\n        executeQuery(query);\n    }\n\n    function formatEditor() {\n        try {\n            query = format(query, {\n                language: \"sqlite\",\n                newlineBeforeSemicolon: true,\n                tabWidth: 4,\n                linesBetweenQueries: 1,\n                keywordCase: \"upper\",\n            });\n        } catch (error) {\n            const title = \"ERROR: SQL format\";\n            showLog(title, `${title}:\\n${error}`);\n        }\n\n        if (sqlEditor != null) {\n            sqlEditor.setValue(query);\n        }\n    }\n\n    function executeQuery(query: string) {\n        if (query == null || query == \"\") {\n            return;\n        }\n\n        editorError = \"\";\n        results = [];\n\n        try {\n            console.log(query);\n            showLog(`Query: ${query.substring(0, 40)}`, query);\n            results = db.exec(query);\n\n            if (results.length > 0) {\n                resultsVisible = true;\n            }\n        } catch (error) {\n            console.error(error);\n            editorError = `${error}`;\n            const title = \"ERROR: execute query\";\n            showLog(title, `${title}:\\n${error}`);\n            return;\n        }\n\n        let msg = `Results: ${results.length}`;\n        for (let i = 0; i < results.length; i++) {\n            const result = results[i];\n            msg += `\\n  #${i + 1}. cols ${result.columns.length} x rows ${\n                result.values.length\n            }`;\n        }\n\n        showLog(\"Query result\", JSON.stringify(results, null, 2));\n    }\n\n    function showLog(title: string, msg: string) {\n        if (msg == \"\") {\n            return;\n        }\n\n        const time = new Date().toLocaleTimeString();\n        logger.addLog({\n            timestamp: Date.now() + Math.random(),\n            title: `${time}: ${title}`,\n            text: msg,\n            isOpen: false,\n        });\n    }\n\n    function showTables() {\n        sqlEditor.setValue(queryShowTables + \"\\n\");\n        formatEditor();\n        executeQuery(queryShowTables);\n\n        labelResults.scrollIntoView({\n            behavior: \"smooth\",\n        });\n    }\n\n    function clearLog() {\n        logger.clear();\n    }\n\n    async function handleExecuteButton(): Promise<void> {\n        executeQuery(query);\n        await tick();\n        labelResults.scrollIntoView({\n            behavior: \"smooth\",\n        });\n    }\n\n    onMount(async () => {\n        showLog(\"Waiting for database...\", \"Waiting for database...\");\n        const dbIsUp = await waitUntil(() => window.db != null, 100, 3 * 1000);\n        if (!dbIsUp) {\n            const title = \"ERROR: failed to initialize database\";\n            databaseError = `${title}. Try reloading the page.`;\n            showLog(title, databaseError);\n            return;\n        }\n\n        db = window.db;\n        showLog(\"Database found!\", \"Database found!\");\n        await tick();\n        await seed();\n        const sqlEditorInitError = await sqlEditor.init();\n        if (sqlEditorInitError.length > 0) {\n            const title = `ERROR: ${sqlEditorInitError}`;\n            editorError = `${title}. Try reloading the page.`;\n            showLog(title, editorError);\n            console.log(\"show log\", title);\n            return;\n        }\n\n        editorLoaded = true;\n        formatEditor();\n    });\n</script>\n\n<div class=\"editor\" {style}>\n    {#if db == null}\n        <p>Waiting for database to load...</p>\n\n        {#if databaseError.length > 0}\n            <p class=\"editor-error mt-2\">{databaseError}</p>\n        {/if}\n    {:else}\n        <label\n            class=\"label\"\n            for=\"\"\n            bind:this={labelEditor}\n            on:keydown={() => {}}\n            on:click={() => (editorVisible = !editorVisible)}\n        >\n            {editorVisible ? \"-\" : \"+\"}\n            Editor\n        </label>\n\n        <div class={editorVisible ? \"is-block\" : \"is-hidden\"}>\n            {#if !editorLoaded}\n                <p>Waiting for editor to load...</p>\n            {/if}\n\n            <SqlEditor bind:this={sqlEditor} bind:value={query} {style} />\n\n            {#if editorLoaded}\n                <div class=\"buttons\">\n                    <button\n                        class=\"button is-info\"\n                        on:click={() => handleExecuteButton()}>Execute</button\n                    >\n\n                    <button\n                        class=\"button is-info\"\n                        on:click={() => formatEditor()}>Format</button\n                    >\n\n                    <button\n                        class=\"button is-info\"\n                        on:click={() => showTables()}\n                    >\n                        Show Tables\n                    </button>\n\n                    <button class=\"button is-info\" on:click={() => clearLog()}>\n                        Clear Log\n                    </button>\n                </div>\n            {/if}\n        </div>\n\n        {#if editorError.length > 0}\n            <p class=\"editor-error mt-2\">{editorError}</p>\n        {/if}\n\n        {#if results.length > 0}\n            <label\n                class=\"label\"\n                for=\"\"\n                bind:this={labelResults}\n                on:keydown={() => {}}\n                on:click={() => (resultsVisible = !resultsVisible)}\n            >\n                {resultsVisible ? \"-\" : \"+\"}\n                Results\n            </label>\n\n            {#if resultsVisible}\n                {#each results as result, index}\n                    <p>\n                        {`#${index + 1}: ${result.columns.length} col${result.columns.length === 1 ? \"\" : \"s\"} x ${result.values.length} row${result.values.length === 1 ? \"\" : \"s\"}`}\n                    </p>\n\n                    <ResultTable {result} />\n                {/each}\n            {/if}\n        {/if}\n    {/if}\n\n    <Logger\n        bind:this={logger}\n        on:setEditor={(e) => {\n            labelEditor.scrollIntoView({\n                behavior: \"smooth\",\n            });\n\n            sqlEditor.setValue(e.detail);\n            formatEditor();\n        }}\n    />\n</div>\n\n<style>\n    .editor {\n        margin-top: 0;\n        margin-bottom: 0;\n        margin-left: 5%;\n        margin-right: 5%;\n    }\n\n    label {\n        margin-top: 0.5rem;\n        width: 100%;\n        border-radius: 0.2rem;\n        color: var(--color, black);\n    }\n\n    label:hover {\n        background-color: var(\n            --label-hover-background-color,\n            rgb(211, 211, 211)\n        );\n        cursor: pointer;\n    }\n\n    .editor-error {\n        color: red;\n        font-size: large;\n    }\n</style>\n","export async function waitUntil(conditionFunction, everyMs, untilMs) {\n    return await new Promise((resolve, reject) => {\n        let tries = 0;\n        const interval = setInterval(() => {\n            tries++;\n            if (untilMs && tries * everyMs >= untilMs) {\n                resolve(false);\n                clearInterval(interval);\n            }\n            if (conditionFunction()) {\n                resolve(true);\n                clearInterval(interval);\n            }\n            ;\n        }, everyMs);\n    });\n}\n","import { z } from \"zod\";\nexport const Theme = z.enum([\"Light\", \"Dark\"]);\n","<script lang=\"ts\">\n    import { Theme } from \"./theme\";\n\n    export let theme: Theme = Theme.Enum.Dark;\n\n    $: isDark = theme == Theme.Enum.Dark;\n\n    function toggleTheme(): void {\n        theme = isDark ? Theme.Enum.Light : Theme.Enum.Dark;\n    }\n</script>\n\n<div class=\"toggle\">\n    <button class=\"button is-info\" on:click={() => toggleTheme()}>\n        {isDark ? \"Dark\" : \"Light\"} mode\n    </button>\n</div>\n\n<style>\n    .toggle {\n        position: relative;\n        left: 5%;\n        top: 10%;\n    }\n</style>\n","<script lang=\"ts\">\n    import { onMount } from \"svelte\";\n    import Editor from \"./Editor.svelte\";\n    import { Theme } from \"./theme\";\n    import ThemeToggle from \"./ThemeToggle.svelte\";\n\n    interface BuildInfo {\n        sha: string;\n        ref: string;\n        actor: string;\n    }\n\n    let buildInfo: BuildInfo | null = null;\n    let theme: Theme = Theme.enum.Dark;\n\n    $: shortSha = buildInfo?.sha.substring(0, 7) ?? \"\";\n\n    $: linkCommit = `https://github.com/FS-Frost/sql-playground/commit/${\n        buildInfo?.sha ?? \"\"\n    }`;\n\n    $: linkBranch = `https://github.com/FS-Frost/sql-playground/tree/${\n        buildInfo?.ref ?? \"\"\n    }`;\n\n    $: linkActor = `https://github.com/${buildInfo?.actor ?? \"\"}`;\n\n    $: cssVarStyles = Object.entries({\n        \"background-color\": theme == Theme.Enum.Dark ? \"#1e1e1e\" : \"white\",\n        color: theme == Theme.Enum.Dark ? \"white\" : \"black\",\n        \"label-hover-background-color\": Theme.Enum.Dark ? \"gray\" : \"\",\n    })\n        .map(([key, value]) => `--${key}:${value}`)\n        .join(\";\");\n\n    async function loadBuildInfo() {\n        const url = \"build-info.json\";\n        const response = await fetch(url);\n\n        if (!response.ok) {\n            console.info(`Could not fectch ${url}`);\n            return;\n        }\n\n        const info: BuildInfo = await response.json();\n\n        if (info == null) {\n            console.error(\"Invalid build info\");\n        }\n\n        buildInfo = info;\n    }\n\n    onMount(() => {\n        loadBuildInfo();\n    });\n</script>\n\n<main style={cssVarStyles}>\n    <h1 class=\"title\">SQL Playground</h1>\n\n    <ThemeToggle bind:theme />\n\n    <Editor style={cssVarStyles} />\n\n    <div class=\"footer\">\n        <div class=\"container\">\n            {#if buildInfo != null}\n                <p class=\"text-muted text-center\">\n                    Version <a href={linkBranch} target=\"_blank\"\n                        ><b>{buildInfo.ref}</b></a\n                    >.<a href={linkCommit} target=\"_blank\"\n                        ><b title={buildInfo.sha}>{shortSha}</b></a\n                    >, deployed by\n                    <a href={linkActor} target=\"_blank\"\n                        ><b>{buildInfo.actor}</b></a\n                    >\n                </p>\n            {/if}\n        </div>\n    </div>\n</main>\n\n<style>\n    main {\n        padding: 1em;\n        margin: 0 auto;\n        padding: 8px;\n        color: var(--color, black);\n        background-color: var(--background-color, white);\n    }\n\n    .title {\n        text-transform: uppercase;\n        text-align: center;\n        color: var(--color, black);\n    }\n\n    @media (min-width: 640px) {\n        main {\n            max-width: none;\n        }\n\n        .title {\n            font-size: 1.6em;\n        }\n    }\n\n    .footer {\n        color: var(--color, black);\n        background-color: var(--background-color, white);\n    }\n</style>\n","import App from \"./App.svelte\";\nconst app = new App({\n    target: document.body,\n    props: {},\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","createEventDispatcher","type","detail","cancelable","callbacks","bubbles","e","createEvent","initCustomEvent","custom_event","slice","call","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","add_flush_callback","seen_callbacks","Set","flushidx","saved_component","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","outro_and_destroy_block","lookup","key","bind","index","props","undefined","bound","create_component","mount_component","customElement","m","new_on_destroy","map","filter","on_destroy","destroy_component","filtered","targets","indexOf","flush_render_callbacks","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","splice","$set","$$props","obj","$$set","keys","indentString","cfg","indentStyle","repeat","useTabs","tabWidth","isTabularStyle","Params","constructor","params","get","getPositionalParameterIndex","setPositionalParameterIndex","factory","Rule","symbols","postprocess","id","highestId","State","rule","dot","reference","wantedBy","isComplete","Column","grammar","states","wants","scannable","completed","Grammar","rules","start","byName","hasOwnProperty","StreamLexer","reset","Parser","fromCompiled","keepHistory","lexer","lexerState","column","table","predict","process","current","getSymbolShortDisplay","symbol","literal","JSON","stringify","RegExp","toString","test","String","prototype","withCursorAt","symbolSequence","join","nextState","child","state","left","right","build","reverse","finish","fail","nextColumn","w","complete","exp","nulls","s","copy","Lexer","ParserStart","ParserRules","g","buffer","line","lastLineBreak","col","next","ch","save","formatError","token","message","lines","split","Math","max","nextLineBreak","lastLineDigits","pad","n","feed","chunk","err","reportLexerError","offset","expect","isToken","reportError","results","lexerError","tokenDisplay","lexerMessage","reportErrorCommon","lastColumnIndex","lastColumn","expectantStates","nextSymbol","displayStateStack","buildFirstStateStack","stateStack","symbolDisplay","getSymbolDisplay","lastDisplay","sameDisplayCount","j","display","getSymbolLongDisplay","visited","prevState","childVisited","concat","childResult","restore","rewind","considerations","t","module","exports","nearley","TokenType","createEofToken","EOF","raw","EOF_TOKEN","Infinity","testToken","compareToken","ARRAY","RESERVED_KEYWORD","BY","SET","RESERVED_CLAUSE","STRUCT","WINDOW","isReserved","RESERVED_FUNCTION_NAME","RESERVED_PHRASE","RESERVED_SELECT","RESERVED_SET_OPERATION","RESERVED_JOIN","ARRAY_KEYWORD","CASE","END","WHEN","ELSE","THEN","LIMIT","BETWEEN","AND","OR","XOR","dotKeywordToIdent","tokens","prevToken","prevNonCommentToken","IDENTIFIER","funcNameToKeyword","nextToken","nextNonCommentToken","isOpenParen","identToArrayIdent","isOpenBracket","ARRAY_IDENTIFIER","keywordToArrayKeyword","dir","isComment","OPEN_PAREN","BLOCK_COMMENT","LINE_COMMENT","lineColFromIndex","source","LexerAdapter","input","tokenize","_info","NodeType","unwrap","el","toKeywordNode","keyword","tokenType","addComments","leading","trailing","leadingComments","trailingComments","statements","last","hasSemicolon","DELIMITER","delimiter","statement","expressions","clauses","COMMA","limitToken","_","exp1","optional","comma","exp2","limit_clause","limitKw","count","nameToken","clause","nameKw","ASTERISK","all_columns_asterisk","set_operation","expr","arrayToken","brackets","array_subscript","array","identifier","parenthesis","parens","function_call","open","close","openParen","closeParen","DOT","object","_1","_2","property","property_access","betweenToken","expr1","andToken","_3","expr2","between_predicate","betweenKw","andKw","caseToken","endToken","case_expression","caseKw","endKw","whenToken","cond","thenToken","case_when","whenKw","thenKw","condition","result","elseToken","case_else","elseKw","operator","OPERATOR","QUOTED_IDENTIFIER","VARIABLE","NAMED_PARAMETER","QUOTED_PARAMETER","NUMBERED_PARAMETER","POSITIONAL_PARAMETER","parameter","NUMBER","STRING","comments","line_comment","precedingWhitespace","block_comment","grammar$1","NearleyParser","arr","sortByLengthDesc","strings","sort","localeCompare","maxLength","reduce","cur","equalizeWhitespace","replace","flatKeywordList","dedupe","values","flat","isMultiline","PRECEDING_WHITESPACE_REGEX","formatCommaPositions","query","commaPosition","indent","groups","group","match","groupCommaDelimitedLines","flatMap","commaLines","maxLineLength","trimTrailingCommas","formatTabular","whitespace","removeLastIndent","trimStart","formatBefore","WS","Layout","items","indentation","item","SPACE","NO_SPACE","trimHorizontalWhitespace","NO_NEWLINE","trimWhitespace","NEWLINE","addNewline","MANDATORY_NEWLINE","INDENT","addIndentation","SINGLE_INDENT","isHorizontalWhitespace","isRemovableWhitespace","newline","getLevel","itemToString","getLayoutItems","getSingleIndent","isTabularToken","isLogicalOperator","INDENT_TYPE_TOP_LEVEL","Indentation","indentTypes","increaseTopLevel","increaseBlockLevel","decreaseTopLevel","decreaseBlockLevel","InlineLayout","trailingSpace","expressionWidth","super","addToLength","InlineLayoutError","ExpressionFormatter","inline","dialectCfg","layout","format","formatNode","formatComments","formatNodeWithoutComments","formatFunctionCall","formatArraySubscript","formatPropertyAccess","formatParenthesis","formatBetweenPredicate","formatCaseExpression","formatCaseWhen","formatCaseElse","formatClause","formatSetOperation","formatLimitClause","formatAllColumnsAsterisk","formatLiteral","formatIdentifier","formatParameter","formatOperator","formatComma","formatLineComment","formatBlockComment","formatKeywordNode","withComments","showKw","inlineLayout","formatInlineExpression","formatSubExpression","showNonTabularKw","_node","_this$dialectCfg$alwa","denseOperators","alwaysDenseOperators","includes","com","isMultilineBlockComment","splitBlockComment","comment","oldParamIndex","formatJoin","formatLogicalOperator","formatKeyword","logicalOperatorNewline","tokenText","tail","padEnd","padStart","toTabularFormat","keywordCase","toLowerCase","Formatter","tokenizer","cachedTokenizer","cls","formatOptions","ast","parse","formattedQuery","formatAst","postFormat","trimEnd","paramTypesOverrides","parser","sql","paramTypes","createParser","stat","formatStatement","linesBetweenQueries","newlineBeforeSemicolon","tabulateAlias","newQuery","aliasLines","splitLines","matches","precedingText","as","alias","aliasMaxLength","formatAliasPositions","escapeRegExp","string","WHITESPACE_REGEX","patternToRegex","pattern","toCaseInsensitivePattern","prefix","char","toUpperCase","kind","extraParens","pair","reservedWord","reservedKeywords","identChars","avoidIdentChars","dashes","rejectIdentCharsPattern","reservedKeywordsPattern","typesRegex","quotePatterns","specialDelimiterMap","patternList","entries","specialDelimiters","buildQStringPatterns","singleQuotePattern","quoteTypes","prefixes","requirePrefix","prefixesPattern","quote","stringPattern","specialChars","identifierPattern","first","allowFirstCharNumber","letter","number","firstChars","restChars","withDashes","TokenizerEngine","getWhitespace","getNextToken","createParseError","lastIndex","exec","regex","matchedText","START","MIDDLE","NestedComment","nestLevel","matchSection","Tokenizer","rulesBeforeParams","buildRulesBeforeParams","rulesAfterParams","buildRulesAfterParams","buildParamRules","postProcess","validRules","nestedBlockComments","lineCommentTypes","regex.string","identTypes","regex.reservedWord","reservedPhrases","toCanonical","reservedClauses","reservedSelect","reservedSetOperations","reservedJoins","supportsXor","reservedFunctionNames","variableTypes","varTypes","varType","stringTypes","regex.identifier","regex.parenthesis","CLOSE_PAREN","operators","_cfg$paramTypes","_cfg$paramTypes2","_cfg$paramTypes3","_cfg$paramTypes4","named","quoted","numbered","positional","regex.parameter","regex.identifierPattern","paramChars","v","regex.stringPattern","tokenKey","quoteChar","Boolean","expandPhrases","phrases","expandSinglePhrase","phrase","buildCombinations","parsePhrase","trim","REQUIRED_PART","REQUIRED_BLOCK","OPTIONAL_BLOCK","requiredMatch","optionalBlockMatch","choices","requiredBlockMatch","head","keywords","datatypes","stringFormat","misc","ddl","functions","aead","aggregateAnalytic","aggregate","approximateAggregate","bitwise","conversion","date","datetime","debugging","federatedQuery","geography","hash","hll","interval","json","math","navigation","net","numbering","security","statisticalAggregate","time","timestamp","uuid","conditional","legacyAggregate","legacyBitwise","legacyCasting","legacyComparison","legacyDatetime","legacyIp","legacyJson","legacyMath","legacyRegex","legacyString","legacyTableWildcard","legacyUrl","legacyWindow","legacyMisc","other","pivot","dataTypes","detectArraySubscripts","processed","_tokens","endIndex","findClosingAngleBracketIndex","typeDefTokens","formatTypeDefToken","combineParameterizedTypes","startIndex","level","scalar","row","olap","cast","standard","masking","window","nonReserved","reserved","fileTypes","all","numeric","character","comparison","largeObject","collection","hierarchical","dataMining","xml","encoding","nullRelated","env","objectReference","model","previousReservedToken","binary","bitstring","datatype","enum","geometry","network","textsearch","sequence","range","set","sysInfo","sysAdmin","trigger","eventTrigger","stats","dateTime","spatial","hyperLogLog","machineLearning","superType","dataType","dataConversionParams","dataLoadParams","dataFormatParams","copyAuthParams","copyCompressionParams","copyMiscParams","compressionEncodings","caseAbbrev","nonStandard","rowPattern","types","analytic","configuration","cryptographic","cursor","mathematical","metadata","ranking","system","statistical","odbc","TransactSqlFormatter","formatters","bigquery","db2","hive","mariadb","mysql","n1ql","plsql","postgresql","redshift","singlestoredb","snowflake","spark","sqlite","transactsql","trino","tsql","supportedDialects","defaultOptions","language","ConfigError","every","console","warn","validateConfig","th","t_value","td","td_title_value","columns","tr","each_value_2","each_value","div","thead","tbody","_defineProperty","defineProperty","enumerable","configurable","writable","ownKeys","enumerableOnly","getOwnPropertySymbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","arguments","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","_arrayLikeToArray","len","arr2","curry","curried","_this","_len2","args","_key2","_len3","nextArgs","_key3","isObject","isFunction","errorHandler","errorMessages","initialIsRequired","initialType","initialContent","handlerType","handlersType","selectorType","changeType","changeField","default","validators","changes","initial","some","field","selector","_handler","extractChanges","causedChanges","updateState","didStateUpdate","_handler$field","didUpdate","validate","getChanges","_len","_key","x","reduceRight","y","f","compose","configIsRequired","configType","deprecation","config","urls","paths","vs","monacoBase","merge","assign","CANCELATION_MESSAGE","msg","makeCancelable","promise","hasCanceled_","wrappedPromise","reject","val","cancel","_state$create","isInitialized","monaco","_state$create2","isArray","_arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","_s","_i","done","_iterableToArrayLimit","minLen","_unsupportedIterableToArray","TypeError","_nonIterableRest","getState","setState","injectScripts","script","body","getMonacoLoaderScript","configureLoader","src","_ref2","loaderScript","onload","onerror","_ref3","require","storeMonacoInstance","error","util","objectUtil","wrapperPromise","loader","globalConfig","_validators$config","_ref","editor","__getMonacoInstance","_ref4","divEditor","style","theme","setTheme","setValue","onDidChangeModelContent","$$invalidate","getValue","lineEnding","preserveBOM","$$value","assertEqual","assertIs","_arg","assertNever","_x","arrayToEnum","getValidEnumValues","validKeys","objectKeys","k","objectValues","find","checker","isInteger","Number","isFinite","floor","joinValues","separator","jsonStringifyReplacer","mergeShapes","second","ZodParsedType","getParsedType","isNaN","nan","boolean","function","bigint","null","catch","Date","unknown","ZodIssueCode","ZodError","issues","addIssue","sub","addIssues","subs","actualProto","setPrototypeOf","__proto__","errors","_mapper","mapper","issue","fieldErrors","_errors","processError","code","unionErrors","returnTypeError","argumentsError","path","curr","assert","isEmpty","flatten","formErrors","errorMap","_ctx","invalid_type","received","expected","invalid_literal","unrecognized_keys","invalid_union","invalid_union_discriminator","invalid_enum_value","invalid_arguments","invalid_return_type","invalid_date","invalid_string","validation","position","startsWith","endsWith","too_small","exact","inclusive","minimum","too_big","maximum","custom","invalid_intersection_types","not_multiple_of","multipleOf","not_finite","defaultError","overrideErrorMap","getErrorMap","makeIssue","errorMaps","issueData","fullPath","fullIssue","errorMessage","maps","addIssueToContext","overrideMap","common","contextualErrorMap","schemaErrorMap","ParseStatus","abort","mergeArray","status","arrayValue","INVALID","mergeObjectAsync","pairs","syncPairs","mergeObjectSync","finalObject","alwaysSet","freeze","DIRTY","OK","isAborted","isDirty","isValid","isAsync","__classPrivateFieldGet","receiver","__classPrivateFieldSet","errorUtil","_ZodEnum_cache","_ZodNativeEnum_cache","SuppressedError","errToObj","ParseInputLazyPath","parent","_cachedPath","_path","handleResult","success","_error","processCreateParams","invalid_type_error","required_error","description","iss","_a","_b","ZodType","def","spa","safeParseAsync","_def","safeParse","parseAsync","refine","refinement","superRefine","nullable","nullish","or","and","transform","brand","describe","pipe","readonly","isNullable","isOptional","_getType","_getOrReturnCtx","parsedType","_processInputParams","_parseSync","_parse","_parseAsync","async","maybeAsyncResult","check","getIssueProperties","_refinement","setError","refinementData","ZodEffects","schema","typeName","ZodFirstPartyTypeKind","effect","ZodOptional","ZodNullable","ZodArray","ZodPromise","option","ZodUnion","incoming","ZodIntersection","defaultValueFunc","ZodDefault","innerType","defaultValue","ZodBranded","catchValueFunc","ZodCatch","catchValue","This","ZodPipeline","ZodReadonly","cuidRegex","cuid2Regex","ulidRegex","uuidRegex","nanoidRegex","durationRegex","emailRegex","emojiRegex","ipv4Regex","ipv6Regex","base64Regex","dateRegexSource","dateRegex","timeRegexSource","precision","datetimeRegex","opts","ZodString","coerce","checks","tooBig","tooSmall","URL","ip","version","_regex","_addCheck","email","url","emoji","nanoid","cuid","cuid2","ulid","base64","duration","min","minLength","nonempty","isDatetime","isDate","isTime","isDuration","isEmail","isURL","isEmoji","isUUID","isNANOID","isCUID","isCUID2","isULID","isIP","isBase64","floatSafeRemainder","step","valDecCount","stepDecCount","decCount","parseInt","toFixed","pow","ZodNumber","gte","lte","setLimit","gt","lt","int","positive","negative","nonpositive","nonnegative","finite","safe","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","minValue","maxValue","isInt","ZodBigInt","BigInt","ZodBoolean","ZodDate","getTime","minDate","maxDate","ZodSymbol","ZodUndefined","ZodNull","ZodAny","_any","ZodUnknown","_unknown","ZodNever","never","ZodVoid","void","exactLength","deepPartialify","ZodObject","newShape","shape","fieldSchema","ZodTuple","_cached","nonstrict","passthrough","augment","extend","_getCached","shapeKeys","extraKeys","catchall","unknownKeys","keyValidator","strict","_c","strip","augmentation","merging","setKey","pick","mask","omit","deepPartial","partial","required","newField","keyof","createZodEnum","strictCreate","lazycreate","childCtx","getDiscriminator","ZodLazy","ZodLiteral","ZodEnum","ZodNativeEnum","ZodDiscriminatedUnion","discriminator","discriminatorValue","optionsMap","discriminatorValues","mergeValues","aType","bType","valid","bKeys","sharedKeys","newObj","sharedValue","newArray","handleParsed","parsedLeft","parsedRight","merged","itemIndex","schemas","ZodRecord","keySchema","keyType","valueSchema","valueType","third","ZodMap","finalMap","ZodSet","minSize","size","maxSize","finalizeSet","elements","parsedSet","ZodFunction","implement","makeArgsIssue","makeReturnsIssue","returns","me","parsedArgs","Reflect","parsedReturns","parameters","returnType","func","strictImplement","getter","expectedValues","enumValues","Values","Enum","extract","newDef","exclude","opt","WeakMap","nativeEnumValues","promisified","sourceType","checkCtx","arg","fatal","executeRefinement","acc","inner","base","createWithPreprocess","preprocess","removeDefault","newCtx","removeCatch","ZodNaN","BRAND","inResult","in","out","handleAsync","_fatal","p2","late","stringType","numberType","nanType","bigIntType","booleanType","dateType","symbolType","undefinedType","nullType","anyType","unknownType","neverType","voidType","arrayType","objectType","strictObjectType","unionType","discriminatedUnionType","intersectionType","tupleType","recordType","mapType","setType","functionType","lazyType","literalType","enumType","nativeEnumType","promiseType","effectsType","optionalType","nullableType","preprocessType","pipelineType","NEVER","z","defaultErrorMap","setErrorMap","EMPTY_PATH","ZodTransformer","Schema","ZodSchema","any","discriminatedUnion","instanceof","intersection","lazy","nativeEnum","oboolean","onumber","ostring","pipeline","record","strictObject","transformer","tuple","union","quotelessJson","textarea","textarea_value_value","insert_1","button0","button1","isOpen","title","if_block","create_if_block","t0","t0_value","container","log","dispatch","navigator","clipboard","writeText","alert","scrollIntoView","behavior","toggleVisibility","get_key","old_blocks","dynamic","list","destroy","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","updates","child_ctx","abs","will_move","did_move","new_block","old_block","new_key","old_key","label","logEntries","logsVisible","setEditor","closeAllOtherLogs","openedLogIndex","create_if_block_6","create_if_block_5","create_if_block_4","create_if_block_2","create_if_block_1","button2","button3","create_if_block_3","each_blocks","queryShowTables","labelEditor","labelResults","logger","db","sqlEditor","databaseError","editorError","editorLoaded","editorVisible","resultsVisible","formatEditor","showLog","executeQuery","substring","toLocaleTimeString","addLog","now","random","showTables","clearLog","handleExecuteButton","conditionFunction","everyMs","untilMs","tries","setInterval","clearInterval","waitUntil","getTodosResponse","userId","response","fetch","rawBody","ok","jsonBody","parseResult","parseError","todos","todo","seed","sqlEditorInitError","Theme","button","Dark","toggleTheme","isDark","Light","t1_value","ref","t5_value","actor","b1","b1_title_value","sha","a0","b0","a1","a2","b2","t1","t5","main","h1","div1","div0","buildInfo","info","loadBuildInfo","shortSha","linkCommit","linkBranch","linkActor","cssVarStyles","color"],"mappings":"gCAAA,SAASA,IAAU,CAkBnB,SAASC,EAAIC,GACT,OAAOA,GACX,CACA,SAASC,IACL,OAAOC,OAAOC,OAAO,KACzB,CACA,SAASC,EAAQC,GACbA,EAAIC,QAAQP,EAChB,CACA,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,CAClB,CACA,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,CAChF,CAgUA,SAASE,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,EACvB,CAoDA,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,KACxC,CASA,SAASE,EAAOL,GACRA,EAAKM,YACLN,EAAKM,WAAWC,YAAYP,EAEpC,CACA,SAASQ,EAAaC,EAAYC,GAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,GAAK,EACpCF,EAAWE,IACXF,EAAWE,GAAGE,EAAEH,EAE5B,CACA,SAASI,EAAQC,GACb,OAAOC,SAASC,cAAcF,EAClC,CAmBA,SAASG,EAAKC,GACV,OAAOH,SAASI,eAAeD,EACnC,CACA,SAASE,IACL,OAAOH,EAAK,IAChB,CACA,SAASI,IACL,OAAOJ,EAAK,GAChB,CAIA,SAASK,EAAOvB,EAAMwB,EAAOC,EAASC,GAElC,OADA1B,EAAK2B,iBAAiBH,EAAOC,EAASC,GAC/B,IAAM1B,EAAK4B,oBAAoBJ,EAAOC,EAASC,EAC1D,CAoCA,SAASG,EAAK7B,EAAM8B,EAAWC,GACd,MAATA,EACA/B,EAAKgC,gBAAgBF,GAChB9B,EAAKiC,aAAaH,KAAeC,GACtC/B,EAAKkC,aAAaJ,EAAWC,EACrC,CAsPA,SAASI,EAASjB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKC,OAASA,IAElBD,EAAKC,KAAOA,EAChB,CAyWA,IAAIiB,EACJ,SAASC,EAAsBC,GAC3BF,EAAoBE,CACxB,CACA,SAASC,IACL,IAAKH,EACD,MAAM,IAAII,MAAM,oDACpB,OAAOJ,CACX,CAoBA,SAASK,EAAQvD,GACbqD,IAAwBG,GAAGC,SAASC,KAAK1D,EAC7C,CAgCA,SAAS2D,IACL,MAAMP,EAAYC,IAClB,MAAO,CAACO,EAAMC,GAAUC,cAAa,GAAU,MAC3C,MAAMC,EAAYX,EAAUI,GAAGO,UAAUH,GACzC,GAAIG,EAAW,CAGX,MAAMzB,EArTlB,SAAsBsB,EAAMC,GAAQG,QAAEA,GAAU,EAAKF,WAAEA,GAAa,GAAU,IAC1E,MAAMG,EAAInC,SAASoC,YAAY,eAE/B,OADAD,EAAEE,gBAAgBP,EAAMI,EAASF,EAAYD,GACtCI,CACX,CAiT0BG,CAAaR,EAAMC,EAAQ,CAAEC,eAI3C,OAHAC,EAAUM,QAAQ/D,SAAQN,IACtBA,EAAGsE,KAAKlB,EAAWd,EAAM,KAErBA,EAAMiC,gBACjB,CACD,OAAO,CAAI,CAEnB,CAqDA,MAAMC,EAAmB,GAEnBC,EAAoB,GAC1B,IAAIC,EAAmB,GACvB,MAAMC,EAAkB,GAClBC,EAAmCC,QAAQC,UACjD,IAAIC,GAAmB,EACvB,SAASC,IACAD,IACDA,GAAmB,EACnBH,EAAiBK,KAAKC,GAE9B,CACA,SAASC,IAEL,OADAH,IACOJ,CACX,CACA,SAASQ,EAAoBpF,GACzB0E,EAAiBhB,KAAK1D,EAC1B,CACA,SAASqF,EAAmBrF,GACxB2E,EAAgBjB,KAAK1D,EACzB,CAmBA,MAAMsF,EAAiB,IAAIC,IAC3B,IAAIC,EAAW,EACf,SAASN,IAIL,GAAiB,IAAbM,EACA,OAEJ,MAAMC,EAAkBvC,EACxB,EAAG,CAGC,IACI,KAAOsC,EAAWhB,EAAiB9C,QAAQ,CACvC,MAAM0B,EAAYoB,EAAiBgB,GACnCA,IACArC,EAAsBC,GACtBsC,EAAOtC,EAAUI,GACpB,CACJ,CACD,MAAOS,GAIH,MAFAO,EAAiB9C,OAAS,EAC1B8D,EAAW,EACLvB,CACT,CAID,IAHAd,EAAsB,MACtBqB,EAAiB9C,OAAS,EAC1B8D,EAAW,EACJf,EAAkB/C,QACrB+C,EAAkBkB,KAAlBlB,GAIJ,IAAK,IAAIhD,EAAI,EAAGA,EAAIiD,EAAiBhD,OAAQD,GAAK,EAAG,CACjD,MAAMmE,EAAWlB,EAAiBjD,GAC7B6D,EAAeO,IAAID,KAEpBN,EAAeQ,IAAIF,GACnBA,IAEP,CACDlB,EAAiBhD,OAAS,CAClC,OAAa8C,EAAiB9C,QAC1B,KAAOiD,EAAgBjD,QACnBiD,EAAgBgB,KAAhBhB,GAEJI,GAAmB,EACnBO,EAAeS,QACf5C,EAAsBsC,EAC1B,CACA,SAASC,EAAOlC,GACZ,GAAoB,OAAhBA,EAAGwC,SAAmB,CACtBxC,EAAGkC,SACHtF,EAAQoD,EAAGyC,eACX,MAAMC,EAAQ1C,EAAG0C,MACjB1C,EAAG0C,MAAQ,EAAE,GACb1C,EAAGwC,UAAYxC,EAAGwC,SAASG,EAAE3C,EAAG4C,IAAKF,GACrC1C,EAAG6C,aAAa/F,QAAQ8E,EAC3B,CACL,CAyBA,MAAMkB,EAAW,IAAIf,IACrB,IAAIgB,EACJ,SAASC,IACLD,EAAS,CACLE,EAAG,EACHC,EAAG,GACHP,EAAGI,EAEX,CACA,SAASI,IACAJ,EAAOE,GACRrG,EAAQmG,EAAOG,GAEnBH,EAASA,EAAOJ,CACpB,CACA,SAASS,EAAcC,EAAOC,GACtBD,GAASA,EAAMpF,IACf6E,EAASS,OAAOF,GAChBA,EAAMpF,EAAEqF,GAEhB,CACA,SAASE,EAAeH,EAAOC,EAAO3F,EAAQyE,GAC1C,GAAIiB,GAASA,EAAMI,EAAG,CAClB,GAAIX,EAAST,IAAIgB,GACb,OACJP,EAASR,IAAIe,GACbN,EAAOG,EAAEhD,MAAK,KACV4C,EAASS,OAAOF,GACZjB,IACIzE,GACA0F,EAAMlF,EAAE,GACZiE,IACH,IAELiB,EAAMI,EAAEH,EACX,MACQlB,GACLA,GAER,CA4TA,SAASsB,EAAwBL,EAAOM,GACpCH,EAAeH,EAAO,EAAG,GAAG,KACxBM,EAAOJ,OAAOF,EAAMO,IAAI,GAEhC,CA4VA,SAASC,EAAKjE,EAAWvB,EAAM+D,GAC3B,MAAM0B,EAAQlE,EAAUI,GAAG+D,MAAM1F,QACnB2F,IAAVF,IACAlE,EAAUI,GAAGiE,MAAMH,GAAS1B,EAC5BA,EAASxC,EAAUI,GAAG4C,IAAIkB,IAElC,CACA,SAASI,EAAiBb,GACtBA,GAASA,EAAMH,GACnB,CAIA,SAASiB,EAAgBvE,EAAWvC,EAAQI,EAAQ2G,GAChD,MAAM5B,SAAEA,EAAQK,aAAEA,GAAiBjD,EAAUI,GAC7CwC,GAAYA,EAAS6B,EAAEhH,EAAQI,GAC1B2G,GAEDxC,GAAoB,KAChB,MAAM0C,EAAiB1E,EAAUI,GAAGC,SAASsE,IAAIhI,GAAKiI,OAAOzH,GAIzD6C,EAAUI,GAAGyE,WACb7E,EAAUI,GAAGyE,WAAWvE,QAAQoE,GAKhC1H,EAAQ0H,GAEZ1E,EAAUI,GAAGC,SAAW,EAAE,IAGlC4C,EAAa/F,QAAQ8E,EACzB,CACA,SAAS8C,EAAkB9E,EAAW5B,GAClC,MAAMgC,EAAKJ,EAAUI,GACD,OAAhBA,EAAGwC,YA9vBX,SAAgC3F,GAC5B,MAAM8H,EAAW,GACXC,EAAU,GAChB1D,EAAiBpE,SAASoG,IAA0B,IAApBrG,EAAIgI,QAAQ3B,GAAYyB,EAASzE,KAAKgD,GAAK0B,EAAQ1E,KAAKgD,KACxF0B,EAAQ9H,SAASoG,GAAMA,MACvBhC,EAAmByD,CACvB,CAyvBQG,CAAuB9E,EAAG6C,cAC1BjG,EAAQoD,EAAGyE,YACXzE,EAAGwC,UAAYxC,EAAGwC,SAASrE,EAAEH,GAG7BgC,EAAGyE,WAAazE,EAAGwC,SAAW,KAC9BxC,EAAG4C,IAAM,GAEjB,CASA,SAASmC,EAAKnF,EAAWZ,EAASgG,EAAUC,EAAiBC,EAAWnB,EAAOoB,EAAezC,EAAQ,EAAE,IACpG,MAAM0C,EAAmB1F,EACzBC,EAAsBC,GACtB,MAAMI,EAAKJ,EAAUI,GAAK,CACtBwC,SAAU,KACVI,IAAK,GAELmB,QACA7B,OAAQ5F,EACR4I,YACAjB,MAAOxH,IAEPwD,SAAU,GACVwE,WAAY,GACZY,cAAe,GACf5C,cAAe,GACfI,aAAc,GACdyC,QAAS,IAAIC,IAAIvG,EAAQsG,UAAYF,EAAmBA,EAAiBpF,GAAGsF,QAAU,KAEtF/E,UAAW9D,IACXiG,QACA8C,YAAY,EACZC,KAAMzG,EAAQ3B,QAAU+H,EAAiBpF,GAAGyF,MAEhDN,GAAiBA,EAAcnF,EAAGyF,MAClC,IAAIC,GAAQ,EAkBZ,GAjBA1F,EAAG4C,IAAMoC,EACHA,EAASpF,EAAWZ,EAAQ+E,OAAS,CAAE,GAAE,CAAC9F,EAAG0H,KAAQC,KACnD,MAAMvG,EAAQuG,EAAK1H,OAAS0H,EAAK,GAAKD,EAOtC,OANI3F,EAAG4C,KAAOsC,EAAUlF,EAAG4C,IAAI3E,GAAI+B,EAAG4C,IAAI3E,GAAKoB,MACtCW,EAAGwF,YAAcxF,EAAGiE,MAAMhG,IAC3B+B,EAAGiE,MAAMhG,GAAGoB,GACZqG,GAxCpB,SAAoB9F,EAAW3B,IACI,IAA3B2B,EAAUI,GAAG0C,MAAM,KACnB1B,EAAiBd,KAAKN,GACtB4B,IACA5B,EAAUI,GAAG0C,MAAMmD,KAAK,IAE5BjG,EAAUI,GAAG0C,MAAOzE,EAAI,GAAM,IAAO,GAAMA,EAAI,EACnD,CAkCoB6H,CAAWlG,EAAW3B,IAEvB0H,CAAG,IAEZ,GACN3F,EAAGkC,SACHwD,GAAQ,EACR9I,EAAQoD,EAAGyC,eAEXzC,EAAGwC,WAAWyC,GAAkBA,EAAgBjF,EAAG4C,KAC/C5D,EAAQ3B,OAAQ,CAChB,GAAI2B,EAAQ+G,QAAS,CAEjB,MAAMC,EAvhDlB,SAAkB5H,GACd,OAAO6H,MAAMC,KAAK9H,EAAQ+H,WAC9B,CAqhD0BC,CAASpH,EAAQ3B,QAE/B2C,EAAGwC,UAAYxC,EAAGwC,SAAS6D,EAAEL,GAC7BA,EAAMlJ,QAAQa,EACjB,MAGGqC,EAAGwC,UAAYxC,EAAGwC,SAASU,IAE3BlE,EAAQsH,OACRlD,EAAcxD,EAAUI,GAAGwC,UAC/B2B,EAAgBvE,EAAWZ,EAAQ3B,OAAQ2B,EAAQvB,OAAQuB,EAAQoF,eAEnE1C,GACH,CACD/B,EAAsByF,EAC1B,CAoDA,MAAMmB,EACF,QAAAC,GACI9B,EAAkB+B,KAAM,GACxBA,KAAKD,SAAWlK,CACnB,CACD,GAAAoK,CAAItG,EAAMgC,GACN,IAAKrF,EAAYqF,GACb,OAAO9F,EAEX,MAAMiE,EAAakG,KAAKzG,GAAGO,UAAUH,KAAUqG,KAAKzG,GAAGO,UAAUH,GAAQ,IAEzE,OADAG,EAAUL,KAAKkC,GACR,KACH,MAAM0B,EAAQvD,EAAUsE,QAAQzC,IACjB,IAAX0B,GACAvD,EAAUoG,OAAO7C,EAAO,EAAE,CAErC,CACD,IAAA8C,CAAKC,GAhrET,IAAkBC,EAirENL,KAAKM,QAjrECD,EAirEkBD,EAhrEG,IAA5BnK,OAAOsK,KAAKF,GAAK5I,UAirEhBuI,KAAKzG,GAAGwF,YAAa,EACrBiB,KAAKM,MAAMF,GACXJ,KAAKzG,GAAGwF,YAAa,EAE5B,EC7tEE,SAASyB,EAAaC,GAC3B,MAAwB,gBAApBA,EAAIC,aAAqD,iBAApBD,EAAIC,YACpC,IAAIC,OAAO,IAGhBF,EAAIG,QACC,KAGF,IAAID,OAAOF,EAAII,SACxB,CAKO,SAASC,EAAeL,GAC7B,MAA2B,gBAApBA,EAAIC,aAAqD,iBAApBD,EAAIC,WAClD,CCnBe,MAAMK,EACnB,WAAAC,CAAYC,GACVjB,KAAKiB,OAASA,EACdjB,KAAK3C,MAAQ,CACd,CAMD,GAAA6D,EAAI/D,IACFA,EAAGpF,KACHA,IAEA,OAAKiI,KAAKiB,OAIN9D,EACK6C,KAAKiB,OAAO9D,GAGd6C,KAAKiB,OAAOjB,KAAK3C,SAPftF,CAQV,CAMD,2BAAAoJ,GACE,OAAOnB,KAAK3C,KACb,CAMD,2BAAA+D,CAA4B5J,GAC1BwI,KAAK3C,MAAQ7F,CACd,kLC1CF,IAASwH,EAAMqC,EAANrC,EAMRgB,EANcqB,EAMR,WAEJ,SAASC,EAAK1J,EAAM2J,EAASC,GAKzB,OAJAxB,KAAKyB,KAAOH,EAAKI,UACjB1B,KAAKpI,KAAOA,EACZoI,KAAKuB,QAAUA,EACfvB,KAAKwB,YAAcA,EACZxB,IACV,CAcD,SAAS2B,EAAMC,EAAMC,EAAKC,EAAWC,GACjC/B,KAAK4B,KAAOA,EACZ5B,KAAK6B,IAAMA,EACX7B,KAAK8B,UAAYA,EACjB9B,KAAKhI,KAAO,GACZgI,KAAK+B,SAAWA,EAChB/B,KAAKgC,WAAahC,KAAK6B,MAAQD,EAAKL,QAAQ9J,MAC/C,CAqCD,SAASwK,EAAOC,EAAS7E,GACrB2C,KAAKkC,QAAUA,EACflC,KAAK3C,MAAQA,EACb2C,KAAKmC,OAAS,GACdnC,KAAKoC,MAAQ,GACbpC,KAAKqC,UAAY,GACjBrC,KAAKsC,UAAY,EACpB,CAyED,SAASC,EAAQC,EAAOC,GACpBzC,KAAKwC,MAAQA,EACbxC,KAAKyC,MAAQA,GAASzC,KAAKwC,MAAM,GAAG5K,KACpC,IAAI8K,EAAS1C,KAAK0C,OAAS,GAC3B1C,KAAKwC,MAAMnM,SAAQ,SAASuL,GACnBc,EAAOC,eAAef,EAAKhK,QAC5B8K,EAAOd,EAAKhK,MAAQ,IAExB8K,EAAOd,EAAKhK,MAAM6B,KAAKmI,EACnC,GACK,CAgBD,SAASgB,IACP5C,KAAK6C,MAAM,GACZ,CA6DD,SAASC,EAAON,EAAOC,EAAOlK,GAC1B,GAAIiK,aAAiBD,EACjB,KAAIL,EAAUM,EACVjK,EAAUkK,CADK,MAGfP,EAAUK,EAAQQ,aAAaP,EAAOC,GAS9C,IAAK,IAAItF,KAPT6C,KAAKkC,QAAUA,EAGflC,KAAKzH,QAAU,CACXyK,aAAa,EACbC,MAAOf,EAAQe,OAAS,IAAIL,GAEfrK,GAAW,GACxByH,KAAKzH,QAAQ4E,GAAO5E,EAAQ4E,GAIhC6C,KAAKiD,MAAQjD,KAAKzH,QAAQ0K,MAC1BjD,KAAKkD,gBAAa3F,EAGlB,IAAI4F,EAAS,IAAIlB,EAAOC,EAAS,GACrBlC,KAAKoD,MAAQ,CAACD,GAG1BA,EAAOf,MAAMF,EAAQO,OAAS,GAC9BU,EAAOE,QAAQnB,EAAQO,OAEvBU,EAAOG,UACPtD,KAAKuD,QAAU,CAClB,CAyQD,SAASC,EAAsBC,GAC3B,IAAI9J,SAAc8J,EAClB,GAAa,WAAT9J,EACA,OAAO8J,EACJ,GAAa,WAAT9J,EAAmB,CAC1B,GAAI8J,EAAOC,QACP,OAAOC,KAAKC,UAAUH,EAAOC,SAC1B,GAAID,aAAkBI,OACzB,OAAOJ,EAAOK,WACX,GAAIL,EAAO9J,KACd,MAAO,IAAM8J,EAAO9J,KACjB,GAAI8J,EAAOM,KACd,MAAO,IAAMC,OAAOP,EAAOM,MAAQ,IAEnC,MAAM,IAAI1K,MAAM,wBAA0BoK,EAEjD,CACJ,CAED,OA9hBAnC,EAAKI,UAAY,EAEjBJ,EAAK2C,UAAUH,SAAW,SAASI,GAC/B,IAAIC,OAA0C,IAAjBD,EACNlE,KAAKuB,QAAQzD,IAAI0F,GAAuBY,KAAK,KACzCpE,KAAKuB,QAAQnH,MAAM,EAAG8J,GAAcpG,IAAI0F,GAAuBY,KAAK,KACpE,MACApE,KAAKuB,QAAQnH,MAAM8J,GAAcpG,IAAI0F,GAAuBY,KAAK,KAC5F,OAAOpE,KAAKpI,KAAO,MAAQuM,CAC9B,EAaDxC,EAAMsC,UAAUH,SAAW,WACvB,MAAO,IAAM9D,KAAK4B,KAAKkC,SAAS9D,KAAK6B,KAAO,aAAe7B,KAAK8B,WAAa,EACrF,EAEIH,EAAMsC,UAAUI,UAAY,SAASC,GACjC,IAAIC,EAAQ,IAAI5C,EAAM3B,KAAK4B,KAAM5B,KAAK6B,IAAM,EAAG7B,KAAK8B,UAAW9B,KAAK+B,UASpE,OARAwC,EAAMC,KAAOxE,KACbuE,EAAME,MAAQH,EACVC,EAAMvC,aACNuC,EAAMvM,KAAOuM,EAAMG,QAGnBH,EAAME,WAAQlH,GAEXgH,CACf,EAEI5C,EAAMsC,UAAUS,MAAQ,WACpB,IAAI/E,EAAW,GACX9I,EAAOmJ,KACX,GACIL,EAASlG,KAAK5C,EAAK4N,MAAMzM,MACzBnB,EAAOA,EAAK2N,WACP3N,EAAK2N,MAEd,OADA7E,EAASgF,UACFhF,CACf,EAEIgC,EAAMsC,UAAUW,OAAS,WACjB5E,KAAK4B,KAAKJ,cACVxB,KAAKhI,KAAOgI,KAAK4B,KAAKJ,YAAYxB,KAAKhI,KAAMgI,KAAK8B,UAAWgB,EAAO+B,MAEhF,EAaI5C,EAAOgC,UAAUX,QAAU,SAASwB,GAKhC,IAJA,IAAI3C,EAASnC,KAAKmC,OACdC,EAAQpC,KAAKoC,MACbE,EAAYtC,KAAKsC,UAEZyC,EAAI,EAAGA,EAAI5C,EAAO1K,OAAQsN,IAAK,CACpC,IAAIR,EAAQpC,EAAO4C,GAEnB,GAAIR,EAAMvC,YAEN,GADAuC,EAAMK,SACFL,EAAMvM,OAAS8K,EAAO+B,KAAM,CAG5B,IADA,IAAI9C,EAAWwC,EAAMxC,SACZvK,EAAIuK,EAAStK,OAAQD,KAAO,CACjC,IAAIgN,EAAOzC,EAASvK,GACpBwI,KAAKgF,SAASR,EAAMD,EACvB,CAGD,GAAIA,EAAMzC,YAAc9B,KAAK3C,MAAO,CAEhC,IAAI4H,EAAMV,EAAM3C,KAAKhK,MACpBoI,KAAKsC,UAAU2C,GAAOjF,KAAKsC,UAAU2C,IAAQ,IAAIxL,KAAK8K,EAC1D,CACJ,MAEE,CAGH,GAAmB,iBADfU,EAAMV,EAAM3C,KAAKL,QAAQgD,EAAM1C,MACN,CACzB7B,KAAKqC,UAAU5I,KAAK8K,GACpB,QACH,CAGD,GAAInC,EAAM6C,IAGN,GAFA7C,EAAM6C,GAAKxL,KAAK8K,GAEZjC,EAAUK,eAAesC,GACzB,KAAIC,EAAQ5C,EAAU2C,GACtB,IAASzN,EAAI,EAAGA,EAAI0N,EAAMzN,OAAQD,IAAK,CACnC,IAAIiN,EAAQS,EAAM1N,GAClBwI,KAAKgF,SAAST,EAAOE,EACxB,CAJyB,OAO9BrC,EAAM6C,GAAO,CAACV,GACdvE,KAAKqD,QAAQ4B,EAEpB,CACJ,CACJ,EAEDhD,EAAOgC,UAAUZ,QAAU,SAAS4B,GAGhC,IAFA,IAAIzC,EAAQxC,KAAKkC,QAAQQ,OAAOuC,IAAQ,GAE/BzN,EAAI,EAAGA,EAAIgL,EAAM/K,OAAQD,IAAK,CACnC,IAAIgF,EAAIgG,EAAMhL,GACVuK,EAAW/B,KAAKoC,MAAM6C,GACtBE,EAAI,IAAIxD,EAAMnF,EAAG,EAAGwD,KAAK3C,MAAO0E,GACpC/B,KAAKmC,OAAO1I,KAAK0L,EACpB,CACJ,EAEDlD,EAAOgC,UAAUe,SAAW,SAASR,EAAMC,GACvC,IAAIW,EAAOZ,EAAKH,UAAUI,GAC1BzE,KAAKmC,OAAO1I,KAAK2L,EACpB,EAgBD7C,EAAQQ,aAAe,SAASP,EAAOC,GACnC,IAAIQ,EAAQT,EAAM6C,MACd7C,EAAM8C,cACR7C,EAAQD,EAAM8C,YACd9C,EAAQA,EAAM+C,aAEhB,IACIC,EAAI,IAAIjD,EADRC,EAAQA,EAAM1E,KAAI,SAAUtB,GAAK,OAAA,IAAY8E,EAAK9E,EAAE5E,KAAM4E,EAAE+E,QAAS/E,EAAEgF,YAAc,IAC9DiB,GAE3B,OADA+C,EAAEvC,MAAQA,EACHuC,CACV,EAOD5C,EAAYqB,UAAUpB,MAAQ,SAAS7K,EAAMuM,GACzCvE,KAAKyF,OAASzN,EACdgI,KAAK3C,MAAQ,EACb2C,KAAK0F,KAAOnB,EAAQA,EAAMmB,KAAO,EACjC1F,KAAK2F,cAAgBpB,GAASA,EAAMqB,IAAM,CAC7C,EAEDhD,EAAYqB,UAAU4B,KAAO,WACzB,GAAI7F,KAAK3C,MAAQ2C,KAAKyF,OAAOhO,OAAQ,CACjC,IAAIqO,EAAK9F,KAAKyF,OAAOzF,KAAK3C,SAK1B,MAJW,OAAPyI,IACF9F,KAAK0F,MAAQ,EACb1F,KAAK2F,cAAgB3F,KAAK3C,OAErB,CAACzE,MAAOkN,EAClB,CACJ,EAEDlD,EAAYqB,UAAU8B,KAAO,WAC3B,MAAO,CACLL,KAAM1F,KAAK0F,KACXE,IAAK5F,KAAK3C,MAAQ2C,KAAK2F,cAE1B,EAED/C,EAAYqB,UAAU+B,YAAc,SAASC,EAAOC,GAGhD,IAAIT,EAASzF,KAAKyF,OAClB,GAAsB,iBAAXA,EAAqB,CAC5B,IAAIU,EAAQV,EACPW,MAAM,MACNhM,MACGiM,KAAKC,IAAI,EAAGtG,KAAK0F,KAAO,GACxB1F,KAAK0F,MAGTa,EAAgBd,EAAOrH,QAAQ,KAAM4B,KAAK3C,QACvB,IAAnBkJ,IAAsBA,EAAgBd,EAAOhO,QACjD,IAAImO,EAAM5F,KAAK3C,MAAQ2C,KAAK2F,cACxBa,EAAiBxC,OAAOhE,KAAK0F,MAAMjO,OAQvC,OAPAyO,GAAW,YAAclG,KAAK0F,KAAO,QAAUE,EAAM,QACrDM,GAAWC,EACNrI,KAAI,SAAS4H,EAAMlO,GAChB,OAAOiP,EAAIzG,KAAK0F,KAAOS,EAAM1O,OAASD,EAAI,EAAGgP,GAAkB,IAAMd,CACxE,GAAE1F,MACFoE,KAAK,MACV8B,GAAW,KAAOO,EAAI,GAAID,EAAiBZ,GAAO,KAE9D,CACY,OAAOM,EAAU,cAAgBlG,KAAK3C,MAAQ,GAGlD,SAASoJ,EAAIC,EAAGjP,GACZ,IAAI0N,EAAInB,OAAO0C,GACf,OAAOlH,MAAM/H,EAAS0N,EAAE1N,OAAS,GAAG2M,KAAK,KAAOe,CACnD,CACJ,EAqCDrC,EAAO+B,KAAO,GAEd/B,EAAOmB,UAAU0C,KAAO,SAASC,GAC7B,IAGIX,EAHAhD,EAAQjD,KAAKiD,MAIjB,IAHAA,EAAMJ,MAAM+D,EAAO5G,KAAKkD,cAGX,CACT,IAEI,KADA+C,EAAQhD,EAAM4C,QAEV,KAEP,CAAC,MAAO7L,GAGL,IAAI8K,EAAa,IAAI7C,EAAOjC,KAAKkC,QAASlC,KAAKuD,QAAU,GAKzD,MAJAvD,KAAKoD,MAAM3J,KAAKqL,IACZ+B,EAAM,IAAIxN,MAAM2G,KAAK8G,iBAAiB9M,KACtC+M,OAAS/G,KAAKuD,QAClBsD,EAAIZ,MAAQjM,EAAEiM,MACRY,CACT,CAED,IAAI1D,EAASnD,KAAKoD,MAAMpD,KAAKuD,SAGxBvD,KAAKzH,QAAQyK,oBACPhD,KAAKoD,MAAMpD,KAAKuD,QAAU,GAGrC,IAAImD,EAAI1G,KAAKuD,QAAU,EACnBuB,EAAa,IAAI7C,EAAOjC,KAAKkC,QAASwE,GAC1C1G,KAAKoD,MAAM3J,KAAKqL,GAMhB,IAHA,IA8BQ+B,EA9BJnD,OAAyBnG,IAAf0I,EAAMlO,KAAqBkO,EAAMlO,KAAOkO,EAAMrN,MACxDA,EAAQqK,EAAMjC,cAAgB4B,EAAcqD,EAAMrN,MAAQqN,EAC1D5D,EAAYc,EAAOd,UACd0C,EAAI1C,EAAU5K,OAAQsN,KAAO,CAClC,IAAIR,EAAQlC,EAAU0C,GAClBiC,EAASzC,EAAM3C,KAAKL,QAAQgD,EAAM1C,KAGtC,GAAImF,EAAOjD,KAAOiD,EAAOjD,KAAKnL,GAC1BoO,EAAOrN,KAAOqN,EAAOrN,OAASsM,EAAMtM,KACtBqN,EAAOtD,UAAYA,EAAS,CAE1C,IAAImC,EAAOtB,EAAMF,UAAU,CAACrM,KAAMY,EAAOqN,MAAOA,EAAOgB,SAAS,EAAMnF,UAAW4E,EAAI,IACrF5B,EAAW3C,OAAO1I,KAAKoM,EAC1B,CACJ,CAaD,GAHAf,EAAWxB,UAGsB,IAA7BwB,EAAW3C,OAAO1K,OAKlB,MAHIoP,EAAM,IAAIxN,MAAM2G,KAAKkH,YAAYjB,KACjCc,OAAS/G,KAAKuD,QAClBsD,EAAIZ,MAAQA,EACNY,EAIN7G,KAAKzH,QAAQyK,cACfG,EAAOD,WAAaD,EAAM8C,QAG5B/F,KAAKuD,SACR,CASD,OARIJ,IACFnD,KAAKkD,WAAaD,EAAM8C,QAI1B/F,KAAKmH,QAAUnH,KAAK4E,SAGb5E,IACf,EAEI8C,EAAOmB,UAAU6C,iBAAmB,SAASM,GACzC,IAAIC,EAAcC,EAGdrB,EAAQmB,EAAWnB,MAQvB,OAPIA,GACAoB,EAAe,SAAW1D,KAAKC,UAAUqC,EAAMlO,KAAK,IAAM,iBAC1DuP,EAAetH,KAAKiD,MAAM+C,YAAYC,EAAO,kBAE7CoB,EAAe,sBACfC,EAAeF,EAAWlB,SAEvBlG,KAAKuH,kBAAkBD,EAAcD,EACpD,EAEIvE,EAAOmB,UAAUiD,YAAc,SAASjB,GACpC,IAAIoB,GAAgBpB,EAAMtM,KAAOsM,EAAMtM,KAAO,WAAa,IAAMgK,KAAKC,eAA0BrG,IAAhB0I,EAAMrN,MAAsBqN,EAAMrN,MAAQqN,GACtHqB,EAAetH,KAAKiD,MAAM+C,YAAYC,EAAO,gBACjD,OAAOjG,KAAKuH,kBAAkBD,EAAcD,EACpD,EAEIvE,EAAOmB,UAAUsD,kBAAoB,SAASD,EAAcD,GACxD,IAAIlB,EAAQ,GACZA,EAAM1M,KAAK6N,GACX,IAAIE,EAAkBxH,KAAKoD,MAAM3L,OAAS,EACtCgQ,EAAazH,KAAKoD,MAAMoE,GACxBE,EAAkBD,EAAWtF,OAC5BpE,QAAO,SAASwG,GACb,IAAIoD,EAAapD,EAAM3C,KAAKL,QAAQgD,EAAM1C,KAC1C,OAAO8F,GAAoC,iBAAfA,CAC5C,IAwBQ,OAtB+B,IAA3BD,EAAgBjQ,QAChB0O,EAAM1M,KAAK,cAAgB4N,EAAe,6EAC1CrH,KAAK4H,kBAAkBH,EAAWtF,OAAQgE,KAE1CA,EAAM1M,KAAK,cAAgB4N,EAAe,6DAIxBK,EACb5J,KAAI,SAASyG,GACV,OAAOvE,KAAK6H,qBAAqBtD,EAAO,KAAO,CAACA,EACnD,GAAEvE,MAEK3J,SAAQ,SAASyR,GACzB,IAAIvD,EAAQuD,EAAW,GACnBH,EAAapD,EAAM3C,KAAKL,QAAQgD,EAAM1C,KACtCkG,EAAgB/H,KAAKgI,iBAAiBL,GAC1CxB,EAAM1M,KAAK,KAAOsO,EAAgB,cAClC/H,KAAK4H,kBAAkBE,EAAY3B,EACtC,GAAEnG,OAEPmG,EAAM1M,KAAK,IACJ0M,EAAM/B,KAAK,KACrB,EAEDtB,EAAOmB,UAAU2D,kBAAoB,SAASE,EAAY3B,GAGtD,IAFA,IAAI8B,EACAC,EAAmB,EACdC,EAAI,EAAGA,EAAIL,EAAWrQ,OAAQ0Q,IAAK,CACxC,IAAI5D,EAAQuD,EAAWK,GACnBC,EAAU7D,EAAM3C,KAAKkC,SAASS,EAAM1C,KACpCuG,IAAYH,EACZC,KAEIA,EAAmB,GACnB/B,EAAM1M,KAAK,SAAWyO,EAAmB,iCAE7CA,EAAmB,EACnB/B,EAAM1M,KAAK,OAAS2O,IAExBH,EAAcG,CACjB,CACT,EAEItF,EAAOmB,UAAU+D,iBAAmB,SAASvE,GACzC,OA4EJ,SAA8BA,GAC1B,IAAI9J,SAAc8J,EAClB,GAAa,WAAT9J,EACA,OAAO8J,EACJ,GAAa,WAAT9J,EAAmB,CAC1B,GAAI8J,EAAOC,QACP,OAAOC,KAAKC,UAAUH,EAAOC,SAC1B,GAAID,aAAkBI,OACzB,MAAO,sBAAwBJ,EAC5B,GAAIA,EAAO9J,KACd,OAAO8J,EAAO9J,KAAO,SAClB,GAAI8J,EAAOM,KACd,MAAO,kBAAoBC,OAAOP,EAAOM,MAEzC,MAAM,IAAI1K,MAAM,wBAA0BoK,EAEjD,CACJ,CA7FU4E,CAAqB5E,EACpC,EAaIX,EAAOmB,UAAU4D,qBAAuB,SAAStD,EAAO+D,GACpD,IAAgC,IAA5BA,EAAQlK,QAAQmG,GAIhB,OAAO,KAEX,GAA8B,IAA1BA,EAAMxC,SAAStK,OACf,MAAO,CAAC8M,GAEZ,IAAIgE,EAAYhE,EAAMxC,SAAS,GAC3ByG,EAAe,CAACjE,GAAOkE,OAAOH,GAC9BI,EAAc1I,KAAK6H,qBAAqBU,EAAWC,GACvD,OAAoB,OAAhBE,EACO,KAEJ,CAACnE,GAAOkE,OAAOC,EAC9B,EAEI5F,EAAOmB,UAAU8B,KAAO,WACpB,IAAI5C,EAASnD,KAAKoD,MAAMpD,KAAKuD,SAE7B,OADAJ,EAAOD,WAAalD,KAAKkD,WAClBC,CACf,EAEIL,EAAOmB,UAAU0E,QAAU,SAASxF,GAChC,IAAI9F,EAAQ8F,EAAO9F,MACnB2C,KAAKuD,QAAUlG,EACf2C,KAAKoD,MAAM/F,GAAS8F,EACpBnD,KAAKoD,MAAMlD,OAAO7C,EAAQ,GAC1B2C,KAAKkD,WAAaC,EAAOD,WAGzBlD,KAAKmH,QAAUnH,KAAK4E,QAC5B,EAGI9B,EAAOmB,UAAU2E,OAAS,SAASvL,GAC/B,IAAK2C,KAAKzH,QAAQyK,YACd,MAAM,IAAI3J,MAAM,gDAIpB2G,KAAK2I,QAAQ3I,KAAKoD,MAAM/F,GAChC,EAEIyF,EAAOmB,UAAUW,OAAS,WAEtB,IAAIiE,EAAiB,GACjBpG,EAAQzC,KAAKkC,QAAQO,MAUzB,OATazC,KAAKoD,MAAMpD,KAAKoD,MAAM3L,OAAS,GACrC0K,OAAO9L,SAAQ,SAAUyS,GACxBA,EAAElH,KAAKhK,OAAS6K,GACTqG,EAAEjH,MAAQiH,EAAElH,KAAKL,QAAQ9J,QACT,IAAhBqR,EAAEhH,WACFgH,EAAE9Q,OAAS8K,EAAO+B,MACzBgE,EAAepP,KAAKqP,EAEpC,IACeD,EAAe/K,KAAI,SAASrB,GAAI,OAAOA,EAAEzE,IAAK,GAC7D,EAwCW,CACH8K,OAAQA,EACRP,QAASA,EACTjB,KAAMA,EAGd,EAljBsCyH,EAAOC,QACrCD,EAAAC,QAAiB3H,IAEjBrC,EAAKiK,QAAU5H,+CCHhB,IAAI6H,IAGX,SAAWA,GACTA,EAA6B,kBAAI,oBACjCA,EAAsB,WAAI,aAC1BA,EAAkB,OAAI,SACtBA,EAAoB,SAAI,WACxBA,EAA4B,iBAAI,mBAChCA,EAAkC,uBAAI,yBACtCA,EAA2B,gBAAI,kBAC/BA,EAAkC,uBAAI,yBACtCA,EAA2B,gBAAI,kBAC/BA,EAA2B,gBAAI,kBAC/BA,EAAyB,cAAI,gBAC7BA,EAA4B,iBAAI,mBAChCA,EAAyB,cAAI,gBAC7BA,EAAgB,KAAI,OACpBA,EAAe,IAAI,MACnBA,EAAgB,KAAI,OACpBA,EAAgB,KAAI,OACpBA,EAAgB,KAAI,OACpBA,EAAiB,MAAI,QACrBA,EAAmB,QAAI,UACvBA,EAAe,IAAI,MACnBA,EAAc,GAAI,KAClBA,EAAe,IAAI,MACnBA,EAAoB,SAAI,WACxBA,EAAiB,MAAI,QACrBA,EAAoB,SAAI,WACxBA,EAAe,IAAI,MACnBA,EAAsB,WAAI,aAC1BA,EAAuB,YAAI,cAC3BA,EAAwB,aAAI,eAC5BA,EAAyB,cAAI,gBAC7BA,EAAkB,OAAI,SACtBA,EAA2B,gBAAI,kBAC/BA,EAA4B,iBAAI,mBAChCA,EAA8B,mBAAI,qBAClCA,EAAgC,qBAAI,uBACpCA,EAAqB,UAAI,YACzBA,EAAe,IAAI,KACpB,CAvCD,CAuCGA,KAAcA,GAAY,CAAE,IAGxB,MAAMC,GAAiB9L,IAAU,CACtC1D,KAAMuP,GAAUE,IAChBC,IAAK,QACLtR,KAAM,QACN0K,MAAOpF,IAOIiM,GAAYH,GAAeI,KAG3BC,GAAYC,GAAgBxD,GAASA,EAAMtM,OAAS8P,EAAa9P,MAAQsM,EAAMlO,OAAS0R,EAAa1R,KAGrGkP,GAAU,CACrByC,MAAOF,GAAU,CACfzR,KAAM,QACN4B,KAAMuP,GAAUS,mBAElBC,GAAIJ,GAAU,CACZzR,KAAM,KACN4B,KAAMuP,GAAUS,mBAElBE,IAAKL,GAAU,CACbzR,KAAM,MACN4B,KAAMuP,GAAUY,kBAElBC,OAAQP,GAAU,CAChBzR,KAAM,SACN4B,KAAMuP,GAAUS,mBAElBK,OAAQR,GAAU,CAChBzR,KAAM,SACN4B,KAAMuP,GAAUY,mBAKPG,GAAatQ,GAAQA,IAASuP,GAAUS,kBAAoBhQ,IAASuP,GAAUgB,wBAA0BvQ,IAASuP,GAAUiB,iBAAmBxQ,IAASuP,GAAUY,iBAAmBnQ,IAASuP,GAAUkB,iBAAmBzQ,IAASuP,GAAUmB,wBAA0B1Q,IAASuP,GAAUoB,eAAiB3Q,IAASuP,GAAUqB,eAAiB5Q,IAASuP,GAAUsB,MAAQ7Q,IAASuP,GAAUuB,KAAO9Q,IAASuP,GAAUwB,MAAQ/Q,IAASuP,GAAUyB,MAAQhR,IAASuP,GAAU0B,MAAQjR,IAASuP,GAAU2B,OAASlR,IAASuP,GAAU4B,SAAWnR,IAASuP,GAAU6B,KAAOpR,IAASuP,GAAU8B,IAAMrR,IAASuP,GAAU+B,ICpEnmB,MAAMC,GAAoB,CAACjF,EAAOzO,EAAG2T,KACnC,GAAIlB,GAAWhE,EAAMtM,MAAO,CAC1B,MAAMyR,EAAYC,GAAoBF,EAAQ3T,GAE9C,GAAI4T,GAAgC,MAAnBA,EAAUrT,KACzB,MAAO,IAAKkO,EACVtM,KAAMuP,GAAUoC,WAChBvT,KAAMkO,EAAMoD,IAGjB,CAED,OAAOpD,CAAK,EAGRsF,GAAoB,CAACtF,EAAOzO,EAAG2T,KACnC,GAAIlF,EAAMtM,OAASuP,GAAUgB,uBAAwB,CACnD,MAAMsB,EAAYC,GAAoBN,EAAQ3T,GAE9C,IAAKgU,IAAcE,GAAYF,GAC7B,MAAO,IAAKvF,EACVtM,KAAMuP,GAAUS,iBAGrB,CAED,OAAO1D,CAAK,EAGR0F,GAAoB,CAAC1F,EAAOzO,EAAG2T,KACnC,GAAIlF,EAAMtM,OAASuP,GAAUoC,WAAY,CACvC,MAAME,EAAYC,GAAoBN,EAAQ3T,GAE9C,GAAIgU,GAAaI,GAAcJ,GAC7B,MAAO,IAAKvF,EACVtM,KAAMuP,GAAU2C,iBAGrB,CAED,OAAO5F,CAAK,EAGR6F,GAAwB,CAAC7F,EAAOzO,EAAG2T,KACvC,GAAIlF,EAAMtM,OAASuP,GAAUS,iBAAkB,CAC7C,MAAM6B,EAAYC,GAAoBN,EAAQ3T,GAE9C,GAAIgU,GAAaI,GAAcJ,GAC7B,MAAO,IAAKvF,EACVtM,KAAMuP,GAAUqB,cAGrB,CAED,OAAOtE,CAAK,EAGRoF,GAAsB,CAACF,EAAQ9N,IAAUoO,GAAoBN,EAAQ9N,GAAQ,GAE7EoO,GAAsB,CAACN,EAAQ9N,EAAO0O,EAAM,KAChD,IAAIvU,EAAI,EAER,KAAO2T,EAAO9N,EAAQ7F,EAAIuU,IAAQC,GAAUb,EAAO9N,EAAQ7F,EAAIuU,KAC7DvU,IAGF,OAAO2T,EAAO9N,EAAQ7F,EAAIuU,EAAI,EAG1BL,GAAc5C,GAAKA,EAAEnP,OAASuP,GAAU+C,YAAyB,MAAXnD,EAAE/Q,KAExD6T,GAAgB9C,GAAKA,EAAEnP,OAASuP,GAAU+C,YAAyB,MAAXnD,EAAE/Q,KAE1DiU,GAAYlD,GAAKA,EAAEnP,OAASuP,GAAUgD,eAAiBpD,EAAEnP,OAASuP,GAAUiD,aCzF3E,SAASC,GAAiBC,EAAQhP,GACvC,MAAM8I,EAAQkG,EAAOjS,MAAM,EAAGiD,GAAO+I,MAAM,MAC3C,MAAO,CACLV,KAAMS,EAAM1O,OACZmO,IAAKO,EAAMA,EAAM1O,OAAS,GAAGA,OAAS,EAE1C,CCLe,MAAM6U,GACnBjP,MAAQ,EACR8N,OAAS,GACToB,MAAQ,GAER,WAAAvL,CAAYwL,GACVxM,KAAKwM,SAAWA,CACjB,CAED,KAAA3J,CAAM+D,EAAO6F,GACXzM,KAAKuM,MAAQ3F,EACb5G,KAAK3C,MAAQ,EACb2C,KAAKmL,OAASnL,KAAKwM,SAAS5F,EAC7B,CAED,IAAAf,GACE,OAAO7F,KAAKmL,OAAOnL,KAAK3C,QACzB,CAED,IAAA0I,GAAS,CAET,WAAAC,CAAYC,GACV,MAAMP,KACJA,EAAIE,IACJA,GACEwG,GAAiBpM,KAAKuM,MAAOtG,EAAMxD,OACvC,MAAO,yBAAyBwD,EAAMlO,gBAAgB2N,YAAeE,GACtE,CAED,GAAAhK,CAAIhE,GACF,OAAOA,KAAQsR,EAChB,ECnCI,IAAIwD,GCIX,SAASjL,GAAG/J,GACV,OAAOA,EAAE,EACX,EDJA,SAAWgV,GACTA,EAAoB,UAAI,YACxBA,EAAiB,OAAI,SACrBA,EAAwB,cAAI,gBAC5BA,EAAwB,cAAI,gBAC5BA,EAA0B,gBAAI,kBAC9BA,EAA0B,gBAAI,kBAC9BA,EAAsB,YAAI,cAC1BA,EAA4B,kBAAI,oBAChCA,EAA0B,gBAAI,kBAC9BA,EAAoB,UAAI,YACxBA,EAAoB,UAAI,YACxBA,EAAuB,aAAI,eAC3BA,EAA+B,qBAAI,uBACnCA,EAAkB,QAAI,UACtBA,EAAqB,WAAI,aACzBA,EAAkB,QAAI,UACtBA,EAAoB,UAAI,YACxBA,EAAmB,SAAI,WACvBA,EAAgB,MAAI,QACpBA,EAAuB,aAAI,eAC3BA,EAAwB,cAAI,eAC7B,CAtBD,CAsBGA,KAAaA,GAAW,CAAA,ICV3B,MAAMzJ,GAAQ,IAAIqJ,IAAa1F,GAAS,KAMlC+F,GAAS,GAAGC,MAASA,EAErBC,GAAgB5G,IAAU,CAC9BtM,KAAM+S,GAASI,QACfC,UAAW9G,EAAMtM,KACjB5B,KAAMkO,EAAMlO,KACZsR,IAAKpD,EAAMoD,MAGP2D,GAAc,CAACnW,GACnBoW,UACAC,eAEID,SAA0CA,EAAQxV,SACpDZ,EAAO,IAAKA,EACVsW,gBAAiBF,IAIjBC,SAA4CA,EAASzV,SACvDZ,EAAO,IAAKA,EACVuW,iBAAkBF,IAIfrW,GAOHqL,GAAU,CACdmD,MAAOpC,GACPsC,YAAa,CAAC,CACZ3N,KAAQ,cACR2J,QAAW,IACV,CACD3J,KAAQ,cACR2J,QAAW,CAAC,cAAe,aAC3BC,YAAe9J,GAAKA,EAAE,GAAG+Q,OAAO,CAAC/Q,EAAE,MAClC,CACDE,KAAQ,OACR2J,QAAW,CAAC,eACZC,YAAe,EAAE6L,MACf,MAAMC,EAAOD,EAAWA,EAAW5V,OAAS,GAE5C,OAAI6V,IAASA,EAAKC,aAGTD,EAAK3N,SAASlI,OAAS,EAAI4V,EAAaA,EAAWjT,MAAM,GAAI,GAG7DiT,CACR,GAEF,CACDzV,KAAQ,4BACR2J,QAAW,CAAC0B,GAAMrH,IAAI,aAAe,CACnCjC,KAAM,aACJ6T,YACH,CACD5V,KAAQ,4BACR2J,QAAW,CAAC0B,GAAMrH,IAAI,OAAS,CAC7BjC,KAAM,OACJyP,MACH,CACDxR,KAAQ,YACR2J,QAAW,CAAC,yBAA0B,6BACtCC,YAAe,EAAE7B,GAAW8N,OAAiB,CAC3C9T,KAAM+S,GAASgB,UACf/N,WACA4N,aAAcE,EAAU9T,OAASuP,GAAUsE,aAE5C,CACD5V,KAAQ,gCACR2J,QAAW,IACV,CACD3J,KAAQ,gCACR2J,QAAW,CAAC,gCAAiC,iBAC7CC,YAAe9J,GAAKA,EAAE,GAAG+Q,OAAO,CAAC/Q,EAAE,MAClC,CACDE,KAAQ,gCACR2J,QAAW,IACV,CACD3J,KAAQ,gCACR2J,QAAW,CAAC,gCAAiC,UAC7CC,YAAe9J,GAAKA,EAAE,GAAG+Q,OAAO,CAAC/Q,EAAE,MAClC,CACDE,KAAQ,yBACR2J,QAAW,CAAC,gCAAiC,iCAC7CC,YAAe,EAAEmM,EAAaC,KAAa,IAAID,KAAgBC,IAC9D,CACDhW,KAAQ,yBACR2J,QAAW,CAAC,iBACX,CACD3J,KAAQ,yBACR2J,QAAW,CAAC,kBACX,CACD3J,KAAQ,yBACR2J,QAAW,CAAC,iBACX,CACD3J,KAAQ,yBACR2J,QAAW,CAAC,kBACX,CACD3J,KAAQ,SACR2J,QAAW,CAAC,0BACZC,YAAemL,IACd,CACD/U,KAAQ,6CACR2J,QAAW,CAAC,kBACX,CACD3J,KAAQ,6CACR2J,QAAW,CAAC,6CAA8C,iBAC1DC,YAAe9J,GAAKA,EAAE,GAAG+Q,OAAO,CAAC/Q,EAAE,MAClC,CACDE,KAAQ,sCACR2J,QAAW,CAAC0B,GAAMrH,IAAI,SAAW,CAC/BjC,KAAM,SACJkU,MAAO,+CACV,CACDjW,KAAQ,sBACR2J,QAAW,CAAC,uCACZC,YAAeC,IACd,CACD7J,KAAQ,sBACR2J,QAAW,GACXC,YAAe,IAAM,MACpB,CACD5J,KAAQ,eACR2J,QAAW,CAAC0B,GAAMrH,IAAI,SAAW,CAC/BjC,KAAM,SACJkR,MAAO,IAAK,oBAAqB,uBACrCrJ,YAAe,EAAEsM,EAAYC,EAAGC,EAAMC,MACpC,GAAIA,EAAU,CACZ,MAAOC,EAAOC,GAAQF,EACtB,MAAO,CACLtU,KAAM+S,GAAS0B,aACfC,QAASrB,GAAYH,GAAciB,GAAa,CAC9CZ,SAAUa,IAEZhH,OAAQiH,EACRM,MAAOH,EAEjB,CACQ,MAAO,CACLxU,KAAM+S,GAAS0B,aACfC,QAASrB,GAAYH,GAAciB,GAAa,CAC9CZ,SAAUa,IAEZO,MAAON,EAEV,GAEF,CACDpW,KAAQ,uCACR2J,QAAW,IACV,CACD3J,KAAQ,uCACR2J,QAAW,CAAC,uCAAwC,iBACpDC,YAAe9J,GAAKA,EAAE,GAAG+Q,OAAO,CAAC/Q,EAAE,MAClC,CACDE,KAAQ,gCACR2J,QAAW,CAAC,uBAAwB,yCACnC,CACD3J,KAAQ,uCACR2J,QAAW,IACV,CACD3J,KAAQ,uCACR2J,QAAW,CAAC,uCAAwC,iBACpDC,YAAe9J,GAAKA,EAAE,GAAG+Q,OAAO,CAAC/Q,EAAE,MAClC,CACDE,KAAQ,gCACR2J,QAAW,CAAC,6BAA8B,yCACzC,CACD3J,KAAQ,gBACR2J,QAAW,CAAC0B,GAAMrH,IAAI,mBAAqB,CACzCjC,KAAM,mBACJyQ,gBAAiB,iCACrB5I,YAAe,EAAE+M,GAAYtJ,EAAK0I,OAAmB,CACnDhU,KAAM+S,GAAS8B,OACfC,OAAQ5B,GAAc0B,GACtB5O,SAAU,CAACsF,KAAQ0I,MAEpB,CACD/V,KAAQ,gBACR2J,QAAW,CAAC0B,GAAMrH,IAAI,mBAAqB,CACzCjC,KAAM,mBACJyQ,iBACJ5I,YAAe,EAAE+M,MAAgB,CAC/B5U,KAAM+S,GAAS8B,OACfC,OAAQ5B,GAAc0B,GACtB5O,SAAU,MAEX,CACD/H,KAAQ,uBACR2J,QAAW,CAAC0B,GAAMrH,IAAI,YAAc,CAClCjC,KAAM,YACJ+U,UACJlN,YAAe,KAAO,CACpB7H,KAAM+S,GAASiC,wBAEhB,CACD/W,KAAQ,sBACR2J,QAAW,IACV,CACD3J,KAAQ,sBACR2J,QAAW,CAAC,sBAAuB,iBACnCC,YAAe9J,GAAKA,EAAE,GAAG+Q,OAAO,CAAC/Q,EAAE,MAClC,CACDE,KAAQ,eACR2J,QAAW,CAAC0B,GAAMrH,IAAI,mBAAqB,CACzCjC,KAAM,mBACJmQ,gBAAiB,uBACrBtI,YAAe,EAAE+M,EAAW5O,MAAe,CACzChG,KAAM+S,GAAS8B,OACfC,OAAQ5B,GAAc0B,GACtB5O,cAED,CACD/H,KAAQ,uBACR2J,QAAW,IACV,CACD3J,KAAQ,uBACR2J,QAAW,CAAC,uBAAwB,iBACpCC,YAAe9J,GAAKA,EAAE,GAAG+Q,OAAO,CAAC/Q,EAAE,MAClC,CACDE,KAAQ,gBACR2J,QAAW,CAAC0B,GAAMrH,IAAI,0BAA4B,CAChDjC,KAAM,0BACJ0Q,uBAAwB,wBAC5B7I,YAAe,EAAE+M,EAAW5O,MAAe,CACzChG,KAAM+S,GAASkC,cACfH,OAAQ5B,GAAc0B,GACtB5O,cAED,CACD/H,KAAQ,2BACR2J,QAAW,CAAC,8BACX,CACD3J,KAAQ,2BACR2J,QAAW,CAAC,2BAA4B,6BACxCC,YAAe9J,GAAKA,EAAE,GAAG+Q,OAAO,CAAC/Q,EAAE,MAClC,CACDE,KAAQ,oBACR2J,QAAW,CAAC,4BACZC,YAAeC,IACd,CACD7J,KAAQ,4BACR2J,QAAW,CAAC,aAAc,KAC1BC,YAAe,EAAEqN,EAAMd,KAAOf,GAAY6B,EAAM,CAC9C3B,SAAUa,KAEX,CACDnW,KAAQ,gCACR2J,QAAW,CAAC,+BACX,CACD3J,KAAQ,gCACR2J,QAAW,CAAC,aACX,CACD3J,KAAQ,gBACR2J,QAAW,CAAC,iCACZC,YAAemL,IACd,CACD/U,KAAQ,6CACR2J,QAAW,CAAC,4BACX,CACD3J,KAAQ,6CACR2J,QAAW,CAAC,sBACX,CACD3J,KAAQ,6CACR2J,QAAW,CAAC,oBACX,CACD3J,KAAQ,6CACR2J,QAAW,CAAC,UACX,CACD3J,KAAQ,6CACR2J,QAAW,CAAC,YACX,CACD3J,KAAQ,6CACR2J,QAAW,CAAC,kBACX,CACD3J,KAAQ,6BACR2J,QAAW,CAAC,8CACZC,YAAemL,IACd,CACD/U,KAAQ,6BACR2J,QAAW,CAAC,4BACX,CACD3J,KAAQ,6BACR2J,QAAW,CAAC,aACX,CACD3J,KAAQ,aACR2J,QAAW,CAAC,8BACZC,YAAemL,IACd,CACD/U,KAAQ,0CACR2J,QAAW,CAAC,oBACX,CACD3J,KAAQ,0CACR2J,QAAW,CAAC,kBACX,CACD3J,KAAQ,0CACR2J,QAAW,CAAC,oBACX,CACD3J,KAAQ,0CACR2J,QAAW,CAAC,gBACX,CACD3J,KAAQ,0CACR2J,QAAW,CAAC,iBACX,CACD3J,KAAQ,0CACR2J,QAAW,CAAC,oBACX,CACD3J,KAAQ,0CACR2J,QAAW,CAAC,aACX,CACD3J,KAAQ,0CACR2J,QAAW,CAAC,eACX,CACD3J,KAAQ,0CACR2J,QAAW,CAAC,cACX,CACD3J,KAAQ,0CACR2J,QAAW,CAAC,YACX,CACD3J,KAAQ,0CACR2J,QAAW,CAAC,YACX,CACD3J,KAAQ,0BACR2J,QAAW,CAAC,2CACZC,YAAemL,IACd,CACD/U,KAAQ,kBACR2J,QAAW,CAAC0B,GAAMrH,IAAI,oBAAsB,CAC1CjC,KAAM,oBACJkS,iBAAkB,IAAK,mBAC3BrK,YAAe,EAAEsN,EAAYf,EAAGgB,MAAe,CAC7CpV,KAAM+S,GAASsC,gBACfC,MAAOjC,GAAY,CACjBrT,KAAM+S,GAASwC,WACfnX,KAAM+W,EAAW/W,MAChB,CACDmV,SAAUa,IAEZoB,YAAaJ,KAEd,CACDnX,KAAQ,kBACR2J,QAAW,CAAC0B,GAAMrH,IAAI,iBAAmB,CACvCjC,KAAM,iBACJ4Q,cAAe,IAAK,mBACxB/I,YAAe,EAAEsN,EAAYf,EAAGgB,MAAe,CAC7CpV,KAAM+S,GAASsC,gBACfC,MAAOjC,GAAYH,GAAciC,GAAa,CAC5C5B,SAAUa,IAEZoB,YAAaJ,KAEd,CACDnX,KAAQ,gBACR2J,QAAW,CAAC0B,GAAMrH,IAAI,0BAA4B,CAChDjC,KAAM,0BACJuQ,uBAAwB,IAAK,eACjC1I,YAAe,EAAE+M,EAAWR,EAAGqB,MAAa,CAC1CzV,KAAM+S,GAAS2C,cACfZ,OAAQzB,GAAYH,GAAc0B,GAAY,CAC5CrB,SAAUa,IAEZoB,YAAaC,KAEd,CACDxX,KAAQ,cACR2J,QAAW,CAAC,CACVmC,QAAW,KACV,yBAA0B,CAC3BA,QAAW,MAEblC,YAAe,EAAE8N,EAAM3P,EAAU4P,MAAY,CAC3C5V,KAAM+S,GAASyC,YACfxP,SAAUA,EACV6P,UAAW,IACXC,WAAY,OAEb,CACD7X,KAAQ,sBACR2J,QAAW,IACV,CACD3J,KAAQ,sBACR2J,QAAW,CAAC,sBAAuB,iBACnCC,YAAe9J,GAAKA,EAAE,GAAG+Q,OAAO,CAAC/Q,EAAE,MAClC,CACDE,KAAQ,eACR2J,QAAW,CAAC,CACVmC,QAAW,KACV,sBAAuB,CACxBA,QAAW,MAEblC,YAAe,EAAE8N,EAAM3P,EAAU4P,MAAY,CAC3C5V,KAAM+S,GAASyC,YACfxP,SAAUA,EACV6P,UAAW,IACXC,WAAY,OAEb,CACD7X,KAAQ,yBACR2J,QAAW,IACV,CACD3J,KAAQ,yBACR2J,QAAW,CAAC,yBAA0B,iBACtCC,YAAe9J,GAAKA,EAAE,GAAG+Q,OAAO,CAAC/Q,EAAE,MAClC,CACDE,KAAQ,kBACR2J,QAAW,CAAC,CACVmC,QAAW,KACV,yBAA0B,CAC3BA,QAAW,MAEblC,YAAe,EAAE8N,EAAM3P,EAAU4P,MAAY,CAC3C5V,KAAM+S,GAASyC,YACfxP,SAAUA,EACV6P,UAAW,IACXC,WAAY,OAEb,CACD7X,KAAQ,kCACR2J,QAAW,CAAC,eACX,CACD3J,KAAQ,kCACR2J,QAAW,CAAC,oBACX,CACD3J,KAAQ,kCACR2J,QAAW,CAAC,yBACX,CACD3J,KAAQ,kBACR2J,QAAW,CAAC,aAAc,IAAK0B,GAAMrH,IAAI,OAAS,CAChDjC,KAAM,OACJ+V,IAAK,IAAK,mCACdlO,YAIA,EAAEmO,EAAQC,EAAI/N,EAAKgO,GAAKC,OACf,CACLnW,KAAM+S,GAASqD,gBACfJ,OAAQ3C,GAAY2C,EAAQ,CAC1BzC,SAAU0C,IAEZE,SAAU9C,GAAY8C,EAAU,CAC9B7C,QAAS4C,OAId,CACDjY,KAAQ,oBACR2J,QAAW,CAAC0B,GAAMrH,IAAI,WAAa,CACjCjC,KAAM,WACJmR,QAAS,IAAK,aAAc,IAAK7H,GAAMrH,IAAI,OAAS,CACtDjC,KAAM,OACJoR,IAAK,IAAK,cACdvJ,YAAe,EAAEwO,EAAcJ,EAAIK,EAAOJ,EAAIK,EAAUC,EAAIC,MAAY,CACtEzW,KAAM+S,GAAS2D,kBACfC,UAAWzD,GAAcmD,GACzBC,MAAO,CAACjD,GAAYiD,EAAO,CACzBhD,QAAS2C,EACT1C,SAAU2C,KAEZU,MAAO1D,GAAcqD,GACrBE,MAAO,CAACpD,GAAYoD,EAAO,CACzBnD,QAASkD,QAGZ,CACDvY,KAAQ,yBACR2J,QAAW,CAAC,qBACZC,YAAeC,IACd,CACD7J,KAAQ,yBACR2J,QAAW,GACXC,YAAe,IAAM,MACpB,CACD5J,KAAQ,yBACR2J,QAAW,IACV,CACD3J,KAAQ,yBACR2J,QAAW,CAAC,yBAA0B,eACtCC,YAAe9J,GAAKA,EAAE,GAAG+Q,OAAO,CAAC/Q,EAAE,MAClC,CACDE,KAAQ,kBACR2J,QAAW,CAAC0B,GAAMrH,IAAI,QAAU,CAC9BjC,KAAM,QACJ6Q,KAAM,IAAK,yBAA0B,yBAA0BvH,GAAMrH,IAAI,OAAS,CACpFjC,KAAM,OACJ8Q,KACJjJ,YAAe,EAAEgP,EAAWzC,EAAGc,EAAMjB,EAAS6C,MAAe,CAC3D9W,KAAM+S,GAASgE,gBACfC,OAAQ3D,GAAYH,GAAc2D,GAAY,CAC5CtD,SAAUa,IAEZ6C,MAAO/D,GAAc4D,GACrB5B,KAAMA,GAAQ,GACdjB,aAED,CACDhW,KAAQ,cACR2J,QAAW,CAAC0B,GAAMrH,IAAI,QAAU,CAC9BjC,KAAM,QACJ+Q,KAAM,IAAK,oBAAqBzH,GAAMrH,IAAI,QAAU,CACtDjC,KAAM,QACJiR,KAAM,IAAK,qBACfpJ,YAAe,EAAEqP,EAAWjB,EAAIkB,EAAMC,EAAWlB,EAAIhB,MAAW,CAC9DlV,KAAM+S,GAASsE,UACfC,OAAQjE,GAAYH,GAAcgE,GAAY,CAC5C3D,SAAU0C,IAEZsB,OAAQlE,GAAYH,GAAckE,GAAY,CAC5C7D,SAAU2C,IAEZsB,UAAWL,EACXM,OAAQvC,KAET,CACDjX,KAAQ,cACR2J,QAAW,CAAC0B,GAAMrH,IAAI,QAAU,CAC9BjC,KAAM,QACJgR,KAAM,IAAK,qBACfnJ,YAAe,EAAE6P,EAAWtD,EAAGc,MAAW,CACxClV,KAAM+S,GAAS4E,UACfC,OAAQvE,GAAYH,GAAcwE,GAAY,CAC5CnE,SAAUa,IAEZqD,OAAQvC,KAET,CACDjX,KAAQ,wBACR2J,QAAW,CAAC0B,GAAMrH,IAAI,SAAW,CAC/BjC,KAAM,SACJkU,QACH,CACDjW,KAAQ,QACR2J,QAAW,CAAC,yBACZC,YAAe,GAAGyE,OAAa,CAC7BtM,KAAM+S,GAASwB,SAEhB,CACDtW,KAAQ,2BACR2J,QAAW,CAAC0B,GAAMrH,IAAI,YAAc,CAClCjC,KAAM,YACJ+U,WACH,CACD9W,KAAQ,WACR2J,QAAW,CAAC,4BACZC,YAAe,GAAGyE,OAAa,CAC7BtM,KAAM+S,GAAS8E,SACfzZ,KAAMkO,EAAMlO,QAEb,CACDH,KAAQ,2BACR2J,QAAW,CAAC0B,GAAMrH,IAAI,YAAc,CAClCjC,KAAM,YACJ8X,WACH,CACD7Z,KAAQ,WACR2J,QAAW,CAAC,4BACZC,YAAe,GAAGyE,OAAa,CAC7BtM,KAAM+S,GAAS8E,SACfzZ,KAAMkO,EAAMlO,QAEb,CACDH,KAAQ,6BACR2J,QAAW,CAAC0B,GAAMrH,IAAI,cAAgB,CACpCjC,KAAM,cACJ2R,aACH,CACD1T,KAAQ,6BACR2J,QAAW,CAAC0B,GAAMrH,IAAI,qBAAuB,CAC3CjC,KAAM,qBACJ+X,oBACH,CACD9Z,KAAQ,6BACR2J,QAAW,CAAC0B,GAAMrH,IAAI,YAAc,CAClCjC,KAAM,YACJgY,WACH,CACD/Z,KAAQ,aACR2J,QAAW,CAAC,8BACZC,YAAe,GAAGyE,OAAa,CAC7BtM,KAAM+S,GAASwC,WACfnX,KAAMkO,EAAMlO,QAEb,CACDH,KAAQ,4BACR2J,QAAW,CAAC0B,GAAMrH,IAAI,mBAAqB,CACzCjC,KAAM,mBACJiY,kBACH,CACDha,KAAQ,4BACR2J,QAAW,CAAC0B,GAAMrH,IAAI,oBAAsB,CAC1CjC,KAAM,oBACJkY,mBACH,CACDja,KAAQ,4BACR2J,QAAW,CAAC0B,GAAMrH,IAAI,sBAAwB,CAC5CjC,KAAM,sBACJmY,qBACH,CACDla,KAAQ,4BACR2J,QAAW,CAAC0B,GAAMrH,IAAI,wBAA0B,CAC9CjC,KAAM,wBACJoY,uBACH,CACDna,KAAQ,YACR2J,QAAW,CAAC,6BACZC,YAAe,GAAGyE,OAAa,CAC7BtM,KAAM+S,GAASsF,UACf7U,IAAK8I,EAAM9I,IACXpF,KAAMkO,EAAMlO,QAEb,CACDH,KAAQ,0BACR2J,QAAW,CAAC0B,GAAMrH,IAAI,UAAY,CAChCjC,KAAM,UACJsY,SACH,CACDra,KAAQ,0BACR2J,QAAW,CAAC0B,GAAMrH,IAAI,UAAY,CAChCjC,KAAM,UACJuY,SACH,CACDta,KAAQ,UACR2J,QAAW,CAAC,2BACZC,YAAe,GAAGyE,OAAa,CAC7BtM,KAAM+S,GAAShJ,QACf3L,KAAMkO,EAAMlO,QAEb,CACDH,KAAQ,0BACR2J,QAAW,CAAC0B,GAAMrH,IAAI,oBAAsB,CAC1CjC,KAAM,oBACJgQ,mBACH,CACD/R,KAAQ,0BACR2J,QAAW,CAAC0B,GAAMrH,IAAI,mBAAqB,CACzCjC,KAAM,mBACJwQ,kBACH,CACDvS,KAAQ,0BACR2J,QAAW,CAAC0B,GAAMrH,IAAI,iBAAmB,CACvCjC,KAAM,iBACJ2Q,gBACH,CACD1S,KAAQ,0BACR2J,QAAW,CAAC0B,GAAMrH,IAAI,OAAS,CAC7BjC,KAAM,OACJoR,MACH,CACDnT,KAAQ,0BACR2J,QAAW,CAAC0B,GAAMrH,IAAI,MAAQ,CAC5BjC,KAAM,MACJqR,KACH,CACDpT,KAAQ,0BACR2J,QAAW,CAAC0B,GAAMrH,IAAI,OAAS,CAC7BjC,KAAM,OACJsR,MACH,CACDrT,KAAQ,UACR2J,QAAW,CAAC,2BACZC,YAAe,GAAGyE,MAAY4G,GAAc5G,IAC3C,CACDrO,KAAQ,gCACR2J,QAAW,CAAC0B,GAAMrH,IAAI,QAAU,CAC9BjC,KAAM,QACJ+Q,OACH,CACD9S,KAAQ,gCACR2J,QAAW,CAAC0B,GAAMrH,IAAI,QAAU,CAC9BjC,KAAM,QACJiR,OACH,CACDhT,KAAQ,gCACR2J,QAAW,CAAC0B,GAAMrH,IAAI,QAAU,CAC9BjC,KAAM,QACJgR,OACH,CACD/S,KAAQ,gCACR2J,QAAW,CAAC0B,GAAMrH,IAAI,OAAS,CAC7BjC,KAAM,OACJ8Q,MACH,CACD7S,KAAQ,gBACR2J,QAAW,CAAC,iCACZC,YAAe,GAAGyE,MAAY4G,GAAc5G,IAC3C,CACDrO,KAAQ,WACR2J,QAAW,IACV,CACD3J,KAAQ,WACR2J,QAAW,CAAC,WAAY,WACxBC,YAAe9J,GAAKA,EAAE,GAAG+Q,OAAO,CAAC/Q,EAAE,MAClC,CACDE,KAAQ,IACR2J,QAAW,CAAC,YACZC,YAAe,EAAE2Q,KAAcA,GAC9B,CACDva,KAAQ,UACR2J,QAAW,CAAC0B,GAAMrH,IAAI,gBAAkB,CACtCjC,KAAM,gBACJwS,cACJ3K,YAAe,EAAEyE,MAAY,CAC3BtM,KAAM+S,GAAS0F,aACfra,KAAMkO,EAAMlO,KACZsa,oBAAqBpM,EAAMoM,uBAE5B,CACDza,KAAQ,UACR2J,QAAW,CAAC0B,GAAMrH,IAAI,iBAAmB,CACvCjC,KAAM,iBACJuS,eACJ1K,YAAe,EAAEyE,MAAY,CAC3BtM,KAAM+S,GAAS4F,cACfva,KAAMkO,EAAMlO,KACZsa,oBAAqBpM,EAAMoM,wBAG/B/M,YAAa,QAEf,IAAAiN,GAAerQ,GCtuBf,MACEY,OAAQ0P,GAAajQ,QACrBA,IACE0G,GCRG,MAEMqE,GAAOmF,GAAOA,EAAIA,EAAIhb,OAAS,GAG/Bib,GAAmBC,GAAWA,EAAQC,MAAK,CAACnc,EAAGC,IAAMA,EAAEe,OAAShB,EAAEgB,QAAUhB,EAAEoc,cAAcnc,KAG5Foc,GAAYH,GAAWA,EAAQI,QAAO,CAACzM,EAAK0M,IAAQ3M,KAAKC,IAAIA,EAAK0M,EAAIvb,SAAS,GAE/Ewb,GAAqB9N,GAAKA,EAAE+N,QAAQ,QAAS,KAE7CC,GAAkB9S,IAAO+S,OAZhBX,EAYuBxc,OAAOod,OAAOhT,GAAKiT,OAZnC,IAAI,IAAIhY,IAAImX,IAAnBA,KAYiD,EAE1Dc,GAAcxb,GAAQ,KAAKgM,KAAKhM,GCbvCyb,GAA6B,QAKpB,SAASC,GAAqBC,EAAOC,EAAeC,GACjE,OAgCF,SAAkCzN,GAChC,MAAM0N,EAAS,GAEf,IAAK,IAAIrc,EAAI,EAAGA,EAAI2O,EAAM1O,OAAQD,IAAK,CACrC,MAAMsc,EAAQ,CAAC3N,EAAM3O,IAIrB,KAAO2O,EAAM3O,GAAGuc,MAAM,SACpBvc,IACAsc,EAAMra,KAAK0M,EAAM3O,IAGnBqc,EAAOpa,KAAKqa,EACb,CAED,OAAOD,CACT,CAjDSG,CAAyBN,EAAMtN,MAAM,OAAO6N,SAAQC,IACzD,GAA0B,IAAtBA,EAAWzc,OACb,OAAOyc,EACF,GAAsB,YAAlBP,EACT,OAgDN,SAAuBO,GACrB,MAAMC,EAAgBrB,GAAUoB,GAChC,OAAOE,GAAmBF,GAAYpW,KAAI,CAAC4H,EAAMlO,IAC3CA,IAAM0c,EAAWzc,OAAS,EACrBiO,EAGFA,EAAO,IAAI/E,OAAOwT,EAAgBzO,EAAKjO,OAAS,GAAK,KAEhE,CAzDa4c,CAAcH,GAChB,GAAsB,WAAlBP,EACT,OAyDN,SAAsBO,EAAYN,GAChC,OAAOQ,GAAmBF,GAAYpW,KAAI,CAAC4H,EAAMlO,KAC/C,GAAU,IAANA,EACF,OAAOkO,EAGT,MAAO4O,GAAc5O,EAAKqO,MAAMP,KAA+B,CAAC,IAChE,OAKJ,SAA0Bc,EAAYV,GACpC,OAAOU,EAAWpB,QAAQ,IAAIrP,OAAO+P,EAAS,KAAM,GACtD,CAPWW,CAAiBD,EAAYV,GAAUA,EAAOV,QAAQ,QAAS,MACtExN,EAAK8O,WAAW,GAEpB,CAnEaC,CAAaP,EAAYN,GAEhC,MAAM,IAAIva,MAAM,6BAA6Bsa,IAC9C,IACAvP,KAAK,KACV,CAoEA,SAASgQ,GAAmBjO,GAC1B,OAAOA,EAAMrI,KAAI4H,GAAQA,EAAKwN,QAAQ,KAAM,KAC9C,CCrFO,IAAIwB,IAEX,SAAWA,GACTA,EAAGA,EAAU,MAAI,GAAK,QACtBA,EAAGA,EAAa,SAAI,GAAK,WACzBA,EAAGA,EAAe,WAAI,GAAK,aAC3BA,EAAGA,EAAY,QAAI,GAAK,UACxBA,EAAGA,EAAsB,kBAAI,GAAK,oBAClCA,EAAGA,EAAW,OAAI,GAAK,SACvBA,EAAGA,EAAkB,cAAI,GAAK,eAC/B,CARD,CAQGA,KAAOA,GAAK,CAAE,IASF,MAAMC,GACnBC,MAAQ,GAER,WAAA5T,CAAY6T,GACV7U,KAAK6U,YAAcA,CACpB,CAMD,GAAAhZ,IAAO+Y,GACL,IAAK,MAAME,KAAQF,EACjB,OAAQE,GACN,KAAKJ,GAAGK,MACN/U,KAAK4U,MAAMnb,KAAKib,GAAGK,OACnB,MAEF,KAAKL,GAAGM,SACNhV,KAAKiV,2BACL,MAEF,KAAKP,GAAGQ,WACNlV,KAAKmV,iBACL,MAEF,KAAKT,GAAGU,QACNpV,KAAKiV,2BACLjV,KAAKqV,WAAWX,GAAGU,SACnB,MAEF,KAAKV,GAAGY,kBACNtV,KAAKiV,2BACLjV,KAAKqV,WAAWX,GAAGY,mBACnB,MAEF,KAAKZ,GAAGa,OACNvV,KAAKwV,iBACL,MAEF,KAAKd,GAAGe,cACNzV,KAAK4U,MAAMnb,KAAKib,GAAGe,eACnB,MAEF,QACEzV,KAAK4U,MAAMnb,KAAKqb,GAGvB,CAED,wBAAAG,GACE,KAAOS,GAAuBpI,GAAKtN,KAAK4U,SACtC5U,KAAK4U,MAAMlZ,KAEd,CAED,cAAAyZ,GACE,KAAOQ,GAAsBrI,GAAKtN,KAAK4U,SACrC5U,KAAK4U,MAAMlZ,KAEd,CAED,UAAA2Z,CAAWO,GACT,GAAI5V,KAAK4U,MAAMnd,OAAS,EACtB,OAAQ6V,GAAKtN,KAAK4U,QAChB,KAAKF,GAAGU,QACNpV,KAAK4U,MAAMlZ,MACXsE,KAAK4U,MAAMnb,KAAKmc,GAChB,MAEF,KAAKlB,GAAGY,kBAEN,MAEF,QACEtV,KAAK4U,MAAMnb,KAAKmc,GAIvB,CAED,cAAAJ,GACE,IAAK,IAAIhe,EAAI,EAAGA,EAAIwI,KAAK6U,YAAYgB,WAAYre,IAC/CwI,KAAK4U,MAAMnb,KAAKib,GAAGe,cAEtB,CAMD,QAAA3R,GACE,OAAO9D,KAAK4U,MAAM9W,KAAIgX,GAAQ9U,KAAK8V,aAAahB,KAAO1Q,KAAK,GAC7D,CAMD,cAAA2R,GACE,OAAO/V,KAAK4U,KACb,CAED,YAAAkB,CAAahB,GACX,OAAQA,GACN,KAAKJ,GAAGK,MACN,MAAO,IAET,KAAKL,GAAGU,QACR,KAAKV,GAAGY,kBACN,MAAO,KAET,KAAKZ,GAAGe,cACN,OAAOzV,KAAK6U,YAAYmB,kBAE1B,QACE,OAAOlB,EAEZ,EAIH,MAAMY,GAAyBZ,GAAQA,IAASJ,GAAGK,OAASD,IAASJ,GAAGe,cAElEE,GAAwBb,GAAQA,IAASJ,GAAGK,OAASD,IAASJ,GAAGe,eAAiBX,IAASJ,GAAGU,QCpH7F,SAASa,GAAetc,GAC7B,MVyD+BA,IAAQA,IAASuP,GAAU6B,KAAOpR,IAASuP,GAAU8B,IAAMrR,IAASuP,GAAU+B,IUzDtGiL,CAAkBvc,IAASA,IAASuP,GAAUY,iBAAmBnQ,IAASuP,GAAUkB,iBAAmBzQ,IAASuP,GAAUmB,wBAA0B1Q,IAASuP,GAAUoB,eAAiB3Q,IAASuP,GAAU2B,KACpN,CC/BA,MAAMsL,GAAwB,YAWf,MAAMC,GACnBC,YAAc,GAKd,WAAArV,CAAY4S,GACV5T,KAAK4T,OAASA,CACf,CAMD,eAAAoC,GACE,OAAOhW,KAAK4T,MACb,CAMD,QAAAiC,GACE,OAAO7V,KAAKqW,YAAY5e,MACzB,CAMD,gBAAA6e,GACEtW,KAAKqW,YAAY5c,KAAK0c,GACvB,CAMD,kBAAAI,GACEvW,KAAKqW,YAAY5c,KAjDW,cAkD7B,CAOD,gBAAA+c,GACMxW,KAAKqW,YAAY5e,OAAS,GAAK6V,GAAKtN,KAAKqW,eAAiBF,IAC5DnW,KAAKqW,YAAY3a,KAEpB,CAQD,kBAAA+a,GACE,KAAOzW,KAAKqW,YAAY5e,OAAS,GAAG,CAGlC,GAFauI,KAAKqW,YAAY3a,QAEjBya,GACX,KAEH,CACF,ECpEY,MAAMO,WAAqB/B,GACxCld,OAAS,EAITkf,eAAgB,EAEhB,WAAA3V,CAAY4V,GACVC,MAAM,IAAIT,GAAY,KAEtBpW,KAAK4W,gBAAkBA,CACxB,CAED,GAAA/a,IAAO+Y,GAGL,GAFAA,EAAMve,SAAQye,GAAQ9U,KAAK8W,YAAYhC,KAEnC9U,KAAKvI,OAASuI,KAAK4W,gBAErB,MAAM,IAAIG,GAGZF,MAAMhb,OAAO+Y,EACd,CAED,WAAAkC,CAAYhC,GACV,GAAoB,iBAATA,EACT9U,KAAKvI,QAAUqd,EAAKrd,OACpBuI,KAAK2W,eAAgB,MAChB,IAAI7B,IAASJ,GAAGY,mBAAqBR,IAASJ,GAAGU,QAEtD,MAAM,IAAI2B,GACDjC,IAASJ,GAAGa,QAAUT,IAASJ,GAAGe,eAAiBX,IAASJ,GAAGK,MACnE/U,KAAK2W,gBACR3W,KAAKvI,SACLuI,KAAK2W,eAAgB,GAEd7B,IAASJ,GAAGQ,YAAcJ,IAASJ,GAAGM,UAC3ChV,KAAK2W,gBACP3W,KAAK2W,eAAgB,EACrB3W,KAAKvI,SAER,CACF,EAOI,MAAMsf,WAA0B1d,OCnDxB,MAAM2d,GACnBC,QAAS,EACT1X,MAAQ,GACRlC,OAAS,EAET,WAAA2D,EAAYP,IACVA,EAAGyW,WACHA,EAAUjW,OACVA,EAAMkW,OACNA,EAAMF,OACNA,GAAS,IAETjX,KAAKS,IAAMA,EACXT,KAAKkX,WAAaA,EAClBlX,KAAKiX,OAASA,EACdjX,KAAKiB,OAASA,EACdjB,KAAKmX,OAASA,CACf,CAED,MAAAC,CAAO7X,GAGL,IAFAS,KAAKT,MAAQA,EAERS,KAAK3C,MAAQ,EAAG2C,KAAK3C,MAAQ2C,KAAKT,MAAM9H,OAAQuI,KAAK3C,QACxD2C,KAAKqX,WAAWrX,KAAKT,MAAMS,KAAK3C,QAGlC,OAAO2C,KAAKmX,MACb,CAED,UAAAE,CAAWxgB,GACTmJ,KAAKsX,eAAezgB,EAAKsW,iBACzBnN,KAAKuX,0BAA0B1gB,GAC/BmJ,KAAKsX,eAAezgB,EAAKuW,iBAC1B,CAED,yBAAAmK,CAA0B1gB,GACxB,OAAQA,EAAK8C,MACX,KAAK+S,GAAS2C,cACZ,OAAOrP,KAAKwX,mBAAmB3gB,GAEjC,KAAK6V,GAASsC,gBACZ,OAAOhP,KAAKyX,qBAAqB5gB,GAEnC,KAAK6V,GAASqD,gBACZ,OAAO/P,KAAK0X,qBAAqB7gB,GAEnC,KAAK6V,GAASyC,YACZ,OAAOnP,KAAK2X,kBAAkB9gB,GAEhC,KAAK6V,GAAS2D,kBACZ,OAAOrQ,KAAK4X,uBAAuB/gB,GAErC,KAAK6V,GAASgE,gBACZ,OAAO1Q,KAAK6X,qBAAqBhhB,GAEnC,KAAK6V,GAASsE,UACZ,OAAOhR,KAAK8X,eAAejhB,GAE7B,KAAK6V,GAAS4E,UACZ,OAAOtR,KAAK+X,eAAelhB,GAE7B,KAAK6V,GAAS8B,OACZ,OAAOxO,KAAKgY,aAAanhB,GAE3B,KAAK6V,GAASkC,cACZ,OAAO5O,KAAKiY,mBAAmBphB,GAEjC,KAAK6V,GAAS0B,aACZ,OAAOpO,KAAKkY,kBAAkBrhB,GAEhC,KAAK6V,GAASiC,qBACZ,OAAO3O,KAAKmY,yBAAyBthB,GAEvC,KAAK6V,GAAShJ,QACZ,OAAO1D,KAAKoY,cAAcvhB,GAE5B,KAAK6V,GAASwC,WACZ,OAAOlP,KAAKqY,iBAAiBxhB,GAE/B,KAAK6V,GAASsF,UACZ,OAAOhS,KAAKsY,gBAAgBzhB,GAE9B,KAAK6V,GAAS8E,SACZ,OAAOxR,KAAKuY,eAAe1hB,GAE7B,KAAK6V,GAASwB,MACZ,OAAOlO,KAAKwY,YAAY3hB,GAE1B,KAAK6V,GAAS0F,aACZ,OAAOpS,KAAKyY,kBAAkB5hB,GAEhC,KAAK6V,GAAS4F,cACZ,OAAOtS,KAAK0Y,mBAAmB7hB,GAEjC,KAAK6V,GAASI,QACZ,OAAO9M,KAAK2Y,kBAAkB9hB,GAEnC,CAED,kBAAA2gB,CAAmB3gB,GACjBmJ,KAAK4Y,aAAa/hB,EAAK4X,QAAQ,KAC7BzO,KAAKmX,OAAOtb,IAAImE,KAAK6Y,OAAOhiB,EAAK4X,QAAQ,IAE3CzO,KAAKqX,WAAWxgB,EAAKsY,YACtB,CAED,oBAAAsI,CAAqB5gB,GACnBmJ,KAAK4Y,aAAa/hB,EAAKoY,OAAO,KAC5BjP,KAAKmX,OAAOtb,IAAIhF,EAAKoY,MAAMtV,OAAS+S,GAASI,QAAU9M,KAAK6Y,OAAOhiB,EAAKoY,OAASpY,EAAKoY,MAAMlX,KAAK,IAEnGiI,KAAKqX,WAAWxgB,EAAKsY,YACtB,CAED,oBAAAuI,CAAqB7gB,GACnBmJ,KAAKqX,WAAWxgB,EAAK8Y,QACrB3P,KAAKmX,OAAOtb,IAAI6Y,GAAGM,SAAU,KAC7BhV,KAAKqX,WAAWxgB,EAAKiZ,SACtB,CAED,iBAAA6H,CAAkB9gB,GAChB,MAAMiiB,EAAe9Y,KAAK+Y,uBAAuBliB,EAAK8I,UAElDmZ,GACF9Y,KAAKmX,OAAOtb,IAAIhF,EAAK2Y,WACrBxP,KAAKmX,OAAOtb,OAAOid,EAAa/C,kBAChC/V,KAAKmX,OAAOtb,IAAI6Y,GAAGM,SAAUne,EAAK4Y,WAAYiF,GAAGK,SAEjD/U,KAAKmX,OAAOtb,IAAIhF,EAAK2Y,UAAWkF,GAAGU,SAE/BtU,EAAed,KAAKS,MACtBT,KAAKmX,OAAOtb,IAAI6Y,GAAGa,QACnBvV,KAAKmX,OAASnX,KAAKgZ,oBAAoBniB,EAAK8I,YAE5CK,KAAKmX,OAAOtC,YAAY0B,qBACxBvW,KAAKmX,OAAOtb,IAAI6Y,GAAGa,QACnBvV,KAAKmX,OAASnX,KAAKgZ,oBAAoBniB,EAAK8I,UAC5CK,KAAKmX,OAAOtC,YAAY4B,sBAG1BzW,KAAKmX,OAAOtb,IAAI6Y,GAAGU,QAASV,GAAGa,OAAQ1e,EAAK4Y,WAAYiF,GAAGK,OAE9D,CAED,sBAAA6C,CAAuB/gB,GACrBmJ,KAAKmX,OAAOtb,IAAImE,KAAK6Y,OAAOhiB,EAAKyZ,WAAYoE,GAAGK,OAChD/U,KAAKmX,OAASnX,KAAKgZ,oBAAoBniB,EAAKoZ,OAC5CjQ,KAAKmX,OAAOtb,IAAI6Y,GAAGM,SAAUN,GAAGK,MAAO/U,KAAKiZ,iBAAiBpiB,EAAK0Z,OAAQmE,GAAGK,OAC7E/U,KAAKmX,OAASnX,KAAKgZ,oBAAoBniB,EAAKuZ,OAC5CpQ,KAAKmX,OAAOtb,IAAI6Y,GAAGK,MACpB,CAED,oBAAA8C,CAAqBhhB,GACnBmJ,KAAKqX,WAAWxgB,EAAK8Z,QACrB3Q,KAAKmX,OAASnX,KAAKgZ,oBAAoBniB,EAAKgY,MAC5C7O,KAAKmX,OAAOtC,YAAY0B,qBACxBvW,KAAKmX,OAASnX,KAAKgZ,oBAAoBniB,EAAK+W,SAC5C5N,KAAKmX,OAAOtC,YAAY4B,qBACxBzW,KAAKmX,OAAOtb,IAAI6Y,GAAGU,QAASV,GAAGa,QAC/BvV,KAAKqX,WAAWxgB,EAAK+Z,MACtB,CAED,cAAAkH,CAAejhB,GACbmJ,KAAKmX,OAAOtb,IAAI6Y,GAAGU,QAASV,GAAGa,QAC/BvV,KAAKqX,WAAWxgB,EAAKoa,QACrBjR,KAAKmX,OAASnX,KAAKgZ,oBAAoBniB,EAAKsa,WAC5CnR,KAAKqX,WAAWxgB,EAAKqa,QACrBlR,KAAKmX,OAASnX,KAAKgZ,oBAAoBniB,EAAKua,OAC7C,CAED,cAAA2G,CAAelhB,GACbmJ,KAAKmX,OAAOtb,IAAI6Y,GAAGU,QAASV,GAAGa,QAC/BvV,KAAKqX,WAAWxgB,EAAK0a,QACrBvR,KAAKmX,OAASnX,KAAKgZ,oBAAoBniB,EAAKua,OAC7C,CAED,YAAA4G,CAAanhB,GACPiK,EAAed,KAAKS,KACtBT,KAAKmX,OAAOtb,IAAI6Y,GAAGU,QAASV,GAAGa,OAAQvV,KAAK6Y,OAAOhiB,EAAK4X,QAASiG,GAAGK,OAEpE/U,KAAKmX,OAAOtb,IAAI6Y,GAAGU,QAASV,GAAGa,OAAQvV,KAAK6Y,OAAOhiB,EAAK4X,QAASiG,GAAGU,SAGtEpV,KAAKmX,OAAOtC,YAAYyB,mBAEnBxV,EAAed,KAAKS,MACvBT,KAAKmX,OAAOtb,IAAI6Y,GAAGa,QAGrBvV,KAAKmX,OAASnX,KAAKgZ,oBAAoBniB,EAAK8I,UAC5CK,KAAKmX,OAAOtC,YAAY2B,kBACzB,CAED,kBAAAyB,CAAmBphB,GACjBmJ,KAAKmX,OAAOtb,IAAI6Y,GAAGU,QAASV,GAAGa,OAAQvV,KAAK6Y,OAAOhiB,EAAK4X,QAASiG,GAAGU,SACpEpV,KAAKmX,OAAOtb,IAAI6Y,GAAGa,QACnBvV,KAAKmX,OAASnX,KAAKgZ,oBAAoBniB,EAAK8I,SAC7C,CAED,iBAAAuY,CAAkBrhB,GAChBmJ,KAAK4Y,aAAa/hB,EAAKwX,SAAS,KAC9BrO,KAAKmX,OAAOtb,IAAI6Y,GAAGU,QAASV,GAAGa,OAAQvV,KAAK6Y,OAAOhiB,EAAKwX,SAAS,IAEnErO,KAAKmX,OAAOtC,YAAYyB,mBAEpBxV,EAAed,KAAKS,KACtBT,KAAKmX,OAAOtb,IAAI6Y,GAAGK,OAEnB/U,KAAKmX,OAAOtb,IAAI6Y,GAAGU,QAASV,GAAGa,QAG7B1e,EAAKkQ,QACP/G,KAAKmX,OAASnX,KAAKgZ,oBAAoBniB,EAAKkQ,QAC5C/G,KAAKmX,OAAOtb,IAAI6Y,GAAGM,SAAU,IAAKN,GAAGK,OACrC/U,KAAKmX,OAASnX,KAAKgZ,oBAAoBniB,EAAKyX,QAE5CtO,KAAKmX,OAASnX,KAAKgZ,oBAAoBniB,EAAKyX,OAG9CtO,KAAKmX,OAAOtC,YAAY2B,kBACzB,CAED,wBAAA2B,CAAyBe,GACvBlZ,KAAKmX,OAAOtb,IAAI,IAAK6Y,GAAGK,MACzB,CAED,aAAAqD,CAAcvhB,GACZmJ,KAAKmX,OAAOtb,IAAIhF,EAAKkB,KAAM2c,GAAGK,MAC/B,CAED,gBAAAsD,CAAiBxhB,GACfmJ,KAAKmX,OAAOtb,IAAIhF,EAAKkB,KAAM2c,GAAGK,MAC/B,CAED,eAAAuD,CAAgBzhB,GACdmJ,KAAKmX,OAAOtb,IAAImE,KAAKiB,OAAOC,IAAIrK,GAAO6d,GAAGK,MAC3C,CAED,cAAAwD,EAAexgB,KACbA,IAEA,IAAIohB,EAEAnZ,KAAKS,IAAI2Y,gBAAqF,QAAlED,EAAwBnZ,KAAKkX,WAAWmC,4BAA4D,IAA1BF,GAAoCA,EAAsBG,SAASvhB,GAC3KiI,KAAKmX,OAAOtb,IAAI6Y,GAAGM,SAAUjd,GACX,MAATA,EACTiI,KAAKmX,OAAOtb,IAAI6Y,GAAGM,SAAUjd,EAAM2c,GAAGK,OAEtC/U,KAAKmX,OAAOtb,IAAI9D,EAAM2c,GAAGK,MAE5B,CAED,WAAAyD,CAAYU,GACLlZ,KAAKiX,OAGRjX,KAAKmX,OAAOtb,IAAI6Y,GAAGM,SAAU,IAAKN,GAAGK,OAFrC/U,KAAKmX,OAAOtb,IAAI6Y,GAAGM,SAAU,IAAKN,GAAGU,QAASV,GAAGa,OAIpD,CAED,YAAAqD,CAAa/hB,EAAMd,GACjBiK,KAAKsX,eAAezgB,EAAKsW,iBACzBpX,IACAiK,KAAKsX,eAAezgB,EAAKuW,iBAC1B,CAED,cAAAkK,CAAenF,GACRA,GAILA,EAAS9b,SAAQkjB,IACXA,EAAI5f,OAAS+S,GAAS0F,aACxBpS,KAAKyY,kBAAkBc,GAEvBvZ,KAAK0Y,mBAAmBa,EACzB,GAEJ,CAED,iBAAAd,CAAkB5hB,GACZ0c,GAAY1c,EAAKwb,qBAAuB,IAC1CrS,KAAKmX,OAAOtb,IAAI6Y,GAAGU,QAASV,GAAGa,OAAQ1e,EAAKkB,KAAM2c,GAAGY,kBAAmBZ,GAAGa,QAClEvV,KAAKmX,OAAOpB,iBAAiBte,OAAS,EAC/CuI,KAAKmX,OAAOtb,IAAI6Y,GAAGQ,WAAYR,GAAGK,MAAOle,EAAKkB,KAAM2c,GAAGY,kBAAmBZ,GAAGa,QAG7EvV,KAAKmX,OAAOtb,IAAIhF,EAAKkB,KAAM2c,GAAGY,kBAAmBZ,GAAGa,OAEvD,CAED,kBAAAmD,CAAmB7hB,GACbmJ,KAAKwZ,wBAAwB3iB,IAC/BmJ,KAAKyZ,kBAAkB5iB,EAAKkB,MAAM1B,SAAQqP,IACxC1F,KAAKmX,OAAOtb,IAAI6Y,GAAGU,QAASV,GAAGa,OAAQ7P,EAAK,IAE9C1F,KAAKmX,OAAOtb,IAAI6Y,GAAGU,QAASV,GAAGa,SAE/BvV,KAAKmX,OAAOtb,IAAIhF,EAAKkB,KAAM2c,GAAGK,MAEjC,CAED,uBAAAyE,CAAwB3iB,GACtB,OAAO0c,GAAY1c,EAAKkB,OAASwb,GAAY1c,EAAKwb,qBAAuB,GAC1E,CAiBD,iBAAAoH,CAAkBC,GAChB,OAAOA,EAAQtT,MAAM,MAAMtI,KAAI4H,GACzB,SAAS3B,KAAK2B,GACT,IAAMA,EAAKwN,QAAQ,OAAQ,IAE3BxN,EAAKwN,QAAQ,OAAQ,KAGjC,CAED,mBAAA8F,CAAoBzZ,GAClB,OAAO,IAAIyX,GAAoB,CAC7BvW,IAAKT,KAAKS,IACVyW,WAAYlX,KAAKkX,WACjBjW,OAAQjB,KAAKiB,OACbkW,OAAQnX,KAAKmX,OACbF,OAAQjX,KAAKiX,SACZG,OAAO7X,EACX,CAED,sBAAAwZ,CAAuBxZ,GACrB,MAAMoa,EAAgB3Z,KAAKiB,OAAOE,8BAElC,IACE,OAAO,IAAI6V,GAAoB,CAC7BvW,IAAKT,KAAKS,IACVyW,WAAYlX,KAAKkX,WACjBjW,OAAQjB,KAAKiB,OACbkW,OAAQ,IAAIT,GAAa1W,KAAKS,IAAImW,iBAClCK,QAAQ,IACPG,OAAO7X,EACX,CAAC,MAAOvF,GACP,GAAIA,aAAa+c,GAMf,YADA/W,KAAKiB,OAAOG,4BAA4BuY,GAIxC,MAAM3f,CAET,CACF,CAED,iBAAA2e,CAAkB9hB,GAChB,OAAQA,EAAKkW,WACX,KAAK7D,GAAUoB,cACb,OAAOtK,KAAK4Z,WAAW/iB,GAEzB,KAAKqS,GAAU6B,IACf,KAAK7B,GAAU8B,GACf,KAAK9B,GAAU+B,IACb,OAAOjL,KAAK6Z,sBAAsBhjB,GAEpC,QACE,OAAOmJ,KAAK8Z,cAAcjjB,GAE/B,CAED,UAAA+iB,CAAW/iB,GACLiK,EAAed,KAAKS,MAEtBT,KAAKmX,OAAOtC,YAAY2B,mBACxBxW,KAAKmX,OAAOtb,IAAI6Y,GAAGU,QAASV,GAAGa,OAAQvV,KAAK6Y,OAAOhiB,GAAO6d,GAAGK,OAC7D/U,KAAKmX,OAAOtC,YAAYyB,oBAExBtW,KAAKmX,OAAOtb,IAAI6Y,GAAGU,QAASV,GAAGa,OAAQvV,KAAK6Y,OAAOhiB,GAAO6d,GAAGK,MAEhE,CAED,aAAA+E,CAAcjjB,GACZmJ,KAAKmX,OAAOtb,IAAImE,KAAK6Y,OAAOhiB,GAAO6d,GAAGK,MACvC,CAED,qBAAA8E,CAAsBhjB,GACoB,WAApCmJ,KAAKS,IAAIsZ,uBACPjZ,EAAed,KAAKS,MAEtBT,KAAKmX,OAAOtC,YAAY2B,mBACxBxW,KAAKmX,OAAOtb,IAAI6Y,GAAGU,QAASV,GAAGa,OAAQvV,KAAK6Y,OAAOhiB,GAAO6d,GAAGK,OAC7D/U,KAAKmX,OAAOtC,YAAYyB,oBAExBtW,KAAKmX,OAAOtb,IAAI6Y,GAAGU,QAASV,GAAGa,OAAQvV,KAAK6Y,OAAOhiB,GAAO6d,GAAGK,OAG/D/U,KAAKmX,OAAOtb,IAAImE,KAAK6Y,OAAOhiB,GAAO6d,GAAGU,QAASV,GAAGa,OAErD,CAED,MAAAsD,CAAOhiB,GACL,OAAIof,GAAepf,EAAKkW,WH/Zb,SAAyBiN,EAAWtZ,GACjD,GAAoB,aAAhBA,EACF,OAAOsZ,EAGT,IAAIC,EAAO,GAaX,OAXID,EAAUviB,QAAU,IAAMuiB,EAAUV,SAAS,QAE9CU,KAAcC,GAAQD,EAAU5T,MAAM,OAIvC4T,EADkB,gBAAhBtZ,EACUsZ,EAAUE,OAAO,EAAG,KAEpBF,EAAUG,SAAS,EAAG,MAGjB,CAAC,MAAOF,GAAM7V,KAAK,IACxC,CG6YagW,CAAgBpa,KAAKiZ,iBAAiBpiB,GAAOmJ,KAAKS,IAAIC,aAEtDV,KAAKiZ,iBAAiBpiB,EAEhC,CAGD,gBAAAoiB,CAAiBpiB,GACf,OAAQmJ,KAAKS,IAAI4Z,aACf,IAAK,WACH,OAAOpH,GAAmBpc,EAAKwS,KAEjC,IAAK,QACH,OAAOxS,EAAKkB,KAEd,IAAK,QACH,OAAOlB,EAAKkB,KAAKuiB,cAEtB,EC9aY,MAAMC,GACnB,WAAAvZ,CAAYP,GACVT,KAAKS,IAAMA,EACXT,KAAKiB,OAAS,IAAIF,EAAOf,KAAKS,IAAIQ,OACnC,CAMD,SAAAuZ,GACE,MAAM,IAAInhB,MAAM,0CACjB,CAKD,eAAAohB,GACE,MAAMC,EAAM1a,KAAKgB,YAMjB,OAJK0Z,EAAID,kBACPC,EAAID,gBAAkBza,KAAKwa,aAGtBE,EAAID,eACZ,CAMD,aAAAE,GACE,MAAO,EACR,CAQD,MAAAvD,CAAO1D,GACL,MAAMkH,EAAM5a,KAAK6a,MAAMnH,GACjBoH,EAAiB9a,KAAK+a,UAAUH,GAEtC,OADmB5a,KAAKgb,WAAWF,GACjBG,SACnB,CAED,KAAAJ,CAAMnH,GACJ,OR9CG,SAAsB8G,GAC3B,IAAIU,EAAsB,CAAA,EAC1B,MAAMjY,EAAQ,IAAIqJ,IAAa1F,IAAS,WLAPuE,EKA8BqP,EAAUhO,SAAS5F,EAAOsU,GLClF/P,EAAOrN,IAAIoN,IAAmBpN,IAAIyN,IAAmBzN,IAAI6N,IAAmB7N,IAAIgO,KKDyB3C,GAAevC,EAAMnP,SLAhI,IAA4B0T,CKA4G,IACvIgQ,EAAS,IAAI3I,GAAcjQ,GAAQQ,aAAab,IAAU,CAC9De,UAEF,MAAO,CACL4X,MAAO,CAACO,EAAKC,KAEXH,EAAsBG,EACtB,MAAMlU,QACJA,GACEgU,EAAOxU,KAAKyU,GAEhB,GAAuB,IAAnBjU,EAAQ1P,OACV,OAAO0P,EAAQ,GACV,MAAuB,IAAnBA,EAAQ1P,OAGX,IAAI4B,MAAM,4BAEV,IAAIA,MAAM,iCACjB,EAGP,CQqBWiiB,CAAatb,KAAKya,mBAAmBI,MAAMnH,EAAO1T,KAAKS,IAAI4a,YAAc,CAAE,EACnF,CAED,SAAAN,CAAU1N,GACR,OAAOA,EAAWvP,KAAIyd,GAAQvb,KAAKwb,gBAAgBD,KAAOnX,KAAK,KAAKzD,OAAOX,KAAKS,IAAIgb,oBAAsB,GAC3G,CAED,eAAAD,CAAgB9N,GACd,MAAMyJ,EAAS,IAAIH,GAAoB,CACrCvW,IAAKT,KAAKS,IACVyW,WAAYlX,KAAK2a,gBACjB1Z,OAAQjB,KAAKiB,OACbkW,OAAQ,IAAIxC,GAAO,IAAIyB,GAAY5V,EAAaR,KAAKS,SACpD2W,OAAO1J,EAAU/N,UASpB,OAPK+N,EAAUH,eACJvN,KAAKS,IAAIib,uBAClBvE,EAAOtb,IAAI6Y,GAAGU,QAAS,KAEvB+B,EAAOtb,IAAI6Y,GAAGQ,WAAY,MAGrBiC,EAAOrT,UACf,CAED,UAAAkX,CAAWtH,GAST,OARI1T,KAAKS,IAAIkb,gBACXjI,ECjFS,SAA8BA,GAC3C,MAAMvN,EAAQuN,EAAMtN,MAAM,MAC1B,IAAIwV,EAAW,GAEf,IAAK,IAAIpkB,EAAI,EAAGA,EAAI2O,EAAM1O,OAAQD,IAAK,CAErC,GAAI2O,EAAM3O,GAAGuc,MAAM,eAAgB,CACjC,IAAI8H,EAAa,GAEjB,GAAI1V,EAAM3O,GAAGuc,MAAM,QACjB8H,EAAa,CAAC1V,EAAM3O,QACf,CAGL,GAFAokB,EAASniB,KAAK0M,EAAM3O,IAEhB2O,EAAM3O,GAAGuc,MAAM,0BACjB,SAGF8H,EAAWpiB,KAAK0M,IAAQ3O,GACzB,CAGD,KAAO2O,EAAM3O,KAAKuc,MAAM,SACtB8H,EAAWpiB,KAAK0M,EAAM3O,IAIxB,MAAMskB,EAAaD,EAAW/d,KAAI4H,IAAS,CACzCA,OACAqW,QAASrW,EAAKqO,MAAM,gCAClBjW,KAAI,EACN4H,OACAqW,aAEKA,EAME,CACLC,cAAeD,EAAQ,GACvBE,GAAIF,EAAQ,GACZG,MAAOH,EAAQ,IARR,CACLC,cAAetW,KAWfyW,EAAiBrJ,GAAUgJ,EAAWhe,KAAI,EAC9Cke,mBACIA,EAAc9I,QAAQ,WAAY,OAExC2I,EAAaC,EAAWhe,KAAI,EAC1Bke,gBACAC,KACAC,WACIF,GAAiBE,EAAQ,IAAIvb,OAAOwb,EAAiBH,EAAcvkB,OAAS,IAAMwkB,GAAM,IAAMC,EAAQ,MAC5GN,EAAW,IAAIA,KAAaC,EAC7B,CAEDD,EAASniB,KAAK0M,EAAM3O,GACrB,CAED,OAAOokB,EAASxX,KAAK,KACvB,CDkBcgY,CAAqB1I,IAGA,WAA3B1T,KAAKS,IAAIkT,eAAyD,YAA3B3T,KAAKS,IAAIkT,gBAClDD,EAAQD,GAAqBC,EAAO1T,KAAKS,IAAIkT,cAAenT,EAAaR,KAAKS,OAGzEiT,CACR,EE7FI,MAAM2I,GAAeC,GAAUA,EAAOpJ,QAAQ,uBAAwB,QAChEqJ,GAAmB,QACnBC,GAAiBC,GAAW,IAAI5Y,OAAO,MAAM4Y,KAAY,MAEzDC,GAA2BC,GAAUA,EAAOvW,MAAM,IAAItI,KAAI8e,GAAQ,MAAM7Y,KAAK6Y,GAAQ,OAAS,IAAIA,EAAKC,gBAAgBD,EAAKtC,mBAAkBlW,KAAK,ICOnJ+K,GAAc,CAAC2N,EAAMC,EAAc,MAC9C,MAAM1f,EAAiB,SAATyf,EAAkB,EAAI,EAC9B1N,EAAS,CAAC,QAAS2N,GAAajf,KAAIkf,GAAQA,EAAK3f,KACvD,OAAOmf,GAAepN,EAAOtR,IAAIue,IAAcjY,KAAK,KAAK,EAsB9C6Y,GAAe,CAACC,EAAkBC,EAAa,MAC1D,GAAgC,IAA5BD,EAAiBzlB,OACnB,MAAO,QAGT,MAAM2lB,EAdwB,GAC9Bje,OACAke,YACIle,GAAQke,EAAS,OAAOle,GAAQ,KAAKke,EAAS,IAAM,OAAS,GAWzCC,CAAwBH,GAC1CI,EAA0B7K,GAAiBwK,GAAkBpf,IAAIue,IAAcjY,KAAK,KAAK8O,QAAQ,MAAO,QAC9G,OAAO,IAAIrP,OAAO,MAAM0Z,KAA2BH,OAAsB,MAAM,EAQpEpL,GAAY,CAACqJ,EAAYoB,KACpC,IAAKpB,EAAW5jB,OACd,OAGF,MAAM+lB,EAAanC,EAAWvd,IAAIue,IAAcjY,KAAK,KACrD,OAAOoY,GAAe,MAAMgB,QAAiBf,KAAW,EA2B7CgB,GAAgB,CAE3B,KAAM,eAEN,KAAMzZ,OAAOqF,GAAG,gCAEhB,QAASrF,OAAOqF,GAAG,eAEnB,QAASrF,OAAOqF,GAAG,+BAEnB,WAAYrF,OAAOqF,GAAG,gCAEtB,SAAUrF,OAAOqF,GAAG,cAGpB,QAASrF,OAAOqF,GAAG,eAEnB,QAASrF,OAAOqF,GAAG,+BAEnB,WAAYrF,OAAOqF,GAAG,gCAEtB,SAAUrF,OAAOqF,GAAG,cAGpB9P,GAAMyK,OAAOqF,GAAG,iCAEhB,WAAYrF,OAAOqF,GAAG,gCAEtB,WAAYrF,OAAOqF,GAAG,gCAEtB,KAAMrF,OAAOqF,GAAG,iBAEhB,MAxD2B,MAC3B,MAAMqU,EAAsB,CAC1B,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAKDC,EAAc1nB,OAAO2nB,QAAQF,GAAqB5f,KAAI,EAAE0G,EAAMC,KAF9C,mCAEuEyO,QAAQ,UAAWmJ,GAAa7X,IAAO0O,QAAQ,WAAYmJ,GAAa5X,MAC/JoZ,EAAoBxB,GAAapmB,OAAOsK,KAAKmd,GAAqBtZ,KAAK,KAK7E,MADuB,WAFUJ,OAAOqF,GAAG,cAAcwU,mCAEKF,EAAYvZ,KAAK,QAC1D,EAwCd0Z,IAGHC,GAAqBC,GACC,iBAAfA,EACFP,GAAcO,GDlHM,GAC7BC,WACAC,mBACI,MAAMD,EAASngB,IAAI4e,IAA0BtY,KAAK,OAAO8Z,EAAgB,GAAK,OCiHzEC,CAAgBH,GAAcP,GAAcO,EAAWI,OASrDC,GAAgBL,GAAcA,EAAWlgB,IAAIigB,IAAoB3Z,KAAK,KAGtEkY,GAAS0B,GAAcxB,GAAe6B,GAAcL,IAKpD9O,GAAa,CAACoP,EAAe,CAAE,IAAK9B,GAAe+B,GAAkBD,IAKrEC,GAAoB,EAC/BC,QACArf,OACAke,SACAoB,wBACE,MAEF,MAAMC,EAAS,4BAETC,EAAS,sBACTC,EAAavC,GAAamC,GAAS,IACnCK,EAAYxC,GAAald,GAAQ,IACjCsd,EAAUgC,EAAuB,IAAIC,IAASC,IAASC,MAAeF,IAASC,IAASE,MAAgB,IAAIH,IAASE,MAAeF,IAASC,IAASE,MAC5J,OAAOxB,EDzJiBZ,IAAWA,EAAU,OAASA,EAAU,KCyJhDqC,CAAWrC,GAAWA,CAAO,EC7JhC,MAAMsC,GACnBxS,MAAQ,GAERlP,MAAQ,EAER,WAAA2D,CAAYwB,GACVxC,KAAKwC,MAAQA,CACd,CAUD,QAAAgK,CAASD,GACPvM,KAAKuM,MAAQA,EACbvM,KAAK3C,MAAQ,EACb,MAAM8N,EAAS,GACf,IAAIlF,EAEJ,KAAOjG,KAAK3C,MAAQ2C,KAAKuM,MAAM9U,QAAQ,CAErC,MAAM4a,EAAsBrS,KAAKgf,gBAEjC,GAAIhf,KAAK3C,MAAQ2C,KAAKuM,MAAM9U,OAAQ,CAIlC,GAFAwO,EAAQjG,KAAKif,gBAERhZ,EACH,MAAMjG,KAAKkf,mBAGb/T,EAAO1R,KAAK,IAAKwM,EACfoM,uBAEH,CACF,CAED,OAAOlH,CACR,CAED,gBAAA+T,GACE,MAAMnnB,EAAOiI,KAAKuM,MAAMnS,MAAM4F,KAAK3C,MAAO2C,KAAK3C,MAAQ,KACjDqI,KACJA,EAAIE,IACJA,GACEwG,GAAiBpM,KAAKuM,MAAOvM,KAAK3C,OACtC,OAAO,IAAIhE,MAAM,4BAA4BtB,cAAiB2N,YAAeE,IAC9E,CAED,aAAAoZ,GACEzC,GAAiB4C,UAAYnf,KAAK3C,MAClC,MAAM0e,EAAUQ,GAAiB6C,KAAKpf,KAAKuM,OAE3C,GAAIwP,EAGF,OADA/b,KAAK3C,OAAS0e,EAAQ,GAAGtkB,OAClBskB,EAAQ,EAIlB,CAED,YAAAkD,GACE,IAAK,MAAMrd,KAAQ5B,KAAKwC,MAAO,CAC7B,MAAMyD,EAAQjG,KAAK+T,MAAMnS,GAEzB,GAAIqE,EACF,OAAOA,CAEV,CAGF,CAGD,KAAA8N,CAAMnS,GACJA,EAAKyd,MAAMF,UAAYnf,KAAK3C,MAC5B,MAAM0e,EAAUna,EAAKyd,MAAMD,KAAKpf,KAAKuM,OAErC,GAAIwP,EAAS,CACX,MAAMuD,EAAcvD,EAAQ,GACtB9V,EAAQ,CACZtM,KAAMiI,EAAKjI,KACX0P,IAAKiW,EACLvnB,KAAM6J,EAAK7J,KAAO6J,EAAK7J,KAAKunB,GAAeA,EAC3C7c,MAAOzC,KAAK3C,OASd,OANIuE,EAAKzE,MACP8I,EAAM9I,IAAMyE,EAAKzE,IAAImiB,IAIvBtf,KAAK3C,OAASiiB,EAAY7nB,OACnBwO,CACR,CAGF,ECvGH,MAAMsZ,GAAQ,SAERC,GAAS,2BAET/U,GAAM,SAOL,MAAMgV,GACXN,UAAY,EAEZ,IAAAC,CAAK7S,GACH,IACIwH,EADA3C,EAAS,GAETsO,EAAY,EAEhB,KAAI3L,EAAQ/T,KAAK2f,aAAaJ,GAAOhT,IAInC,OAAO,KAGT,IANE6E,GAAU2C,EACV2L,IAKKA,EAAY,GACjB,GAAI3L,EAAQ/T,KAAK2f,aAAaJ,GAAOhT,GACnC6E,GAAU2C,EACV2L,SACK,GAAI3L,EAAQ/T,KAAK2f,aAAalV,GAAK8B,GACxC6E,GAAU2C,EACV2L,QACK,MAAI3L,EAAQ/T,KAAK2f,aAAaH,GAAQjT,IAG3C,OAAO,KAFP6E,GAAU2C,CAGX,CAGH,MAAO,CAAC3C,EACT,CAED,YAAAuO,CAAaN,EAAO9S,GAClB8S,EAAMF,UAAYnf,KAAKmf,UACvB,MAAMpD,EAAUsD,EAAMD,KAAK7S,GAM3B,OAJIwP,IACF/b,KAAKmf,WAAapD,EAAQ,GAAGtkB,QAGxBskB,EAAUA,EAAQ,GAAK,IAC/B,EC/CY,MAAM6D,GACnB,WAAA5e,CAAYP,GACVT,KAAKS,IAAMA,EACXT,KAAK6f,kBAAoB7f,KAAK8f,uBAAuBrf,GACrDT,KAAK+f,iBAAmB/f,KAAKggB,sBAAsBvf,EACpD,CAED,QAAA+L,CAASD,EAAO2O,GACd,MAAM1Y,EAAQ,IAAIxC,KAAK6f,qBAAsB7f,KAAKigB,gBAAgBjgB,KAAKS,IAAKya,MAAyBlb,KAAK+f,kBACpG5U,EAAS,IAAI4T,GAAgBvc,GAAOgK,SAASD,GACnD,OAAOvM,KAAKS,IAAIyf,YAAclgB,KAAKS,IAAIyf,YAAY/U,GAAUA,CAC9D,CAID,sBAAA2U,CAAuBrf,GACrB,OAAOT,KAAKmgB,WAAW,CAAC,CACtBxmB,KAAMuP,GAAUgD,cAChBmT,MAAO5e,EAAI2f,oBAAsB,IAAIX,GAAkB,qBACtD,CACD9lB,KAAMuP,GAAUiD,aAChBkT,OHpBqBgB,EGoBI5f,EAAI4f,kBAAoB,CAAC,MHpBT,IAAIxc,OAAO,MAAMwc,EAAiBviB,IAAIue,IAAcjY,KAAK,2BAA4B,QGqB7H,CACDzK,KAAMuP,GAAUwI,kBAChB2N,MAAOiB,GAAa7f,EAAI8f,aACvB,CACD5mB,KAAMuP,GAAU+I,OAChBoN,MAAO,oGAGT,CACE1lB,KAAMuP,GAAUiB,gBAChBkV,MAAOmB,GAAmB/f,EAAIggB,iBAAmB,GAAIhgB,EAAI0c,YACzDplB,KAAM2oB,IACL,CACD/mB,KAAMuP,GAAUsB,KAChB6U,MAAO,YACPtnB,KAAM2oB,IACL,CACD/mB,KAAMuP,GAAUuB,IAChB4U,MAAO,WACPtnB,KAAM2oB,IACL,CACD/mB,KAAMuP,GAAU4B,QAChBuU,MAAO,eACPtnB,KAAM2oB,IACL,CACD/mB,KAAMuP,GAAU2B,MAChBwU,MAAO5e,EAAIkgB,gBAAgBrH,SAAS,SAAW,kBAAe/b,EAC9DxF,KAAM2oB,IACL,CACD/mB,KAAMuP,GAAUY,gBAChBuV,MAAOmB,GAAmB/f,EAAIkgB,gBAAiBlgB,EAAI0c,YACnDplB,KAAM2oB,IACL,CACD/mB,KAAMuP,GAAUkB,gBAChBiV,MAAOmB,GAAmB/f,EAAImgB,eAAgBngB,EAAI0c,YAClDplB,KAAM2oB,IACL,CACD/mB,KAAMuP,GAAUmB,uBAChBgV,MAAOmB,GAAmB/f,EAAIogB,sBAAuBpgB,EAAI0c,YACzDplB,KAAM2oB,IACL,CACD/mB,KAAMuP,GAAUwB,KAChB2U,MAAO,YACPtnB,KAAM2oB,IACL,CACD/mB,KAAMuP,GAAUyB,KAChB0U,MAAO,YACPtnB,KAAM2oB,IACL,CACD/mB,KAAMuP,GAAU0B,KAChByU,MAAO,YACPtnB,KAAM2oB,IACL,CACD/mB,KAAMuP,GAAUoB,cAChB+U,MAAOmB,GAAmB/f,EAAIqgB,cAAergB,EAAI0c,YACjDplB,KAAM2oB,IACL,CACD/mB,KAAMuP,GAAU6B,IAChBsU,MAAO,WACPtnB,KAAM2oB,IACL,CACD/mB,KAAMuP,GAAU8B,GAChBqU,MAAO,UACPtnB,KAAM2oB,IACL,CACD/mB,KAAMuP,GAAU+B,IAChBoU,MAAO5e,EAAIsgB,YAAc,gBAAaxjB,EACtCxF,KAAM2oB,IACL,CACD/mB,KAAMuP,GAAUgB,uBAChBmV,MAAOmB,GAAmB/f,EAAIugB,sBAAuBvgB,EAAI0c,YACzDplB,KAAM2oB,IACL,CACD/mB,KAAMuP,GAAUS,iBAChB0V,MAAOmB,GAAmB/f,EAAIyc,iBAAkBzc,EAAI0c,YACpDplB,KAAM2oB,MHhGeL,KGkGxB,CAID,qBAAAL,CAAsBvf,GACpB,OAAOT,KAAKmgB,WAAW,CAAC,CACtBxmB,KAAMuP,GAAUyI,SAChB0N,MAAO5e,EAAIwgB,eHkBOC,EGlBwBzgB,EAAIwgB,cHkBhBzE,GAAe0E,EAASpjB,KAAIqjB,GAAW,UAAWA,EAAUA,EAAQ9B,MAAQtB,GAAmBoD,KAAU/c,KAAK,YGlB7E7G,GAC9D,CACD5D,KAAMuP,GAAUgJ,OAChBmN,MAAOiB,GAAa7f,EAAI2gB,cACvB,CACDznB,KAAMuP,GAAUoC,WAChB+T,MAAOgC,GAAiB5gB,EAAI0c,aAC3B,CACDxjB,KAAMuP,GAAUsE,UAChB6R,MAAO,SACN,CACD1lB,KAAMuP,GAAU2E,MAChBwR,MAAO,QACN,CACD1lB,KAAMuP,GAAU+C,WAChBoT,MAAOiC,GAAkB,OAAQ7gB,EAAIsc,cACpC,CACDpjB,KAAMuP,GAAUqY,YAChBlC,MAAOiC,GAAkB,QAAS7gB,EAAIsc,cACrC,CACDpjB,KAAMuP,GAAUuI,SAChB4N,OHhHkBmC,EGgHI,CACtB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,QAAU/gB,EAAI+gB,WAAa,IHjH5ChF,GAAe,GAAG9J,GAAiB8O,GAAW1jB,IAAIue,IAAcjY,KAAK,UGkHnG,CACDzK,KAAMuP,GAAUwF,SAChB2Q,MAAO,SACN,CACD1lB,KAAMuP,GAAUwG,IAChB2P,MAAO,WHvHWmC,MA6GAN,CGYrB,CAID,eAAAjB,CAAgBxf,EAAKya,GACnB,IAAIuG,EAAiBC,EAAkBC,EAAkBC,EAIzD,MAAMvG,EAAa,CACjBwG,OAAQ3G,aAAiE,EAASA,EAAoB2G,SAAkD,QAAtCJ,EAAkBhhB,EAAI4a,kBAA4C,IAApBoG,OAA6B,EAASA,EAAgBI,QAAU,GAChOC,QAAS5G,aAAiE,EAASA,EAAoB4G,UAAoD,QAAvCJ,EAAmBjhB,EAAI4a,kBAA6C,IAArBqG,OAA8B,EAASA,EAAiBI,SAAW,GACtOC,UAAW7G,aAAiE,EAASA,EAAoB6G,YAAsD,QAAvCJ,EAAmBlhB,EAAI4a,kBAA6C,IAArBsG,OAA8B,EAASA,EAAiBI,WAAa,GAC5OC,WAAkI,kBAA9G9G,aAAiE,EAASA,EAAoB8G,YAA4B9G,EAAoB8G,WAAqD,QAAvCJ,EAAmBnhB,EAAI4a,kBAA6C,IAArBuG,OAA8B,EAASA,EAAiBI,YAEzR,OAAOhiB,KAAKmgB,WAAW,CAAC,CACtBxmB,KAAMuP,GAAU0I,gBAChByN,MAAO4C,GAAgB5G,EAAWwG,MAAOK,GAAwBzhB,EAAI0hB,YAAc1hB,EAAI0c,aACvFhgB,IAAKilB,GAAKA,EAAEhoB,MAAM,IACjB,CACDT,KAAMuP,GAAU2I,iBAChBwN,MAAO4C,GAAgB5G,EAAWyG,OAAQO,GAAoB5hB,EAAI8f,aAClEpjB,IAAKilB,GAAK,GACRE,WACAC,eACID,EAASpP,QAAQ,IAAIrP,OAAOwY,GAAa,KAAOkG,GAAY,MAAOA,GAH/D,CAG2E,CACnFD,SAAUF,EAAEhoB,MAAM,GAAI,GACtBmoB,UAAWH,EAAEhoB,OAAO,MAErB,CACDT,KAAMuP,GAAU4I,mBAChBuN,MAAO4C,GAAgB5G,EAAW0G,SAAU,UAC5C5kB,IAAKilB,GAAKA,EAAEhoB,MAAM,IACjB,CACDT,KAAMuP,GAAU6I,qBAChBsN,MAAOhE,EAAW2G,WAAa,YAASzkB,IAE3C,CAGD,UAAA4iB,CAAW3d,GACT,OAAOA,EAAMzE,QAAO6D,GAAQ4gB,QAAQ5gB,EAAKyd,QAC1C,EASH,MAAMqB,GAAc0B,GAAKnP,GAAmBmP,EAAEvF,eC9LjC4F,GAAgBC,GAAWA,EAAQzO,QAAQ0O,IAgB3CA,GAAqBC,GAAUC,GAAkBC,GAAYF,IAAS9kB,KAAI/F,GAAQA,EAAKgrB,SAS9FC,GAAgB,aAChBC,GAAiB,WACjBC,GAAiB,WAEjBJ,GAAc/qB,IAClB,IAAIsF,EAAQ,EACZ,MAAM+T,EAAS,GAEf,KAAO/T,EAAQtF,EAAKN,QAAQ,CAE1BurB,GAAc7D,UAAY9hB,EAC1B,MAAM8lB,EAAgBH,GAAc5D,KAAKrnB,GAErCorB,IACF/R,EAAO3X,KAAK,CAAC0pB,EAAc,GAAGJ,SAC9B1lB,GAAS8lB,EAAc,GAAG1rB,QAI5ByrB,GAAe/D,UAAY9hB,EAC3B,MAAM+lB,EAAqBF,GAAe9D,KAAKrnB,GAE/C,GAAIqrB,EAAoB,CACtB,MAAMC,EAAUD,EAAmB,GAAGhpB,MAAM,GAAI,GAAGgM,MAAM,KAAKtI,KAAIqH,GAAKA,EAAE4d,SACzE3R,EAAO3X,KAAK,CAAC,MAAO4pB,IACpBhmB,GAAS+lB,EAAmB,GAAG3rB,MAChC,CAGDwrB,GAAe9D,UAAY9hB,EAC3B,MAAMimB,EAAqBL,GAAe7D,KAAKrnB,GAE/C,GAAIurB,EAAoB,CACtB,MAAMD,EAAUC,EAAmB,GAAGlpB,MAAM,GAAI,GAAGgM,MAAM,KAAKtI,KAAIqH,GAAKA,EAAE4d,SACzE3R,EAAO3X,KAAK4pB,GACZhmB,GAASimB,EAAmB,GAAG7rB,MAChC,CAED,IAAK0rB,IAAkBC,IAAuBE,EAC5C,MAAM,IAAIjqB,MAAM,8BAA8BtB,IAEjD,CAED,OAAOqZ,CAAM,EAGTyR,GAAoB,EAAErE,KAAUrf,UACtB5B,IAAVihB,EACK,CAAC,IAGHqE,GAAkB1jB,GAAM8U,SAAQgG,GAAQuE,EAAM1gB,KAAIylB,GAAQA,EAAKR,OAAS,IAAM9I,EAAK8I,WC9E/ES,GAAWrQ,GAAgB,CAEtCqQ,SAAU,CAAC,MAAO,MAAO,MAAO,QAAS,KAAM,MAAO,uBAAwB,KAAM,UAAW,KAAM,OAAQ,OAAQ,UAAW,WAAY,SAAU,QAAS,OAAQ,UAAW,UAAW,SAAU,OAAQ,WAAY,OAAQ,MAAO,OAAQ,SAAU,SAAU,UAAW,SAAU,UAAW,QAAS,QAAS,YAAa,MAAO,OAAQ,OAAQ,QAAS,WAAY,SAAU,OAAQ,SAAU,KAAM,SAAU,KAAM,QAAS,YAAa,WAAY,OAAQ,KAAM,OAAQ,UAAW,OAAQ,OAAQ,QAAS,SAAU,QAAS,UAAW,MAAO,KAAM,MAAO,OAAQ,QAAS,KAAM,KAAM,KAAM,QAAS,QAAS,OAAQ,YAAa,YAAa,QAAS,QAAS,YAAa,UAAW,QAAS,SAAU,OAAQ,SAAU,MAAO,OAAQ,SAAU,QAAS,cAAe,OAAQ,KAAM,QAAS,OAAQ,YAAa,QAAS,SAAU,QAAS,OAAQ,QAAS,SAAU,OAAQ,UACn3BC,UAAW,CAAC,QACZ,OAAQ,QACR,OAAQ,WAAY,YAAa,WAAY,QAAS,MAAO,WAAY,UAAW,SAAU,UAAW,UAAW,UACpH,UACA,aACA,aACA,UAAW,SACX,SACA,OAAQ,YAERC,aAAc,CAAC,MAAO,QAAS,UAAW,QAAS,QAAS,QAC5DC,KAAM,CAAC,QAEPC,IAAK,CAAC,OACN,OACA,QACA,KAAM,MAAO,QAAS,UAAW,WAAY,UAAW,WAAY,mBCnBzDC,GAAY1Q,GAAgB,CAEvC2Q,KAAM,CAAC,kBAAmB,8BAA+B,qBAAsB,sBAAuB,eAAgB,oBAAqB,wBAAyB,sBAAuB,qBAAsB,sBAEjNC,kBAAmB,CAAC,YAAa,YAAa,MAAO,OAAQ,QAAS,UAAW,YAAa,aAAc,MAAO,MAAO,mBAAoB,aAAc,cAAe,aAAc,MAAO,UAAW,YAE3MC,UAAW,CAAC,YAAa,YAAa,mBAAoB,MAAO,UAAW,SAAU,UAAW,QAAS,UAAW,cAAe,aAAc,MAAO,MAAO,aAAc,OAE9KC,qBAAsB,CAAC,wBAAyB,mBAAoB,mBAAoB,kBAExFhV,MAAO,CACP,eAAgB,eAAgB,kBAAmB,iBAAkB,sBAAuB,2BAA4B,gBAAiB,SAAU,cAAe,UAAW,gBAE7KiV,QAAS,CAAC,aAEVC,WAAY,CACZ,mBAAoB,gBAAiB,aAErCC,KAAM,CAAC,eAAgB,UAAW,OAAQ,WAAY,WAAY,YAAa,aAAc,sBAAuB,cAAe,WAAY,aAAc,aAE7JC,SAAU,CAAC,mBAAoB,WAAY,UAAW,eAAgB,eAAgB,gBAAiB,iBAAkB,kBAAmB,WAAY,kBAExJC,UAAW,CAAC,SAEZC,eAAgB,CAAC,kBAEjBC,UAAW,CAAC,qBAAsB,qBAAsB,WAAY,UAAW,cAAe,eAAgB,YAAa,aAAc,cAAe,iBAAkB,YAAa,yBAA0B,cAAe,kBAAmB,kBAAmB,mBAAoB,cAAe,gBAAiB,eAAgB,YAAa,gBAAiB,eAAgB,cAAe,cAAe,UAAW,aAAc,cAAe,YAAa,YAAa,kBAAmB,cAAe,qBAAsB,kBAAmB,iBAAkB,eAAgB,0BAA2B,aAAc,kBAAmB,mBAAoB,kBAAmB,gBAAiB,mBAAoB,kBAAmB,aAAc,YAAa,cAAe,iBAAkB,yBAA0B,iBAAkB,aAAc,mBAAoB,eAAgB,eAAgB,YAAa,cAAe,gBAAiB,gBAAiB,aAAc,WAAY,eAAgB,YAAa,OAAQ,QAEvgCC,KAAM,CAAC,mBAAoB,MAAO,OAAQ,SAAU,UAEpDC,IAAK,CAAC,iBAAkB,kBAAmB,0BAA2B,qBAEtEC,SAAU,CAAC,gBAAiB,UAAW,eAAgB,gBAAiB,oBAExEC,KAAM,CAAC,eAAgB,aAAc,sBAAuB,aAAc,qBAAsB,mBAAoB,4BAA6B,mBAAoB,kBAErKC,KAAM,CAAC,MAAO,OAAQ,SAAU,SAAU,cAAe,OAAQ,OAAQ,MAAO,QAAS,MAAO,KAAM,MAAO,QAAS,WAAY,QAAS,MAAO,cAAe,gBAAiB,cAAe,WAAY,gBAAiB,MAAO,QAAS,QAAS,OAAQ,UAAW,QAAS,MAAO,OAAQ,OAAQ,QAAS,MAAO,OAAQ,OAAQ,QAAS,MAAO,OAAQ,OAAQ,QAAS,QAAS,gBAE5XC,WAAY,CAAC,cAAe,aAAc,YAAa,OAAQ,MAAO,kBAAmB,mBAEzFC,IAAK,CAAC,qBAAsB,0BAA2B,mBAAoB,kBAAmB,eAAgB,sBAAuB,oBAAqB,WAAY,oBAAqB,kBAE3LC,UAAW,CAAC,OAAQ,aAAc,eAAgB,YAAa,QAAS,cAExEC,SAAU,CAAC,gBAEXC,qBAAsB,CAAC,OAAQ,YAAa,aAAc,aAAc,cAAe,SAAU,UAAW,WAAY,YAExH5I,OAAQ,CAAC,QAAS,cAAe,cAAe,mBAAoB,MAAO,uBAAwB,wBAAyB,SAAU,kBAAmB,YAAa,SAAU,cAAe,cAAe,WAAY,UAAW,QAAS,OAAQ,SAAU,OAAQ,QAAS,QAAS,YAAa,yBAA0B,eAAgB,kBAAmB,iBAAkB,qBAAsB,eAAgB,iBAAkB,gBAAiB,UAAW,SAAU,UAAW,QAAS,OAAQ,QAAS,+BAAgC,UAAW,QAAS,cAAe,SAAU,SAAU,YAAa,YAAa,YAAa,iBAAkB,SAAU,YAAa,OAAQ,UAAW,SAEnrB6I,KAAM,CAAC,eAAgB,OAAQ,UAAW,WAAY,WAAY,YAAa,aAAc,cAAe,cAE5GC,UAAW,CAAC,oBAAqB,UAAW,SAAU,YAAa,gBAAiB,gBAAiB,iBAAkB,kBAAmB,mBAAoB,kBAAmB,oBAAqB,mBAAoB,mBAAoB,eAAgB,cAAe,eAE7QC,KAAM,CAAC,iBAEPC,YAAa,CAAC,WAAY,KAAM,SAAU,UAE1CC,gBAAiB,CAAC,MAAO,UAAW,SAAU,UAAW,OAAQ,QAAS,YAAa,aAAc,uBAAwB,QAAS,eAAgB,wBAAyB,OAAQ,MAAO,MAAO,OAAQ,MAAO,YAAa,SAAU,aAAc,cAAe,MAAO,MAAO,SAAU,WAAY,UAAW,YACvTC,cAAe,CAAC,aAChBC,cAAe,CAAC,UAAW,QAAS,OAAQ,QAAS,aAAc,UAAW,UAC9EC,iBAAkB,CAClB,WAAY,WAAY,SAAU,SAAU,SAAU,wBAAyB,QAAS,OACxFC,eAAgB,CAAC,eAAgB,eAAgB,oBAAqB,OAAQ,WAAY,WAAY,MAAO,YAAa,YAAa,kBAAmB,OAAQ,SAAU,QAAS,oBAAqB,MAAO,iBAAkB,UAAW,mBAAoB,SAAU,oBAAqB,OAAQ,YAAa,oBAAqB,mBAAoB,oBAAqB,oBAAqB,kBAAmB,mBAAoB,oBAAqB,mBAAoB,mBAAoB,OAAQ,QACrfC,SAAU,CAAC,YAAa,WAAY,mBAAoB,mBACxDC,WAAY,CAAC,eAAgB,uBAC7BC,WAAY,CAAC,MAAO,OAAQ,QAAS,OAAQ,QAAS,OAAQ,QAAS,QAAS,OAAQ,MAAO,OAAQ,UAAW,MAAO,QAAS,KAAM,MAAO,OAAQ,QAAS,KAAM,MAAO,UAAW,OAAQ,QAAS,MAAO,OAAQ,OAAQ,MAAO,QACvOC,YAAa,CAAC,eAAgB,iBAAkB,kBAChDC,aAAc,CAAC,SACf,QAAS,OAAQ,SAAU,QAAS,OAAQ,QAAS,UAAW,QAAS,OAAQ,QAAS,QAAS,SAAU,SAC7GC,oBAAqB,CAAC,mBAAoB,0BAA2B,eACrEC,UAAW,CAAC,OAAQ,SAAU,OAC9BC,aAAc,CAAC,MAAO,QAAS,MAAO,MAAO,SAAU,MAAO,YAAa,aAAc,cAAe,MAAO,aAAc,OAAQ,YAAa,QAAS,eAAgB,kBAAmB,kBAAmB,OAAQ,kBAAmB,cAC5OC,WAAY,CAAC,eAAgB,QAAS,cAAe,OAAQ,mBAAoB,KAAM,WAAY,OAAQ,OAAQ,aACnHC,MAAO,CAAC,iBAAkB,gCAC1BzC,IAAK,CAAC,WACN0C,MAAO,CAAC,QAAS,WAGjBC,UAAW,CAAC,QAAS,UAAW,UAAW,aAAc,aAAc,YC1EnE3F,GAAiB6B,GAAc,CAAC,mDAChC9B,GAAkB8B,GAAc,CACtC,mBAAoB,OAAQ,QAAS,WAAY,SAAU,UAAW,SAAU,eAAgB,WAAY,QAAS,SAAU,iBAG/H,gBAAiB,SACjB,SAAU,MACV,gBACA,iBACA,eAAgB,oDAAqD,aACrE,0DAA2D,+EAAgF,+CAC3I,0BAA2B,6BAA8B,0BAA2B,YAAa,2BAA4B,sBAC7H,cACA,gBACA,gBACA,gCAAiC,kBAAmB,aAAc,wBAClE,kBAAmB,yBAA0B,sEAAuE,yBAA0B,gBAAiB,gDAAiD,wDAAyD,WAAY,eAAgB,kBAAmB,UAAW,qBAAsB,oBAAqB,sCAAuC,2BAA4B,wCAAyC,oBAAqB,0BAA2B,uCAAwC,oCAAqC,6BAA8B,yBAA0B,+BAAgC,4BAA6B,+BAAgC,8BAA+B,gCAAiC,mBAC5yB,QAAS,SACT,UAAW,oBAAqB,OAAQ,WAAY,SAAU,aAAc,QAAS,YAAa,QAAS,QAAS,WAAY,UAAW,MAAO,UAAW,QAAS,oBAAqB,qBAAsB,uBAAwB,QAAS,SAAU,OAC5P,SACA,gBACM5B,GAAwB4B,GAAc,CAAC,yBAA0B,kBAAmB,uBACpF3B,GAAgB2B,GAAc,CAAC,OAAQ,qCAAsC,yBAC7EhC,GAAkBgC,GAAc,CACtC,qBACA,WAAY,cAAe,oBAC3B,2BAgDA,SAASvC,GAAY/U,GACnB,OAKF,SAA+BA,GAC7B,IAAIC,EAAY9B,GAChB,OAAO6B,EAAOrN,KAAImI,GACG,WAAfA,EAAMlO,MAAwC,MAAnBqT,EAAUrT,MACvCqT,EAAYnF,EACL,IAAKA,EACVtM,KAAMuP,GAAUgB,0BAGlBkB,EAAYnF,EACLA,IAGb,CAlBSugB,CAqBT,SAAmCrb,GACjC,MAAMsb,EAAY,GAElB,IAAK,IAAIjvB,EAAI,EAAGA,EAAI2T,EAAO1T,OAAQD,IAAK,CACtC,IAAIkvB,EAEJ,MAAMzgB,EAAQkF,EAAO3T,GAErB,IAAKyP,GAAQyC,MAAMzD,IAAUgB,GAAQ8C,OAAO9D,KAAkG,OAAxD,QAA7BygB,EAAUvb,EAAO3T,EAAI,UAA4B,IAAZkvB,OAAqB,EAASA,EAAQ3uB,MAAe,CACjJ,MAAM4uB,EAAWC,GAA6Bzb,EAAQ3T,EAAI,GACpDqvB,EAAgB1b,EAAO/Q,MAAM5C,EAAGmvB,EAAW,GACjDF,EAAUhtB,KAAK,CACbE,KAAMuP,GAAUoC,WAChBjC,IAAKwd,EAAc/oB,IAAIgpB,GAAmB,QAAQ1iB,KAAK,IACvDrM,KAAM8uB,EAAc/oB,IAAIgpB,GAAmB,SAAS1iB,KAAK,IACzD3B,MAAOwD,EAAMxD,QAEfjL,EAAImvB,CACV,MACMF,EAAUhtB,KAAKwM,EAElB,CAED,OAAOwgB,CACT,CA7C+BM,CAA0B5b,GACzD,CA8CA,MAAM2b,GAAqB3pB,GAAO8I,GAC5BA,EAAMtM,OAASuP,GAAUoC,YAAcrF,EAAMtM,OAASuP,GAAU2E,MAC3D5H,EAAM9I,GAAO,IAEb8I,EAAM9I,GAIjB,SAASypB,GAA6Bzb,EAAQ6b,GAC5C,IAAIC,EAAQ,EAEZ,IAAK,IAAIzvB,EAAIwvB,EAAYxvB,EAAI2T,EAAO1T,OAAQD,IAAK,CAC/C,MAAMyO,EAAQkF,EAAO3T,GAUrB,GARmB,MAAfyO,EAAMlO,KACRkvB,IACwB,MAAfhhB,EAAMlO,KACfkvB,IACwB,OAAfhhB,EAAMlO,OACfkvB,GAAS,GAGG,IAAVA,EACF,OAAOzvB,CAEV,CAED,OAAO2T,EAAO1T,OAAS,CACzB,CC3JO,MAAMosB,GAAY1Q,GAAgB,CAEvC6Q,UAAW,CAAC,YAAa,MAAO,OAAQ,cAAe,QAAS,YAAa,YAAa,aAAc,QAAS,aAAc,kBAAmB,YAAa,WAAY,UAAW,MAAO,SAAU,MAAO,kBAAmB,kBAAmB,eAAgB,YAAa,YAAa,aAAc,iBAAkB,YAAa,UAAW,aAAc,WAAY,WAAY,WAAY,aAAc,SAAU,cAAe,MAAO,UAAW,WAAY,MAAO,WAAY,gBAAiB,UAEjfkD,OAAQ,CAAC,MAAO,SAAU,OAAQ,WAAY,aAAc,eAAgB,cAAe,aAAc,aAAc,cAAe,aAAc,QAAS,YAAa,YAAa,WAAY,OAAQ,OAAQ,QAAS,QAAS,SAAU,SAAU,SAAU,YAAa,QAAS,SAAU,SAAU,OAAQ,QAAS,cAAe,iBAAkB,UAAW,OAAQ,OAAQ,QAAS,mBAAoB,cAAe,MAAO,OAAQ,WAAY,gBAAiB,mBAAoB,SAAU,WAAY,MAAO,OAAQ,OAAQ,MAAO,aAAc,YAAa,gBAAiB,YAAa,OAAQ,eAAgB,SAAU,WAAY,kBAAmB,mBAAoB,UAAW,MAAO,SAAU,iBAAkB,cAAe,eAAgB,aAAc,yBAA0B,sBAAuB,uBAAwB,yBAA0B,0BAA2B,0BAA2B,0BAA2B,6BAA8B,UAAW,aAAc,SAAU,mBAAoB,SAAU,kBAAmB,aAAc,aAAc,kBAAmB,eAAgB,MAAO,UAAW,QAAS,QAAS,kBAAmB,yBAA0B,UAAW,cAAe,UAAW,WAAY,OAAQ,aAAc,WAAY,YAAa,cAAe,MAAO,OAAQ,qBAAsB,SAAU,SAAU,QAAS,UAAW,MAAO,aAAc,WAAY,QAAS,QAAS,OAAQ,SAAU,KAAM,SAAU,mBAAoB,QAAS,QAAS,OAAQ,QAAS,MAAO,kBAAmB,cAAe,mBAAoB,MAAO,SAAU,MAAO,QAAS,iBAAkB,SAAU,aAAc,YAAa,gBAAiB,SAAU,eAAgB,WAAY,aAAc,qBAAsB,mBAAoB,SAAU,MAAO,UAAW,OAAQ,WAAY,SAAU,QAAS,MAAO,WAAY,UAAW,UAAW,cAAe,SAAU,OAAQ,OAAQ,eAAgB,eAAgB,cAAe,iBAAkB,gBAAiB,SAAU,UAAW,MAAO,QAAS,QAAS,kBAAmB,QAAS,OAAQ,QAAS,QAAS,SAAU,OAAQ,MAAO,OAAQ,WAAY,UAAW,YAAa,YAAa,aAAc,aAAc,QAAS,OAAQ,QAAS,UAAW,SAAU,WAAY,SAAU,YAAa,MAAO,OAAQ,OAAQ,YAAa,eAAgB,gBAAiB,mBAAoB,gBAAiB,eAAgB,UAAW,UAAW,UAAW,YAAa,aAAc,eAAgB,YAAa,OAAQ,aAAc,WAAY,QAAS,kBAAmB,QAAS,UAAW,cAAe,SAAU,QAAS,QAAS,YAAa,UAAW,WAAY,qBAAsB,iBAAkB,aAAc,wBAAyB,uBAAwB,uCAAwC,OAAQ,WAAY,OAAQ,gBAAiB,aAAc,YAAa,cAAe,aAAc,YAAa,YAAa,gBAAiB,WAAY,QAAS,WAAY,eAAgB,UAAW,iBAAkB,eAAgB,QAEjgG9jB,MAAO,CAAC,kBAAmB,oBAAqB,oBAAqB,mBAAoB,YAAa,gBAAiB,eAAgB,mBAAoB,YAE3J+jB,IAAK,CAAC,UAENC,KAAM,CAAC,YAAa,eAAgB,OAAQ,aAAc,QAAS,MAAO,OAAQ,aAAc,cAAe,aAAc,YAAa,mBAE1IC,KAAM,CAAC,UCZI7D,GAAWrQ,GAAgB,CAEtCmU,SAAU,CAAC,MAAO,WAAY,QAAS,WAAY,MAAO,KAAM,QAAS,eAAgB,aAAc,YAAa,UAAW,KAAM,QAAS,MAAO,YAAa,SAAU,QAAS,UAAW,aAAc,KAAM,UAAW,WAAY,OAAQ,QAAS,YAAa,QAAS,QAAS,UAAW,aAAc,SAAU,SAAU,YAAa,aAAc,aAAc,UAAW,WAAY,SAAU,OAAQ,UAAW,eAAgB,mBAAoB,eAAgB,iBAAkB,eAAgB,oBAAqB,UAAW,SAAU,OAAQ,WAAY,SAAU,UAAW,UAAW,aAAc,gBAAiB,UAAW,WAAY,WAAY,KAAM,WAAY,SAAU,UAAW,WAAY,OAAQ,SAAU,WAAY,aAAc,SAAU,WAAY,QAAS,SAAU,YAAa,SAAU,OAAQ,WAAY,SAAU,YAAa,QAAS,QAAS,MAAO,OAAQ,OAAQ,WAAY,YAAa,MAAO,SAAU,OAAQ,QAAS,UAAW,OAAQ,QAAS,KAAM,YAAa,KAAM,YAAa,QAAS,UAAW,QAAS,QAAS,cAAe,OAAQ,KAAM,SAAU,UAAW,MAAO,OAAQ,MAAO,WAAY,OAAQ,WAAY,QAAS,OAAQ,QAAS,SAAU,UAAW,WAAY,OAAQ,UAAW,WAAY,OAAQ,OAAQ,aAAc,eAAgB,eAAgB,gBAAiB,WAAY,SAAU,OAAQ,UAAW,KAAM,OAAQ,MAAO,OAAQ,QAAS,WAAY,OAAQ,KAAM,MAAO,KAAM,eAAgB,WAAY,QAAS,eAAgB,MAAO,QAAS,UAAW,YAAa,OAAQ,SAAU,YAAa,cAAe,eAAgB,OAAQ,YAAa,SAAU,OAAQ,YAAa,UAAW,QAAS,SAAU,aAAc,YAAa,UAAW,OAAQ,SAAU,QAAS,UAAW,QAAS,aAAc,WAAY,WAAY,SAAU,qBAAsB,SAAU,UAAW,OAAQ,SAAU,gBAAiB,aAAc,cAAe,kBAAmB,kBAAmB,gBAAiB,WAAY,MAAO,SAAU,SAAU,aAAc,UAAW,SAAU,WAAY,WAAY,YAAa,eAAgB,SAAU,OAAQ,SAAU,WAAY,WAAY,SAAU,YAAa,OAAQ,WAAY,SAAU,QAAS,UAAW,UAAW,UAAW,SAAU,eAAgB,QAAS,aAAc,OAAQ,KAAM,UAAW,OAAQ,OAAQ,SAAU,QAAS,OAAQ,QAAS,YAAa,WAAY,UAAW,OAAQ,aAAc,OAAQ,WAAY,UAAW,QAAS,MAAO,YAAa,UAAW,QAAS,UCEl+E1G,GAAiB6B,GAAc,CAAC,4BAChC9B,GAAkB8B,GAAc,CACtC,OAAQ,OAAQ,QAAS,WAAY,SAAU,eAAgB,4BAA6B,cAE5F,cAAe,SACf,SAAU,MAAO,mBAAoB,2BACrC,cACA,mBACA,aAAc,4BAA6B,aAAc,SACzD,2BAA4B,kCAAmC,yBAC/D,cAAe,eAAgB,gBAAiB,kBAAmB,iBAAkB,gBACrF,eACA,oDAEA,kBAAmB,iBAAkB,iBAAkB,cAAe,aAAc,mBAAoB,kBAAmB,iBAAkB,iBAAkB,mBAAoB,gBAAiB,wBAAyB,aAAc,qBAAsB,wBAAyB,OAAQ,QAAS,UAAW,SAAU,UAAW,eAAgB,yBAA0B,kBAAmB,kBAAmB,gCAAiC,eAAgB,wBAAyB,cAAe,oBAAqB,mBAAoB,cAAe,kBAAmB,kBAAmB,iBAAkB,oBAAqB,iBAAkB,yBAA0B,cAAe,kBAAmB,iBAAkB,iCAAkC,oBAAqB,gBAAiB,mBAAoB,kBAAmB,iBAAkB,kBAAmB,qBAAsB,iBAAkB,OAAQ,sBAAuB,WAAY,UAAW,oBAAqB,UAAW,QAAS,eAAgB,kBAAmB,QAAS,eAAgB,UAAW,QAAS,aAAc,OAAQ,UAAW,UAAW,UAAW,oBAAqB,SAAU,SAAU,WAAY,YAAa,cAAe,iBAAkB,0BAA2B,wCAAyC,0CAA2C,yBAA0B,qCAAsC,qBAAsB,2BAA4B,gCAAiC,8BAA+B,sDAAuD,gCAAiC,2BAA4B,yBAA0B,wBAAyB,iCAAkC,6CAA8C,0BAA2B,8BAA+B,oBAAqB,oBAAqB,qCAAsC,mCAAoC,0BAA2B,WAAY,aAAc,wBAAyB,SAAU,cAAe,WAC3gE,QAAS,KAAM,uBACT5B,GAAwB4B,GAAc,CAAC,cAAe,eAAgB,oBACtE3B,GAAgB2B,GAAc,CAAC,OAAQ,qCAAsC,yBAC7EhC,GAAkBgC,GAAc,CAAC,YAAa,YAAa,WAAY,2BCtBtE,MAAMoB,GAAY1Q,GAAgB,CAEvC0R,KAAM,CAAC,MAAO,OAAQ,OAAQ,OAAQ,MAAO,SAAU,OAAQ,OAAQ,UAAW,OAAQ,MAAO,UACjG,MAAO,YAAa,QAAS,WAAY,MAAO,QAAS,KAAM,MAAO,QAAS,OAAQ,WAAY,KAAM,OAAQ,WAAY,MAAO,QAAS,UAAW,OAAQ,QAAS,YAAa,aAAc,qBAAsB,OAAQ,MAAO,OAAQ,MAAO,QAAS,gBACjQ5V,MAAO,CAAC,iBAAkB,WAAY,aAAc,OAAQ,cAC5DkV,WAAY,CAAC,SAAU,QACvBC,KAAM,CAAC,aAAc,OAAQ,WAAY,cAAe,WAAY,WAAY,MAAO,UAAW,aAAc,YAAa,UAAW,gBAAiB,qBAAsB,OAAQ,WAAY,SAAU,QAAS,iBAAkB,WAAY,UAAW,SAAU,YAAa,UAAW,mBAAoB,QAAS,iBAAkB,aAAc,QAC9VkB,YAAa,CAAC,cAAe,WAAY,KAAM,YAAa,SAAU,SAAU,OAChFhJ,OAAQ,CAAC,QAAS,SAAU,mBAAoB,MAAO,SAAU,YAAa,iBAAkB,SAAU,MAAO,SAAU,QAAS,cAAe,gBAAiB,kBAAmB,UAAW,UAAW,QAAS,QAAS,SAAU,cAAe,SAAU,QAAS,OAAQ,QAAS,SAAU,eAAgB,YAAa,SAAU,QAAS,iBAAkB,iBAAkB,SAAU,UAAW,OAAQ,QAAS,YAAa,UAAW,QAAS,QAAS,aAAc,SAAU,YAAa,YAAa,OAAQ,QAAS,WAAY,SACzhBiL,QAAS,CAAC,OAAQ,eAAgB,YAAa,cAAe,oBAAqB,oBACnF5D,KAAM,CAAC,cAAe,cAAe,QAAS,mBAAoB,eAAgB,OAAQ,cAAe,iBAAkB,MAAO,UAAW,MAAO,OAAQ,OAAQ,gBAAiB,WACrLK,UAAW,CAAC,MAAO,eAAgB,cAAe,OAAQ,QAAS,YAAa,aAAc,oBAAqB,MAAO,MAAO,QAAS,aAAc,oBAAqB,YAAa,YAAa,aAAc,iBAAkB,UAAW,aAAc,WAAY,WAAY,WAAY,aAAc,cAAe,MAAO,UAAW,WAAY,YAC/V5gB,MAAO,CAAC,UAAW,SAAU,aAAc,kBAAmB,aAAc,SAE5EokB,OAAQ,CAAC,OAAQ,MAAO,cAAe,aAAc,OAAQ,aAAc,aAAc,YAAa,eAAgB,SAKtHjB,UAAW,CAAC,UAAW,UAAW,UAAW,UCnBlC/C,GAAWrQ,GAAgB,CAGtCsU,YAAa,CAAC,MAAO,QAAS,QAAS,UAAW,UAAW,MAAO,SAAU,SAAU,UAAW,UAAW,SAAU,UAAW,YAAa,gBAAiB,aAAc,UAAW,UAAW,UAAW,cAAe,UAAW,cAAe,WAAY,OAAQ,YAAa,WAAY,MAAO,eAAgB,WAAY,UAAW,YAAa,aAAc,OAAQ,cAAe,YAAa,UAAW,aAAc,YAAa,SAAU,UAAW,YAAa,UAAW,SAAU,SAAU,OAAQ,aAAc,QAAS,SAAU,YAAa,YAAa,eAAgB,OAAQ,gBAAiB,SAAU,QAAS,UAAW,SAAU,cAAe,cAAe,QAAS,MAAO,OAAQ,WAAY,QAAS,QAAS,OAAQ,WAAY,OAAQ,QAAS,UAAW,OAAQ,UAAW,eAAgB,WAAY,QAAS,SAAU,QAAS,OAAQ,SAAU,UAAW,UAAW,SAAU,eAAgB,eAAgB,YAAa,QAAS,cAAe,aAAc,OAAQ,SAAU,aAAc,aAAc,QAAS,OAAQ,WAAY,UAAW,eAAgB,eAAgB,SAAU,SAAU,SAAU,UAAW,cAAe,WAAY,UAAW,OAAQ,QAAS,SAAU,UAAW,SAAU,OAAQ,QAAS,kBAAmB,SAAU,OAAQ,SAAU,OAAQ,gBAAiB,SAAU,OAAQ,SAAU,MAAO,aAAc,SAAU,cAAe,SAAU,SAAU,SAAU,gBAAiB,YAAa,aAAc,UAAW,QAAS,eAAgB,YAAa,OAAQ,YAAa,SAAU,QAAS,WAAY,MAAO,MAAO,MAAO,eAAgB,aAAc,OAAQ,QAAS,OAAQ,aAAc,YAAa,QAAS,SAAU,WAAY,cAAe,OAAQ,QAAS,QAAS,MAAO,OAAQ,SAAU,aAAc,QAAS,OAAQ,WAAY,SAAU,MAAO,aAAc,WAAY,UAAW,UAAW,gBAAiB,OAAQ,QAAS,SAAU,QAAS,OAAQ,QAAS,UAAW,UAAW,cAAe,QACx8DC,SAAU,CAAC,MAAO,QAAS,MAAO,QAAS,KAAM,gBAAiB,UAAW,SAAU,SAAU,UAAW,OAAQ,KAAM,OAAQ,OAAQ,OAAQ,SAAU,OAAQ,SAAU,QAAS,OAAQ,UAAW,eAAgB,oBAAqB,SAAU,WAAY,OAAQ,UAAW,SAAU,WAAY,WAAY,SAAU,OAAQ,OAAQ,MAAO,WAAY,SAAU,WAAY,WAAY,QAAS,QAAS,QAAS,YAAa,MAAO,OAAQ,OAAQ,WAAY,QAAS,QAAS,WAAY,SAAU,KAAM,SAAU,KAAM,QAAS,SAAU,MAAO,YAAa,WAAY,OAAQ,KAAM,OAAQ,UAAW,OAAQ,OAAQ,OAAQ,QAAS,QAAS,MAAO,OAAQ,OAAQ,MAAO,OAAQ,KAAM,KAAM,KAAM,QAAS,MAAO,QAAS,OAAQ,cAAe,YAAa,UAAW,YAAa,WAAY,YAAa,QAAS,QAAS,SAAU,SAAU,QAAS,SAAU,MAAO,OAAQ,SAAU,MAAO,WAAY,QAAS,cAAe,OAAQ,YAAa,KAAM,YAAa,UAAW,OAAQ,WAAY,YAAa,QAAS,aAAc,SAAU,OAAQ,QAAS,eAAgB,SAAU,UAAW,OAAQ,QAAS,SAAU,OAAQ,SAAU,OAAQ,SAAU,QAAS,WAAY,QAAS,QAAS,aAAc,UAAW,UAAW,aAAc,YAAa,UAAW,QAAS,UAAW,YAAa,QAAS,OAAQ,UAAW,QAC30CC,UAAW,CAAC,WAAY,eAAgB,MAAO,MAAO,MAAO,UAAW,OAAQ,SAAU,WAAY,cAAe,kBCDjH/G,GAAiB6B,GAAc,CAAC,4BAChC9B,GAAkB8B,GAAc,CACtC,OAAQ,OAAQ,QAAS,WAAY,SAAU,SAAU,eAAgB,WAAY,UAAW,aAAc,gBAAiB,QAI/H,sBAAuB,SACvB,SAAU,MACV,cACA,mBACA,aAAc,4BAA6B,aAAc,kBAEzD,qCAEA,2BAA4B,yBAC5B,6CAA8C,sDAAuD,yBACrG,cAAe,YACf,QAAS,SAAU,MAAO,WAAY,OAAQ,QAAS,aACvD,OACA,YAAa,YAAa,eACpB5B,GAAwB4B,GAAc,CAAC,2BACvC3B,GAAgB2B,GAAc,CAAC,OAAQ,qCAAsC,uBACnF,mBACMhC,GAAkBgC,GAAc,CAAC,2BC3BhC,MAAMe,GAAWrQ,GAAgB,CAEtCyU,IAAK,CAAC,aAAc,UAAW,SAAU,MAAO,QAAS,QAAS,UAAW,YAAa,MAAO,YAAa,QAAS,SAAU,UAAW,MAAO,MAAO,KAAM,MAAO,QAAS,aAAc,KAAM,SAAU,UAAW,iBAAkB,kBAAmB,OAAQ,MAAO,iBAAkB,SAAU,SAAU,QAAS,UAAW,SAAU,SAAU,SAAU,MAAO,OAAQ,QAAS,OAAQ,OAAQ,UAAW,OAAQ,QAAS,KAAM,OAAQ,QAAS,OAAQ,UAAW,WAAY,OAAQ,eAAgB,QAAS,SAAU,UAAW,OAAQ,YAAa,UAAW,QAAS,aAAc,WAAY,SAAU,eAAgB,SAAU,OAAQ,QAAS,WAAY,OAAQ,UAAW,YAAa,SAAU,cAAe,UAAW,aAAc,eAAgB,gBAAiB,gBAAiB,aAAc,UAAW,SAAU,YAAa,UAAW,aAAc,aAAc,aAAc,YAAa,aAAc,aAAc,aAAc,qBAAsB,kBAAmB,oBAAqB,WAAY,UAAW,WAAY,eAAgB,UAAW,MAAO,SAAU,QAAS,OAAQ,UAAW,eAAgB,cAAe,eAAgB,eAAgB,oBAAqB,eAAgB,SAAU,cAAe,QAAS,OAAQ,WAAY,YAAa,WAAY,OAAQ,WAAY,MAAO,WAAY,kBAAmB,aAAc,aAAc,aAAc,MAAO,UAAW,UAAW,UAAW,UAAW,UAAW,kBAAmB,SAAU,mBAAoB,OAAQ,WAAY,eAAgB,gBAAiB,cAAe,YAAa,UAAW,UAAW,OAAQ,WAAY,cAAe,MAAO,KAAM,SAAU,gBAAiB,OAAQ,OAAQ,WAAY,YAAa,UAAW,OAAQ,OAAQ,SAAU,QAAS,QAAS,SAAU,WAAY,MAAO,OAAQ,SAAU,UAAW,OAAQ,QAAS,SAAU,SAAU,UAAW,QAAS,SAAU,QAAS,WAAY,SAAU,WAAY,UAAW,UAAW,YAAa,SAAU,OAAQ,YAAa,SAAU,SAAU,UAAW,WAAY,cAAe,QAAS,OAAQ,SAAU,YAAa,QAAS,SAAU,OAAQ,QAAS,QAAS,QAAS,SAAU,SAAU,QAAS,YAAa,UAAW,MAAO,QAAS,UAAW,SAAU,QAAS,OAAQ,OAAQ,WAAY,WAAY,UAAW,YAAa,aAAc,MAAO,SAAU,OAAQ,QAAS,SAAU,QAAS,UAAW,OAAQ,OAAQ,SAAU,OAAQ,gBAAiB,UAAW,OAAQ,QAAS,OAAQ,mBAAoB,cAAe,cACv+E,aAAc,KAAM,SAAU,UAAW,oBAAqB,oBAAqB,YAAa,SAAU,YAAa,KAAM,YAAa,QAAS,UAAW,SAAU,eAAgB,QAAS,QAAS,cAAe,SAAU,gBAAiB,UAAW,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,UAAW,WAAY,YAAa,OAAQ,KAAM,YAAa,MAAO,KAAM,YAAa,SAAU,SAAU,UAAW,UAAW,OAAQ,OAAQ,aAAc,MAAO,OAAQ,iBAAkB,OAAQ,WAAY,OAAQ,aAAc,UAAW,UAAW,QAAS,SAAU,OAAQ,OAAQ,QAAS,OAAQ,QAAS,SAAU,QAAS,OAAQ,OAAQ,QAAS,YAAa,iBAAkB,OAAQ,SAAU,QAAS,UAAW,OAAQ,OAAQ,WAAY,WAAY,OAAQ,eAAgB,SAAU,uBAAwB,eAAgB,kBAAmB,cAAe,kBAAmB,iBAAkB,kBAAmB,cAAe,mBAAoB,aAAc,gBAAiB,oBAAqB,kBAAmB,oBAAqB,iBAAkB,qBAAsB,iBAAkB,gCAAiC,cAAe,kBAAmB,0BAA2B,QAAS,2BAA4B,uBAAwB,WAAY,WAAY,qBAAsB,uBAAwB,uBAAwB,WAAY,SAAU,aAAc,YAAa,aAAc,SAAU,QAAS,eAAgB,cAAe,YAAa,UAAW,QAAS,SAAU,qBAAsB,gBAAiB,WAAY,WAAY,MAAO,OAAQ,WAAY,SAAU,UAAW,QAAS,QAAS,QAAS,cAAe,OAAQ,QAAS,WAAY,UAAW,QAAS,SAAU,QAAS,MAAO,OAAQ,UAAW,KAAM,aAAc,aAAc,UAAW,UAAW,UAAW,SAAU,YAAa,OAAQ,MAAO,WAAY,qBAAsB,OAAQ,SAAU,UAAW,WAAY,KAAM,SAAU,eAAgB,KAAM,MAAO,SAAU,OAAQ,OAAQ,WAAY,UAAW,SAAU,aAAc,KAAM,QAAS,aAAc,SAAU,MAAO,QAAS,UAAW,OAAQ,WAAY,QAAS,UAAW,YAAa,OAAQ,gBAAiB,SAAU,kBAAmB,OAAQ,SAAU,UAAW,YAAa,eAAgB,aAAc,WAAY,aAAc,QAAS,SAAU,UAAW,OAAQ,UAAW,WAAY,YAAa,YAAa,UAAW,WAAY,OAAQ,WAAY,UAAW,aAAc,YAAa,UAAW,cAAe,UAAW,WAAY,QAAS,QAAS,UAAW,QAAS,QAAS,QAAS,QAAS,MAAO,OAAQ,YAAa,aAAc,QAAS,OAAQ,UAAW,UAAW,YAAa,mBAAoB,WAAY,YAAa,aAAc,SAAU,QAAS,WAAY,iBAAkB,gBAAiB,eAAgB,UAAW,SAAU,SAAU,SAAU,aAAc,SAAU,aAAc,UAAW,SAAU,UAAW,WAAY,cAAe,cAAe,SAAU,UAAW,QAAS,WAAY,UAAW,UAAW,WAAY,SAAU,oBAAqB,SAAU,YAAa,UAAW,QAAS,UAAW,SAAU,QAAS,QAAS,OAAQ,WAAY,SAAU,UAAW,MAAO,WAAY,SAAU,OAAQ,UAAW,YAAa,aAAc,QAAS,YAAa,WAAY,SAAU,cAAe,UAAW,SAAU,qBAAsB,WAAY,SAAU,YAAa,YAAa,WAAY,SAAU,eAAgB,UAAW,SAAU,MAAO,SAAU,QAAS,OAAQ,WAAY,SAAU,SAAU,SAAU,OAAQ,QAAS,SAAU,YAAa,OAAQ,WAAY,WAAY,SAAU,OAAQ,OAAQ,SAAU,SAAU,SAAU,QAAS,SAAU,UAAW,WAAY,gBAAiB,MAAO,eAAgB,WAAY,aAAc,iBAAkB,oBAAqB,YAAa,sBAAuB,eAAgB,mBAAoB,aAAc,iBAAkB,iBAAkB,eAAgB,cAAe,eAAgB,gBAAiB,kBAAmB,eAAgB,MAAO,QAAS,WAAY,SAAU,YAAa,oBAAqB,mBAAoB,qBAAsB,SAAU,OAAQ,UAAW,gBAAiB,SAAU,kBAAmB,UAAW,eAAgB,gBAAiB,QAAS,UAAW,QAAS,WAAY,UAAW,SAAU,cAAe,QAAS,aAAc,SAAU,aAAc,iBAAkB,YAAa,YAAa,aAAc,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,YAAa,eAAgB,gBAAiB,WAAY,UAAW,WAAY,KAAM,WAAY,cAAe,gBAAiB,UAAW,UAAW,WAAY,OAAQ,WAAY,OAAQ,QAAS,YAAa,cAAe,YAAa,mBAAoB,WAAY,OAAQ,UAAW,QAAS,SAAU,UAAW,SAAU,YAAa,WAAY,QAAS,SAAU,UAAW,QAAS,MAAO,OAAQ,iBAAkB,UAAW,QAAS,WAAY,WAAY,gBAAiB,QAAS,SAAU,YAAa,UAAW,eAAgB,WAAY,YAAa,UAAW,MAAO,OAAQ,UAAW,UAAW,aAAc,OAAQ,WAAY,OAAQ,gBAAiB,OAAQ,QAAS,QAAS,SAAU,OAAQ,SAAU,UAAW,OAAQ,UAAW,QAAS,OAAQ,MAAO,KAAM,MAAO,OAAQ,aAAc,cCH1vK/D,GAAY1Q,GAAgB,CAEvCyU,IAAK,CAAC,UAAW,aAAc,UAAW,SAAU,UAAW,OAAQ,QAAS,YAAa,UAAW,UAAW,WAAY,WAAY,cAAe,SAAU,aAAc,UAAW,cAAe,eAAgB,gBAAiB,iBAAkB,MAAO,OAAQ,MAAO,SAAU,MAAO,MAAO,MAAO,YAAa,QAAS,WAAY,eAAgB,kBAAmB,kBAAmB,OAAQ,aAAc,eAAgB,MAAO,SAAU,aAAc,cAAe,UAAW,SAAU,YAAa,MAAO,cAAe,OAAQ,cAAe,WAAY,UAAW,WAAY,MAAO,OAAQ,UAAW,cAAe,cAAe,OAAQ,OAAQ,QAAS,YAAa,MAAO,kBAAmB,YAAa,aAAc,OAAQ,UAAW,mBAAoB,cAAe,MAAO,eAAgB,eAAgB,gBAAiB,cAAe,cAAe,WAAY,SAAU,yBAA0B,YAAa,gBAAiB,OAAQ,aAAc,MAAO,MAAO,QAAS,WAAY,UAAW,aAAc,YAAa,YAAa,UAAW,mBAAoB,gBAAiB,cAAe,cAAe,MAAO,SAAU,UAAW,MAAO,aAAc,eAAgB,QAAS,cAAe,QAAS,SAAU,aAAc,cAAe,YAAa,gBAAiB,WAAY,WAAY,MAAO,SAAU,QAAS,SAAU,eAAgB,eAAgB,aAAc,oBAAqB,oBAAqB,eAAgB,gBAAiB,qBAAsB,aAAc,gBAAiB,cAAe,eAAgB,cAAe,YAAa,cAAe,aAAc,aAAc,mBAAoB,sBAAuB,aAAc,aAAc,cAAe,cAAe,eAAgB,WAAY,cAAe,YAAa,eAAgB,aAAc,aAAc,WAAY,iBAAkB,QAAS,QAAS,SAAU,UAAW,KAAM,YAAa,SAAU,MAAO,QAAS,OAAQ,QAAS,OAAQ,cAAe,QAAS,eAAgB,WAAY,WAAY,WAAY,mBAAoB,kBAAmB,MAAO,YAAa,aAAc,MAAO,OAAQ,MAAO,eAAgB,MAAO,aAAc,cAAe,KAAM,MAAO,QAAS,QAAS,eAAgB,iBAAkB,gBAAiB,UAAW,OAAQ,oBAAqB,eAAgB,iBAAkB,UAAW,QAAS,OAAQ,cAAe,QAAS,eAAgB,cAAe,MAAO,OAAQ,OAAQ,OAAQ,MAAO,QAAS,UAAW,QAAS,OAAQ,SAAU,cAAe,gBAAiB,kBAAmB,UAAW,WAAY,MAAO,WAAY,cAAe,cAAe,YAAa,UAAW,UAAW,aAAc,QAAS,aAAc,sBAAuB,QAAS,iBAAkB,YAAa,QAAS,OAAQ,aAAc,UAAW,UAAW,aAAc,0BAA2B,uBAAwB,4BAA6B,WAC53F,WAAY,SAEZ,UAAW,WAAY,YAAa,MAAO,UAAW,SAAU,UAAW,MAAO,UAAW,QAC7F,QAAS,SAAU,mBAAoB,OAAQ,MAAO,SAAU,OAAQ,OAAQ,gBAAiB,YAAa,OAAQ,YAAa,UAAW,mBAC9I,OAAQ,WAAY,YAAa,UCF7BhH,GAAiB6B,GAAc,CAAC,0CAChC9B,GAAkB8B,GAAc,CACtC,mBAAoB,OAAQ,QAAS,WAAY,SAAU,eAAgB,WAAY,QAAS,SAAU,uBAE1G,kEAAmE,0CAA2C,SAC9G,iCAAkC,MAClC,8CACA,mBACA,yFAA0F,wDAAyD,qCACnJ,4CAA6C,+BAAgC,yCAA0C,4BAA6B,cAAe,gBAAiB,iBAAkB,uBACtM,4BAEA,iBAAkB,yBAA0B,cAAe,iBAAkB,kBAAmB,eAAgB,uBAAwB,iBAAkB,eAAgB,aAAc,aAAc,UAAW,gBAAiB,cAAe,eAAgB,gBAAiB,QAAS,SAAU,cAAe,OAAQ,mBAAoB,cAAe,aAAc,iBAAkB,SAAU,4BAA6B,kBAAmB,eAAgB,kBAAmB,eAAgB,mBAAoB,cAAe,kBAAmB,gBAAiB,uBAAwB,iBAAkB,sBAAuB,cAAe,qBAAsB,WAAY,KAAM,gBAAiB,aAAc,gBAAiB,aAAc,eAAgB,iBAAkB,YAAa,gBAAiB,cAAe,eAAgB,YAAa,YAAa,UAAW,UAAW,QAAS,kBAAmB,4BAA6B,QAAS,UAAW,OAAQ,iBAAkB,iBAAkB,OAAQ,mBAAoB,wBAAyB,kBAAmB,aAAc,iBAAkB,UAAW,oBAAqB,oBAAqB,oBAAqB,eAAgB,cAAe,eAAgB,cAAe,eAAgB,oBAAqB,gBAAiB,cAAe,WAAY,YAAa,SAAU,WAAY,YAAa,oBAAqB,mBAAoB,yBAA0B,YAAa,eAAgB,WAAY,gBAAiB,kBAAmB,OAAQ,2BAA4B,yBAA0B,eAAgB,mBAAoB,qBAAsB,qBAAsB,qBAAsB,yBAA0B,iBAAkB,eAAgB,oBAAqB,uBAAwB,oBAAqB,uBAAwB,sBAAuB,2BAA4B,wBAAyB,uBAAwB,oBAAqB,sBAAuB,mBAAoB,mBAAoB,iBAAkB,cAAe,4BAA6B,eAAgB,cAAe,cAAe,eAAgB,qBAAsB,uBAAwB,cAAe,aAAc,eAAgB,wBAAyB,YAAa,eAAgB,mBAAoB,qBAAsB,mBAAoB,yBAA0B,2BAA4B,sBAAuB,eAAgB,sBAAuB,kBAAmB,sBAAuB,wBAAyB,mBAAoB,eAAgB,gBAAiB,2BAA4B,uBAAwB,eAAgB,qBAAsB,sBAAuB,eAAgB,aAAc,mBAAoB,oBAAqB,cAAe,uBAAwB,oBAAqB,cAAe,gBAAiB,uBAAwB,iBAAkB,gBAAiB,wBAAyB,oBAAqB,WAAY,SAAU,qBAAsB,mBAAoB,gBAAiB,cAAe,oBAAqB,oBAAqB,kBAAmB,eAAgB,aAAc,mBAAoB,mBAAoB,eAAgB,MAAO,WAAY,YAAa,SAAU,aAAc,aAAc,cAAe,aAC1tG5B,GAAwB4B,GAAc,CAAC,yBAA0B,0BAA2B,6BAA8B,2BAC1H3B,GAAgB2B,GAAc,CAAC,OAAQ,8BAA+B,uBAAwB,eAAgB,sCACpH,kBACMhC,GAAkBgC,GAAc,CAAC,gDAAiD,gBAAiB,2BAmDzG,SAASvC,GAAY/U,GACnB,OAAOA,EAAOrN,KAAI,CAACmI,EAAOzO,KACxB,MAAMgU,EAAYL,EAAO3T,EAAI,IAAM8R,GAEnC,OAAIrC,GAAQ4C,IAAI5D,IAA6B,MAAnBuF,EAAUzT,KAE3B,IAAKkO,EACVtM,KAAMuP,GAAUgB,wBAIbjE,CAAK,GAEhB,CCrFO,MAAMud,GAAWrQ,GAAgB,CAEtCyU,IAAK,CAAC,aACN,UAAW,SAAU,SAAU,MAC/B,QAAS,QAAS,UAAW,YAAa,YAAa,MACvD,QACA,SAAU,UACV,MACA,MAAO,QAAS,KAChB,MACA,QAAS,aACT,KAAM,YAAa,iBAAkB,kBAAmB,iBAAkB,MAAO,iBAAkB,SAAU,SAC7G,QAAS,UACT,SACA,SACA,SAAU,MAAO,OACjB,QAAS,OAAQ,UAAW,OAC5B,QAAS,UAAW,KACpB,OAAQ,QAAS,OACjB,UACA,WAAY,OACZ,eAAgB,QAAS,qBAAsB,SAC/C,UAAW,UAAW,OACtB,YACA,UAAW,QACX,WAAY,SAAU,eAAgB,SAAU,QAAS,QAAS,WAAY,OAAQ,UACtF,YAAa,SACb,UAAW,gBAAiB,cAAe,UAAW,SAAU,YAAa,UAAW,aAAc,YAAa,aAAc,cAAe,aAAc,YAC9J,aAAc,aAAc,aAC5B,qBAAsB,kBAAmB,oBAAqB,WAAY,UAAW,WACrF,UACA,MAAO,SACP,QACA,OACA,YACA,UAAW,eACX,eACA,oBACA,eACA,SACA,cAAe,OAAQ,WACvB,YACA,WAAY,OAAQ,WAAY,MAAO,WACvC,kBACA,aACA,aACA,aAAc,MACd,UACA,UACA,UACA,eAAgB,UAAW,aAAc,UACzC,kBAAmB,SACnB,aACA,OACA,WACA,cAAe,gBACf,cAAe,YAAa,UAAW,UAAW,OAAQ,WAC1D,cACA,MACA,KAAM,SACN,OACA,OACA,WAAY,YAAa,UAAW,OACpC,OACA,SACA,QACA,SAAU,WACV,aAAc,MAAO,OAAQ,WAAY,SAAU,UAAW,mBAAoB,OAAQ,QAAS,SAAU,SAAU,UACvH,QAAS,SAAU,QAAS,SAC5B,WAAY,UAAW,UAAW,SAClC,OACA,YAAa,SAAU,UACvB,SAAU,WAAY,cAAe,SAAU,wBAAyB,QACxE,OAAQ,SAAU,QAClB,SAAU,OAAQ,kBAAmB,SAAU,SAAU,QAAS,cAClE,QAAS,QACT,SACA,SACA,QAAS,YAAa,UAAW,MACjC,QACA,UACA,SAAU,QAAS,OACnB,OAAQ,WACR,WACA,UAAW,YACX,iBAAkB,WAAY,qBAAsB,MACpD,aAAc,wBAAyB,wBAAyB,SAAU,QAC1E,SAAU,QACV,WACA,SACA,oBAAqB,YAAa,UAAW,OAAQ,SACrD,OAAQ,gBACR,YAAa,UAAW,OAAQ,QAAS,OAAQ,mBACjD,cACA,cACA,aAAc,KACd,SACA,oBAAqB,SAAU,KAC/B,WAAY,QACZ,UAAW,SACX,UAAW,eAAgB,WAAY,QACvC,QACA,cACA,SACA,gBAAiB,UAAW,WAAY,KACxC,MACA,OACA,OACA,OACA,OACA,OACA,UACA,YACA,WACA,OACA,YAAa,UAAW,KAAM,iBAC9B,kBACA,YAAa,MAAO,KACpB,YAAa,SAAU,UACvB,OACA,OAAQ,aACR,aAAc,MACd,UAAW,OACX,iBAAkB,OAClB,MACA,WAAY,OAAQ,aACpB,UACA,OACA,UACA,QACA,SAAU,OACV,OAAQ,QAAS,OACjB,QACA,SACA,QACA,aAAc,OAAQ,OACtB,QAAS,YACT,iBACA,OACA,SAAU,QAAS,UAAW,OAAQ,OACtC,WACA,WACA,OACA,eACA,SAAU,uBAAwB,cAClC,gCAAiC,uBAAwB,eAAgB,0BAA2B,cAAe,kBAAmB,iBAAkB,kBAAmB,cAAe,yBAA0B,qBAAsB,aAAc,gBAAiB,oBAAqB,kBAAmB,oBAAqB,iBAAkB,qBAAsB,iBAAkB,gCAChY,0BAA2B,qBAAsB,cAAe,gCAAiC,QACjG,WACA,2BAA4B,uBAAwB,WAAY,WAAY,uBAAwB,uBAAwB,SAAU,aACtI,YACA,aACA,SAAU,SAAU,QAAS,eAAgB,cAAe,YAC5D,UAAW,SAAU,qBACrB,gBACA,WAAY,MACZ,OAAQ,WACR,SAAU,QAAS,kBAAmB,aAAc,eAAgB,QAAS,cAAe,OAAQ,QAAS,WAAY,UACzH,QAAS,MAAO,aAAc,SAAU,oBAAqB,QAAS,MAAO,OAAQ,KAAM,YAAa,OAAQ,MAChH,SAAU,UAAW,qBACrB,YACA,QACA,OACA,QAAS,SAAU,UACnB,WAAY,KACZ,MAAO,SAAU,KAAM,MAAO,KAC9B,MAAO,OAAQ,OAAQ,WACvB,kBACA,SACA,WAAY,aACZ,UAAW,KACX,QACA,aAAc,eAAgB,SAAU,MACxC,QACA,UACA,OACA,QAAS,YAAa,OAAQ,SAAU,UAAW,YACnD,eAAgB,aAAc,WAAY,qBAAsB,OAAQ,eACxE,UAAW,eAAgB,QAAS,SAAU,UAAW,aAAc,QAAS,UAAW,OAAQ,WAAY,YAAa,YAC5H,UAAW,WAAY,OAAQ,UAC/B,aAAc,wBAAyB,YACvC,UAAW,cAAe,UAAW,WAAY,QAAS,QAC1D,UAAW,QAAS,QAAS,SAAU,QACvC,OACA,OACA,QACA,YAAa,aACb,OACA,UAAW,UAAW,YACtB,mBAAoB,YAAa,YAAa,aAC9C,SACA,eAAgB,QAAS,WAAY,iBAAkB,gBAAiB,eAAgB,UACxF,SAAU,SAAU,SACpB,aAAc,SAAU,SACxB,aAAc,UACd,UAAW,WAAY,kBAAmB,qBAAsB,sBAAuB,yBAA0B,uBAAwB,0BAA2B,8BAA+B,cAAe,UAClN,qBAAsB,QAAS,WAC/B,WAAY,UAAW,UAAW,UAAW,WAC7C,SAAU,SAAU,SACpB,oBAAqB,YAAa,UAAW,QAAS,UAAW,SACjE,QACA,QACA,OAAQ,WAAY,SAAU,SAAU,UAAW,MACnD,OACA,YAAa,aAAc,aAC3B,QAAS,YAAa,WAAY,SAClC,UACA,cAAe,SAAU,YAAa,mBAAoB,6BAA8B,iBAAkB,mBAAoB,qBAC9H,WAAY,SACZ,YACA,YACA,SAAU,eAAgB,SAAU,UAAW,MAC/C,QAAS,OACT,WAAY,SACZ,SAAU,SAAU,OAAQ,QAAS,OAAQ,WAC7C,WAAY,SAAU,OAAQ,SAAU,SAAU,SAAU,uBAAwB,cAAe,gCAAiC,uBAAwB,eAAgB,0BAA2B,cAAe,kBAAmB,iBAAkB,kBAAmB,cAAe,yBAA0B,qBAAsB,aAAc,gBAAiB,oBAAqB,kBAAmB,oBAAqB,iBAAkB,qBAAsB,iBAAkB,gCAAiC,0BAA2B,qBAAsB,cAAe,gCAAiC,UACrmB,WACA,MACA,eACA,WACA,aACA,kBAAmB,qBAAsB,mBAAoB,iBAC7D,oBAAqB,sBACrB,eAAgB,mBAChB,aAAc,cAAe,eAAgB,iBAAkB,gBAAiB,kBAAmB,iBAAkB,eAAgB,eAAgB,OAAQ,MAC7J,UAAW,QAAS,WACpB,SAAU,oBAAqB,mBAAoB,qBAAsB,SAAU,OAAQ,UAAW,SACtG,gBACA,SAAU,SAAU,kBAAmB,UAAW,eAAgB,gBAAiB,QAAS,UAAW,QAAS,WAAY,SAC5H,QACA,SAAU,aAAc,iBAAkB,aAAc,YAAa,YAAa,aAClF,OAAQ,OAAQ,OAChB,kBAAmB,OAAQ,OAAQ,YAAa,eAAgB,gBAAiB,WACjF,UACA,WACA,MAAO,KACP,WACA,cAAe,UACf,WAAY,OACZ,WAAY,OAAQ,QAAS,YAAa,cAAe,YAAa,OACtE,WAAY,mBAAoB,UAAW,YAAa,QACxD,SACA,UAAW,SACX,aAAc,WACd,QAAS,SACT,UAAW,QACX,MACA,OAAQ,iBAAkB,UAAW,QACrC,WACA,WACA,gBACA,aAAc,QAAS,SACvB,YACA,UACA,eACA,YAAa,UACb,OAAQ,OAAQ,UAChB,UAAW,OAAQ,WAAY,OAAQ,gBAAiB,OACxD,QACA,QACA,SACA,OACA,UAAW,OAAQ,UAAW,QAC9B,OAAQ,KAAM,MAAO,MAAO,MAC5B,OAAQ,aACR,WACA,UCzQW/D,GAAY1Q,GAAgB,CAEvCyU,IAAK,CAAC,MAAO,OAAQ,UAAW,UAAW,cAAe,cAC1D,YAAa,QAAS,OAAQ,OAAQ,QAAS,MAAO,YAAa,MAAO,cAAe,SAAU,UAAW,YAAa,aAAc,SAAU,UAAW,oBAAqB,sBAAuB,mBAAoB,kBAAmB,kBAAmB,OAAQ,OAAQ,UAAW,OAAQ,cAAe,mBAAoB,UAAW,WAAY,eAAgB,YAAa,WAAY,SAAU,YAAa,gBAAiB,OAAQ,UAAW,aAAc,MAAO,MAAO,QAAS,QAAS,YAAa,UAAW,eAAgB,eAAgB,eAAgB,oBAAqB,eAAgB,UAAW,WAAY,OAAQ,WAAY,cAAe,WAAY,WAAY,MAAO,UAAW,aAAc,YAAa,YAAa,UAAW,UAAW,aAAc,MAAO,MAAO,MAAO,aAAc,UAAW,eAAgB,QAAS,cAAe,cAAe,QAAS,SAAU,eAAgB,mBAAoB,aAAc,cAAe,YAAa,gBAAiB,iBAAkB,qBAAsB,2BAA4B,wBAAyB,+BAAgC,aAAc,WAAY,WAAY,eAAgB,WAAY,cAAe,gBAAiB,MAAO,OAAQ,cAAe,KAAM,SAC1uC,YAAa,YAAa,aAAc,aAAc,SAAU,QAAS,0BAA2B,0BAA2B,sBAAuB,oBAAqB,qBAAsB,uBAAwB,0BAA2B,gCAAiC,iCAAkC,wBAAyB,wBAAyB,qCAAsC,oCAAqC,wBAAyB,2BAA4B,6BAA8B,yBAA0B,2BAA4B,sBAAuB,uBAAwB,WAAY,KAAM,eAAgB,UAAW,iBAAkB,iBAAkB,UAAW,SAAU,cAAe,UAAW,eAAgB,UAAW,SAAU,aAAc,oBAAqB,oBAAqB,gBAAiB,gBAAiB,qBAAsB,aAAc,eAAgB,cAAe,YAAa,cAAe,aAAc,mBAAoB,sBAAuB,cAAe,iBAAkB,gBAAiB,cAAe,aAAc,cAAe,eAAgB,oBAAqB,gCAAiC,cAAe,WAAY,oBAAqB,oBAAqB,aAAc,YAAa,eAAgB,aAAc,aAAc,MAAO,WAAY,iBAAkB,aAAc,QAAS,OAAQ,QAAS,OAAQ,SAAU,OAAQ,aAAc,KAAM,YAAa,YAAa,iBAAkB,SAAU,MAAO,QAAS,OAAQ,QAAS,OAAQ,QAAS,WAAY,WAAY,WAAY,kBAAmB,QAAS,MAAO,cAAe,eAAgB,YAAa,cAAe,YAAa,gBAAiB,cAAe,aAAc,YAAa,MAAO,YAAa,cAAe,MAAO,MAAO,SAAU,MAAO,QAAS,YAAa,kBAAmB,aAAc,eAAgB,aAAc,MAAO,SAAU,WAAY,aAAc,MAAO,YAAa,QAAS,SAAU,MAAO,eACh9D,MAAO,eAAgB,aAAc,cAAe,KAAM,QAAS,UAAW,WAAY,MAAO,QAAS,uBAAwB,eAAgB,UAAW,QAAS,UAAW,OAAQ,eAAgB,OAAQ,SAAU,eAAgB,cAAe,iBAAkB,gBAAiB,oBAAqB,eAAgB,SAAU,UAAW,UAAW,QAAS,QAAS,gBAAiB,QAAS,YAAa,aAAc,OAAQ,QAAS,SAAU,cAAe,SAAU,eAAgB,OAAQ,OAAQ,OAAQ,MAAO,QAAS,UAAW,cAAe,kBAAmB,QAAS,OAAQ,UAAW,cAAe,eAAgB,YAAa,YAAa,qBAAsB,cAAe,aAAc,cAAe,gBAAiB,aAAc,gBAAiB,eAAgB,cAAe,cAAe,qBAAsB,cAAe,cAAe,YAAa,kBAAmB,qBAAsB,aAAc,sBAAuB,qBAAsB,eAAgB,kBAAmB,qBAAsB,kBAAmB,iBAAkB,uBAAwB,mBAAoB,kBAAmB,gBAAiB,cAAe,aAAc,cAAe,aAAc,oBAAqB,cAAe,YAAa,kBAAmB,iBAAkB,0BAA2B,2BAA4B,qBAAsB,eAAgB,kBAAmB,mBAAoB,kBAAmB,oBAAqB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,qBAAsB,eAAgB,cAAe,qBAAsB,sBAAuB,mBAAoB,kBAAmB,YAAa,kBAAmB,iBAAkB,cAAe,UAAW,gBAAiB,YAAa,mBAAoB,aAAc,eAAgB,WAAY,cAAe,YAAa,OAAQ,OAAQ,mBAAoB,wBAAyB,MAAO,SAAU,aAAc,cAAe,cAAe,SAAU,UAAW,SAAU,YAAa,kBAAmB,UAAW,MAAO,UAAW,cAAe,MAAO,OAAQ,cAAe,cAAe,WAAY,YAAa,eAAgB,gBAAiB,YAAa,UAAW,aAAc,OAAQ,WAAY,QAAS,aAAc,sBAAuB,QAAS,iBAAkB,YAAa,QAAS,OAAQ,WAAY,WAAY,gBAAiB,OAAQ,aAAc,cAAe,6BAA8B,SAAU,UAAW,WAAY,WAAY,UAAW,6BAA8B,oCAAqC,OAAQ,UAAW,aAAc,gBACvlF,OAAQ,WAER,MAAO,UAAW,WAAY,YAAa,MAAO,UAAW,SAAU,UAAW,MAAO,UAAW,QAAS,QAAS,SAAU,mBAAoB,OAAQ,WAAY,YAAa,OAAQ,OAAQ,OAAQ,gBAAiB,UAAW,mBAAoB,SAAU,YAAa,OAAQ,OAAQ,UCHhShH,GAAiB6B,GAAc,CAAC,0CAChC9B,GAAkB8B,GAAc,CACtC,mBAAoB,OAAQ,QAAS,WAAY,SAAU,SAAU,eAAgB,WAAY,QAAS,SAE1G,kEAAmE,0CAA2C,SAC9G,iCAAkC,MAClC,8CACA,mBACA,yFAA0F,2CAA4C,qCACtI,cAAe,eAAgB,6BAA8B,gBAAiB,mBAAoB,gBAAiB,iBAAkB,uBAErI,iBAAkB,cAAe,iBAAkB,iBAAkB,sBAAuB,kBAAmB,uBAAwB,eAAgB,mBAAoB,aAAc,aAAc,gBAAiB,SAAU,cAAe,OAAQ,mBAAoB,4BAA6B,+BAAgC,cAAe,iBAAkB,QAAS,SAAU,kBAAmB,eAAgB,kBAAmB,kBAAmB,eAAgB,uBAAwB,mBAAoB,wBAAyB,cAAe,gBAAiB,kCAAmC,oBAAqB,iBAAkB,cAAe,qBAAsB,WAAY,KAAM,gBAAiB,aAAc,gBAAiB,gBAAiB,aAAc,qBAAsB,iBAAkB,sBAAuB,YAAa,cAAe,gCAAiC,kBAAmB,eAAgB,YAAa,YAAa,UAAW,UAAW,QAAS,QAAS,UAAW,OAAQ,eAAgB,oBAAqB,iBAAkB,OAAQ,YAAa,wBAAyB,WAAY,2BAA4B,cAAe,kBAAmB,iBAAkB,UAAW,oBAAqB,oBAAqB,eAAgB,cAAe,eAAgB,QAAS,eAAgB,gBAAiB,gBAAiB,cAAe,UAAW,SAAU,WAAY,wBAAyB,YAAa,oBAAqB,mBAAoB,YAAa,eAAgB,qBAAsB,WAAY,kBAAmB,OAAQ,mBAAoB,qBAAsB,qBAAsB,iBAAkB,eAAgB,uBAAwB,oBAAqB,uBAAwB,wBAAyB,oBAAqB,sBAAuB,mBAAoB,mBAAoB,iBAAkB,cAAe,eAAgB,cAAe,cAAe,qBAAsB,uBAAwB,cAAe,aAAc,qBAAsB,mBAAoB,eAAgB,kBAAmB,sBAAuB,wBAAyB,mBAAoB,eAAgB,gBAAiB,uBAAwB,sBAAuB,gBAAiB,aAAc,mBAAoB,cAAe,oBAAqB,cAAe,gBAAiB,iBAAkB,gBAAiB,WAAY,kBAAmB,0BAA2B,gBAAiB,cAAe,oBAAqB,yBAA0B,eAAgB,aAAc,QAAS,sBAAuB,mBAAoB,kBAAmB,gBAAiB,MAAO,KAExmF,UAAW,QAAS,OAAQ,SAAU,SAAU,UAC1C5B,GAAwB4B,GAAc,CAAC,2BACvC3B,GAAgB2B,GAAc,CAAC,OAAQ,8BAA+B,uBAAwB,uBAAwB,sCAC5H,kBACMhC,GAAkBgC,GAAc,CAAC,kCAAmC,gBAAiB,2BAsD3F,SAASvC,GAAY/U,GACnB,OAAOA,EAAOrN,KAAI,CAACmI,EAAOzO,KACxB,MAAMgU,EAAYL,EAAO3T,EAAI,IAAM8R,GAEnC,OAAIrC,GAAQ4C,IAAI5D,IAA6B,MAAnBuF,EAAUzT,KAE3B,IAAKkO,EACVtM,KAAMuP,GAAUgB,wBAIbjE,CAAK,GAEhB,CCzFO,MAAM4d,GAAY1Q,GAAgB,CAEvCyU,IAAK,CAAC,QAAS,MAAO,OAAQ,UAAW,YAAa,YAAa,eAAgB,YAAa,sBAAuB,eAAgB,iBAAkB,cAAe,iBAAkB,eAAgB,gBAAiB,eAAgB,eAAgB,kBAAmB,eAAgB,YAAa,YAAa,aAAc,iBAAkB,gBAAiB,YAAa,cAAe,eAAgB,eAAgB,gBAAiB,gBAAiB,aAAc,aAAc,YAAa,gBAAiB,iBAAkB,iBAAkB,cAAe,OAAQ,OAAQ,QAAS,MAAO,SAAU,gBAAiB,gBAAiB,UAAW,YAAa,UAAW,SAAU,UAAW,YAAa,WAAY,UAAW,OAAQ,cAAe,eAAgB,YAAa,WAAY,YAAa,WAAY,SAAU,UAAW,WAAY,iBAAkB,sBAAuB,wBAAyB,MAAO,QAAS,QAAS,SAAU,YAAa,OAAQ,kBAAmB,eAAgB,mBAAoB,gBAAiB,kBAAmB,mBAAoB,gBAAiB,oBAAqB,iBAAkB,oBAAqB,iBAAkB,SAAU,cAAe,UAAW,aAAc,kBAChtC,eAAgB,cAAe,MAAO,cAAe,QAAS,WAAY,YAAa,QAAS,YAAa,kBAAmB,QAAS,aAAc,SAAU,UAAW,UAAW,SAAU,WAAY,YAAa,WAAY,WAAY,WAAY,MAAO,aAAc,OAAQ,QAAS,SAAU,KAAM,MAAO,QAAS,QAAS,MAAO,OAAQ,SAAU,OAAQ,SAAU,kBAAmB,gBAAiB,eAAgB,gBAAiB,sBAAuB,MAAO,YAAa,QAAS,WAAY,YAAa,aAAc,UAAW,SAAU,UAAW,YAAa,QAAS,SAAU,MAAO,OAAQ,aAAc,gBAAiB,qBAAsB,sBAAuB,gBAAiB,eAAgB,eAAgB,aAAc,gBAAiB,gBAAiB,iBAAkB,gBAAiB,gBAAiB,QAAS,eAAgB,KAAM,cAAe,WAAY,WAAY,QAAS,UAAW,SAAU,OAAQ,kBAAmB,kBAAmB,cAAe,iBAAkB,kBAAmB,iBAAkB,eAAgB,iBAAkB,aAAc,gBAAiB,iBAAkB,gBAAiB,cAAe,SAAU,UAAW,UAAW,QAAS,aAAc,QAAS,SAAU,cAAe,eAAgB,OAAQ,MAAO,QAAS,OAAQ,SAAU,aAAc,cAAe,kBAAmB,gBAAiB,YAAa,aAAc,mBAAoB,SAAU,WAAY,MAAO,MAAO,QAAS,UAAW,SAAU,YAAa,SAAU,SAAU,WAAY,WAAY,WAAY,OAAQ,QACriD,QAAS,OAAQ,WAAY,eAAgB,gBAAiB,UAAW,WAAY,iBAAkB,cAGvG,UCPWpE,GAAWrQ,GAAgB,CAEtCyU,IAAK,CAAC,SAAU,MAAO,QAAS,UAAW,MAAO,MAAO,QAAS,KAAM,MAAO,KAAM,QAAS,UAAW,SAAU,UAAW,QAAS,SAAU,QAAS,KAAM,OAAQ,OAAQ,OAAQ,UAAW,UAAW,aAAc,SAAU,YAAa,UAAW,WAAY,aAAc,QAAS,SAAU,UAAW,WAAY,UAAW,YAAa,UAAW,YAAa,SAAU,UAAW,OAAQ,WAAY,WAAY,KAAM,OAAQ,OAAQ,UAAW,OAAQ,MAAO,QAAS,SAAU,UAAW,UAAW,SAAU,UAAW,QAAS,QAAS,SAAU,QAAS,UAAW,QAAS,YAAa,MAAO,QAAS,OAAQ,MAAO,WAAY,SAAU,QAAS,QAAS,SAAU,MAAO,OAAQ,SAAU,KAAM,YAAa,SAAU,QAAS,KAAM,UAAW,YAAa,QAAS,QAAS,SAAU,QAAS,SAAU,YAAa,OAAQ,KAAM,aAAc,OAAQ,MAAO,OAAQ,WAAY,QAAS,WAAY,OAAQ,OAAQ,MAAO,UAAW,QAAS,OAAQ,QAAS,MAAO,MAAO,UAAW,UAAW,eAAgB,QAAS,QAAS,UAAW,YAAa,OAAQ,KAAM,KAAM,MAAO,YAAa,OAAQ,QAAS,SAAU,SAAU,SAAU,KAAM,SAAU,UAAW,KAAM,QAAS,SAAU,QAAS,OAAQ,QAAS,YAAa,WAAY,OAAQ,OAAQ,YAAa,UAAW,UAAW,UAAW,YAAa,QAAS,YAAa,SAAU,QAAS,MAAO,QAAS,SAAU,SAAU,UAAW,SAAU,YAAa,SAAU,QAAS,OAAQ,WAAY,MAAO,OAAQ,YAAa,YAAa,SAAU,QAAS,SAAU,OAAQ,OAAQ,MAAO,OAAQ,OAAQ,QAAS,aAAc,SAAU,SAAU,OAAQ,OAAQ,KAAM,OAAQ,cAAe,UAAW,OAAQ,WAAY,YAAa,QAAS,QAAS,SAAU,UAAW,SAAU,QAAS,SAAU,SAAU,MAAO,OAAQ,QAAS,WAAY,QAAS,SAAU,SAAU,MAAO,OAAQ,OAAQ,QAAS,QAAS,SAAU,OAAQ,SAAU,OAAQ,SCE35DhH,GAAiB6B,GAAc,CAAC,4BAChC9B,GAAkB8B,GAAc,CACtC,OAAQ,OAAQ,QAAS,WAAY,SAAU,SAAU,eAAgB,WAAY,QAAS,SAE9F,cAAe,SACf,SAAU,MACV,cACA,aAAc,0BAA2B,aAAc,SACvD,SAAU,cAAe,oBAAqB,cAAe,qBAAsB,oBAAqB,kBAAmB,eAAgB,uBAAwB,eAAgB,kBAAmB,gBAAiB,aAAc,qBAAsB,aAAc,UAAW,mBAAoB,UAAW,QAAS,QAAS,UAAW,YAAa,SAAU,uBAAwB,YAAa,kBAAmB,oBAAqB,SACpb,MAAO,OAAQ,qBAAsB,aAAc,OAAQ,SAAU,aAC/D5B,GAAwB4B,GAAc,CAAC,cAAe,eAAgB,oBACtE3B,GAAgB2B,GAAc,CAAC,OAAQ,8BAA+B,eACtEhC,GAAkBgC,GAAc,CAAC,oCChBhC,MAAMe,GAAWrQ,GAAgB,CAEtCyU,IAAK,CACL,MAAO,QAAS,YAAa,MAAO,QAAS,MAAO,MAAO,QAAS,QAAS,KAAM,MAAO,KAAM,YAAa,SAAU,MAAO,QAAS,UAAW,aAAc,SAAU,YAAa,QAAS,OAAQ,OAAQ,QAAS,OAAQ,KAAM,OACvO,OAAQ,UAAW,UAAW,OAAQ,OAAQ,YAAa,YAAa,UAAW,cAAe,YAAa,QAAS,YAAa,QAAS,UAAW,WAAY,UAAW,UAAW,UAAW,UAAW,SAAU,YAAa,WAAY,WAAY,UAAW,WAAY,cAAe,UAAW,UAAW,QAAS,QAAS,SAAU,UAAW,SAAU,cAAe,WAAY,OAAQ,OAAQ,YAAa,MAAO,UAAW,UAAW,UAAW,SAAU,SAAU,OAAQ,gBAAiB,WAAY,SAAU,OAAQ,WAAY,UAAW,OAAQ,QAAS,QAAS,MAAO,SAAU,SAAU,YAAa,aAAc,YAAa,UAAW,SAAU,OAAQ,WAAY,QAAS,QAAS,QAAS,QAAS,MAAO,SAAU,QAAS,OAAQ,OAAQ,WAAY,UAAW,OAAQ,QAAS,QAAS,OAAQ,SAAU,OAAQ,SAAU,OAAQ,aAAc,KAAM,YAAa,KAAM,YAAa,QAAS,UAAW,YAAa,UAAW,WAAY,SAAU,eAAgB,MAAO,YAAa,YAAa,WAAY,OAAQ,aAAc,KAAM,YAAa,OAAQ,WAAY,QAAS,UAAW,SAAU,QAAS,UAAW,OAAQ,QAAS,QAAS,QAAS,QAAS,UAAW,QAAS,OAAQ,OAAQ,OAAQ,MAAO,MAAO,SAAU,SAAU,QAAS,MAAO,QAAS,SAAU,MAAO,OAAQ,SAAU,QAAS,WAAY,OAAQ,MAAO,WAAY,SAAU,QAAS,MAAO,aAAc,SAAU,MAAO,SAAU,OAAQ,cAAe,SAAU,UAAW,UAAW,cAAe,cAAe,cAAe,gBAAiB,YAAa,SAAU,SAAU,eAAgB,WAAY,YAAa,UAAW,KAAM,KAAM,OAAQ,SAAU,OAAQ,WAAY,SAAU,KAAM,SAAU,UAAW,QAAS,WAAY,eAAgB,SAAU,UAAW,SAAU,MAAO,aAAc,UAAW,kBAAmB,YAAa,aAAc,YAAa,SAAU,OAAQ,YAAa,SAAU,YAAa,QAAS,UAAW,YAAa,SAAU,QAAS,QAAS,MAAO,OAAQ,SAAU,MAAO,YAAa,MAAO,YAAa,SAAU,WAAY,SAAU,SAAU,YAAa,UAAW,SAAU,WAAY,MAAO,SAAU,OAAQ,YAAa,MAAO,MAAO,MAAO,SAAU,UAAW,SAAU,OAAQ,WAAY,WAAY,eAAgB,MAAO,QAAS,QAAS,OAAQ,SAAU,OAAQ,SAAU,MAAO,UAAW,UAAW,UAAW,WAAY,WAAY,QAAS,SAAU,SAAU,SAAU,SAAU,SAAU,QAAS,cAAe,eAAgB,gBAAiB,UAAW,MAAO,UAAW,UAAW,QAAS,MAAO,MAAO,OAAQ,OAAQ,YAAa,gBAAiB,gBAAiB,kBAAmB,kBAAmB,KAAM,WAAY,UAAW,gBAAiB,UAAW,OAAQ,MAAO,MAAO,MAAO,QAAS,QAAS,SAAU,WAAY,YAAa,SAAU,MAAO,QAAS,SAAU,QAAS,SAAU,WAAY,WAAY,SAAU,UAAW,OAAQ,QAAS,OAAQ,OAAQ,QAAS,QAAS,OAAQ,OAAQ,UAAW,QAAS,OAAQ,UCJz9F/D,GAAY1Q,GAAgB,CAEvC0U,QAAS,CAAC,MAAO,OAAQ,OAAQ,OAAQ,QAAS,SAAU,OAAQ,MAAO,OAAQ,MAAO,QAAS,KAAM,MAAO,MAAO,QAAS,QAAS,YAAa,QAAS,OAAQ,MAAO,OAAQ,OAAQ,MAAO,OAAQ,QAAS,gBACtNC,UAAW,CAAC,MAAO,SAAU,UAAW,QAAS,OAAQ,QAAS,cAAe,YAAa,UAAW,YAAa,iBAAkB,gBAAiB,UAAW,OAAQ,QAAS,UAAW,SAAU,YAAa,QAAS,OAAQ,QAAS,uBAAwB,iBAAkB,mBAAoB,QAAS,QAAS,SAAU,gBAC3UzD,SAAU,CAAC,aAAc,eAAgB,oBAAqB,aAAc,UAAW,UAAW,WAAY,iBAAkB,iBAAkB,WAAY,WAAY,kBAAmB,kBAAmB,QAAS,kBAAmB,kBAAmB,UAAW,eAAgB,UAAW,eAAgB,kBAAmB,gBAAiB,gBAAiB,QAAS,aACnX0D,WAAY,CAAC,WAAY,SACzB5D,WAAY,CAAC,WAAY,aAAc,OAAQ,cAAe,UAAW,UAAW,YAAa,WAAY,kBAAmB,kBAAmB,WAAY,YAAa,cAAe,eAAgB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,UAAW,UAAW,UAAW,gBAAiB,SAAU,gBAAiB,WAAY,WAAY,YAAa,gBAAiB,iBAAkB,eAAgB,kBAAmB,gBAAiB,gBAAiB,YAAa,UACjgB6D,YAAa,CAAC,YAAa,cAAe,cAC1CC,WAAY,CAAC,cAAe,UAAW,gBAAiB,+BAAgC,OACxFC,aAAc,CAAC,uBACfC,WAAY,CAAC,aAAc,sBAAuB,cAAe,aAAc,cAAe,gBAAiB,aAAc,kBAAmB,qBAAsB,yBAA0B,kBAChMC,IAAK,CAAC,iBAAkB,YAAa,QAAS,UAAW,aAAc,eAAgB,iBAAkB,kBAAmB,OAAQ,eAAgB,aAAc,aAAc,YAAa,SAAU,WAAY,eAAgB,aAAc,YAAa,YAAa,WAAY,QAAS,WAAY,UAAW,cAAe,eAAgB,WAAY,gBAClWC,SAAU,CAAC,SAAU,OAAQ,WAAY,SACzCC,YAAa,CAAC,WAAY,QAAS,SAAU,MAAO,QACpDC,IAAK,CAAC,cAAe,WAAY,aAAc,MAAO,OAAQ,WAC9DvE,UAAW,CAAC,MAAO,UAAW,OAAQ,SAAU,SAAU,QAAS,YAAa,aAAc,YAAa,aAAc,QAAS,WAAY,WAAY,cAAe,OAAQ,MAAO,SAAU,MAAO,kBAAmB,kBAAmB,eAAgB,OAAQ,aAAc,iBAAkB,aAAc,UAAW,YAAa,YAAa,WAAY,WAAY,WAAY,sBAAuB,iBAAkB,eAAgB,gBAAiB,aAAc,gBAAiB,sBAAuB,mBAAoB,sBAAuB,qBAAsB,sBAAuB,iBAAkB,SAAU,aAAc,cAAe,MAAO,UAAW,WAAY,YAE7qBwD,OAAQ,CAAC,cAAe,MAAO,aAAc,OAAQ,QAAS,kBAAmB,cACjFgB,gBAAiB,CAAC,QAAS,WAAY,MAAO,WAAY,SAC1DC,MAAO,CAAC,KAAM,mBAAoB,aAAc,WAAY,YAG5DlC,UAAW,CACX,WAAY,YAAa,SAAU,QAAS,YAAa,gBAAiB,eAAgB,MAAO,SAAU,QAC3G,YAAa,OAAQ,oBAAqB,eAAgB,qBAAsB,gBAAiB,6BAA8B,wBAAyB,gBAAiB,UAAW,UAAW,QAC/L,aCpBI3F,GAAiB6B,GAAc,CAAC,qCAChC9B,GAAkB8B,GAAc,CACtC,OAAQ,OAAQ,QAAS,WAAY,SAAU,eAAgB,sBAAuB,SAAU,uBAAwB,aAExH,2BAA4B,SAC5B,gBAAiB,MACjB,qBACA,iBACA,eAAgB,4BAA6B,aAC7C,mHAAoH,2BAA4B,6HAA8H,aAC9Q,cAAe,MAAO,oDAAqD,SAAU,YAAa,gBAClG,QAAS,aAAc,UAAW,SAAU,YAAa,OAAQ,YAAa,aAAc,eACtF5B,GAAwB4B,GAAc,CAAC,cAAe,SAAU,cAChE3B,GAAgB2B,GAAc,CAAC,OAAQ,qCAAsC,uBAAwB,uBAAwB,6CACnI,0BACMhC,GAAkBgC,GAAc,CAAC,kCAAmC,YAAa,2BAiDvF,SAASvC,GAAY/U,GACnB,IAAIud,EAAwBpf,GAC5B,OAAO6B,EAAOrN,KAAImI,GAEZgB,GAAQ4C,IAAI5D,IAAUgB,GAAQ2C,GAAG8e,GAC5B,IAAKziB,EACVtM,KAAMuP,GAAUS,mBAIhBM,GAAWhE,EAAMtM,QACnB+uB,EAAwBziB,GAGnBA,IAEX,CCrFO,MAAM4d,GAAY1Q,GAAgB,CAIvC0R,KAAM,CAAC,MAAO,OAAQ,QAAS,QAAS,OAAQ,QAAS,QAAS,OAAQ,QAAS,SAAU,QAAS,QAAS,OAAQ,OAAQ,UAAW,MAAO,OAAQ,OAAQ,MAAO,OAAQ,UAAW,MAAO,MAAO,YAAa,QAAS,MAAO,MAAO,KAAM,MAAO,QAAS,YAAa,MAAO,KAAM,QAAS,UAAW,SAAU,QAAS,QAAS,UAAW,OAAQ,MAAO,OAAQ,OAAQ,OAAQ,MAAO,OAAQ,OAAQ,aAAc,QAAS,gBAE7avI,OAAQ,CAAC,MAAO,QAAS,aAAc,QAAS,mBAAoB,cAAe,MAAO,SAAU,YAAa,SAAU,UAAW,OAAQ,SAAU,QAAS,OAAQ,QAAS,MAAO,YAAa,eAAgB,UAAW,cAAe,qBAAsB,WAAY,cAAe,gBAAiB,iBAAkB,eAAgB,iBAAkB,iBAAkB,wBAAyB,wBAAyB,SAAU,UAAW,UAAW,QAAS,OAAQ,QAAS,aAAc,UAAW,cAAe,aAAc,kBAAmB,kBAAmB,SAAU,SAAU,YAAa,WAAY,SAAU,YAAa,OAAQ,SAAU,SAEtpBqM,OAAQ,CAAC,YAAa,aAAc,QAAS,UAAW,eAAgB,aAAc,SAAU,SAAU,UAAW,WAAY,SAAU,QAAS,MAAO,eAAgB,UAAW,WAAY,QAAS,UAAW,WAAY,SAAU,SAAU,SAAU,SAAU,aAAc,SAAU,YAAa,QAE/SC,UAAW,CAAC,YAAa,aAAc,UAAW,SAAU,eAAgB,UAAW,WAAY,UAAW,aAE9GnM,QAAS,CAAC,eAAgB,iBAAkB,iBAAkB,wBAAyB,yBAEvFoM,SAAU,CAAC,UAAW,UAAW,YAAa,gBAE9CxE,SAAU,CACV,kBAAmB,eAAgB,eAAgB,oBAAqB,WAAY,YAAa,aAAc,UAAW,WAAY,eAAgB,gBAAiB,mBAAoB,YAAa,iBAAkB,YAAa,gBAAiB,YAAa,iBAAkB,mBAAoB,MAAO,WAAY,eAAgB,iBAAkB,sBAAuB,YAAa,eAAgB,yBAEpZyE,KAAM,CAAC,aAAc,YAAa,cAElCC,SAAU,CAAC,OAAQ,YAAa,MAAO,SAAU,SAAU,WAAY,WAAY,SAAU,WAAY,SAAU,SAAU,OAAQ,OAAQ,UAAW,OAAQ,SAAU,QAAS,UAAW,QAAS,SAAU,QAAS,SAE1NC,QAAS,CAAC,SAAU,YAAa,SAAU,OAAQ,WAAY,aAAc,mBAAoB,mBAAoB,UAAW,UAAW,UAAW,cAAe,OAAQ,SAE7KC,WAAY,CAAC,oBAAqB,wBAAyB,oBAAqB,mBAAoB,SAAU,UAAW,mBAAoB,kBAAmB,YAAa,YAAa,QAAS,aAAc,cAAe,iBAAkB,oBAAqB,WAAY,YAAa,YAAa,cAAe,YAAa,WAAY,UAAW,aAAc,aAAc,UAAW,gBAAiB,wBAExZ5D,KAAM,CAAC,QAEP+C,IAAK,CAAC,gBAAiB,sBAAuB,kBAAmB,wBAAyB,gCAAiC,UAAW,eAAgB,qBAAsB,6BAA8B,gBAAiB,sBAAuB,8BAA+B,SAAU,eAAgB,qBAAsB,6BAA8B,SAAU,aAAc,YAAa,aAAc,YAAa,YAAa,WAAY,QAAS,UAAW,eAAgB,WAAY,qBAAsB,6BAA8B,8BAA+B,QAAS,gBAEpkBxD,KAAM,CAAC,gBAAiB,YAAa,uBAAwB,4BAA6B,qBAAsB,oBAAqB,qBAAsB,aAAc,kBAAmB,qBAAsB,0BAA2B,eAAgB,eAAgB,mBAAoB,oBAAqB,oBAAqB,uBAAwB,mBAAoB,sBAAuB,mBAAoB,yBAA0B,4BAA6B,yBAA0B,4BAA6B,sBAAuB,wBAAyB,2BAA4B,eAAgB,YAAa,gBAAiB,oBAAqB,kBAAmB,qBAAsB,eAAgB,WAAY,sBAAuB,2BAA4B,oBAAqB,mBAAoB,oBAAqB,YAAa,iBAAkB,oBAAqB,yBAA0B,cAAe,kBAAmB,mBAAoB,uBAAwB,0BAA2B,mBAAoB,iBAAkB,oBAAqB,cAAe,cAAe,UAAW,WAAY,gBAE5nCsE,SAAU,CAAC,UAAW,UAAW,UAAW,UAE5C5D,YAAa,CACb,WAAY,WAAY,QAAS,UAEjCrW,MAAO,CAAC,YAAa,eAAgB,YAAa,aAAc,aAAc,eAAgB,cAAe,cAAe,iBAAkB,kBAAmB,gBAAiB,eAAgB,gBAAiB,kBAAmB,cAAe,cAAe,kBAAmB,aAAc,UAErSka,MAAO,CAAC,UAAW,QAAS,YAAa,YAAa,aAAc,cAAe,QAAS,YAAa,aAEzGnF,UAAW,CACX,YAAa,MAAO,UAAW,SAAU,UAAW,WAAY,UAAW,WAAY,OAAQ,QAAS,YAAa,aAAc,YAAa,aAAc,QAAS,WAAY,YAAa,mBAAoB,WAAY,kBAAmB,MAAO,MAAO,OAAQ,kBAAmB,kBAAmB,eAAgB,YAAa,sBAAuB,OAAQ,YAAa,YAAa,aAAc,iBAAkB,UAAW,aAAc,WAAY,WAAY,WACtd,SAAU,aAAc,cAAe,aAAc,MAAO,UAAW,WAAY,WAAY,UAAW,WAAY,UAEtHwD,OAAQ,CAAC,YAAa,aAAc,cAAe,MAAO,aAAc,OAAQ,YAAa,QAAS,eAAgB,OAAQ,cAE9H4B,IAAK,CAAC,kBAAmB,uBAEzBC,QAAS,CAAC,aAAc,aAAc,kBAAmB,kBAAmB,mBAAoB,gBAAiB,eAAgB,iBAAkB,kBAAmB,eAAgB,cAAe,2BAA4B,uBAAwB,yBAA0B,qCAAsC,yBAA0B,yBAA0B,uBAAwB,yBAA0B,uBAAwB,2BAA4B,sBAAuB,qBAAsB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,cAAe,kBAAmB,iBAAkB,mBAAoB,0BAA2B,oBAAqB,wBAAyB,kBAAmB,oBAAqB,2BAA4B,qBAAsB,sBAAuB,qBAAsB,iCAAkC,qBAAsB,yBAA0B,8BAA+B,uBAAwB,cAAe,qBAAsB,4BAA6B,qCAAsC,yBAA0B,kBAAmB,kBAAmB,wBAAyB,wBAAyB,iBAAkB,yBAA0B,0BAA2B,oBAAqB,kBAAmB,iBAAkB,cAAe,qBAAsB,gCAAiC,0BAA2B,+BAAgC,wBAAyB,0BAA2B,mBAAoB,yBAA0B,wBAAyB,oBAAqB,8BAA+B,wBAAyB,yBAA0B,yBAA0B,sBAAuB,2BAA4B,iCAAkC,kBAAmB,mBAAoB,mBAAoB,+BAAgC,0BAA2B,yBAA0B,sBAAuB,mBAAoB,0BAA2B,wBAAyB,0BAA2B,4BAA6B,YAAa,qBAAsB,yBAA0B,2BAA4B,kCAAmC,iBAAkB,kBAAmB,sBAAuB,eAAgB,oBAAqB,cAAe,kBAAmB,kBAAmB,aAAc,iBAAkB,aAAc,kBAAmB,aAAc,aAAc,eAAgB,2BAA4B,wBAAyB,oBAAqB,qBAAsB,qBAAsB,cAAe,2BAA4B,OAAQ,WAE7mFC,SAAU,CAAC,yBAA0B,4BAA6B,uBAAwB,eAAgB,kBAAmB,yBAA0B,mBAAoB,0BAA2B,qBAAsB,yBAA0B,4BAA6B,wBAAyB,+BAAgC,uBAAwB,oBAAqB,8BAA+B,wBAAyB,iBAAkB,mCAAoC,oCAAqC,qCAAsC,sCAAuC,0BAA2B,2BAA4B,4BAA6B,qBAAsB,mBAAoB,2BAA4B,qBAAsB,uBAAwB,gCAAiC,8BAA+B,kBAAmB,kBAAmB,oBAAqB,0BAA2B,0BAA2B,yBAA0B,gCAAiC,0BAA2B,qCAAsC,8BAA+B,sCAAuC,+BAAgC,iCAAkC,0BAA2B,YAAa,eAAgB,eAAgB,eAAgB,yBAA0B,oBAAqB,oBAAqB,aAAc,sBAAuB,eAAgB,uBAAwB,uBAAwB,mBAAoB,iBAAkB,gCAAiC,+BAAgC,6BAA8B,4BAA6B,iCAAkC,yCAA0C,yCAA0C,sCAAuC,sCAAuC,mCAAoC,mCAAoC,8BAA+B,oBAAqB,gBAAiB,iBAAkB,kBAAmB,eAAgB,iBAAkB,gBAAiB,qBAAsB,gBAAiB,uBAAwB,yBAA0B,uBAAwB,8BAA+B,4BAA6B,mCAAoC,kBAAmB,yBAA0B,kBAAmB,sBAAuB,uBAAwB,cAEl2EC,QAAS,CAAC,qCAAsC,0BAA2B,kCAE3EC,aAAc,CAAC,gCAAiC,mCAAoC,qCAAsC,wCAAyC,yBAEnKC,MAAO,CAAC,qBACRpC,KAAM,CAAC,QAGPd,UAAW,CAAC,MAAO,cAAe,YAAa,oBAAqB,UAAW,OAAQ,UAAW,UAAW,OAAQ,YAAa,UC9DvH/C,GAAWrQ,GAAgB,CAEtCyU,IAAK,CAAC,QAAS,WAAY,SAAU,SAAU,MAAO,QAAS,QAAS,YAAa,MACrF,OAAQ,QAAS,SAAU,UAC3B,UACA,MACA,MACA,QACA,KACA,MACA,aAAc,YAAa,aAAc,aACzC,KAAM,SAAU,SAAU,YAAa,gBACvC,WAAY,SAAU,QAAS,UAC/B,SACA,SACA,MACA,UACA,OACA,UAAW,KAAM,QAAS,OAAQ,SAAU,UAAW,WAAY,OACnE,OACA,UAAW,QAAS,OACpB,YACA,kBAAmB,QACnB,aAAc,QAAS,QAAS,UAAW,WAC3C,UACA,YACA,SACA,UAAW,UAAW,WAAY,SAAU,YAAa,cAAe,eACxE,gBAAiB,WAAY,aAAc,aAC3C,cAAe,UAAW,WAAY,aAAc,OAAQ,OAAQ,SACpE,QACA,MAAO,OAAQ,UAAW,kBAC1B,eACA,eACA,iBACA,eACA,oBACA,eACA,SAAU,QAAS,OAAQ,WAAY,MACvC,aAAc,MACd,UACA,UAAW,UACX,WAAY,aACZ,WAAY,UAAW,SAAU,YAAa,aAAc,UAAW,QAAS,OAChF,SAAU,aAAc,UAAW,UAAW,WAC9C,KACA,WAAY,SAAU,SAAU,OAAQ,OAAQ,OAChD,SAAU,WAAY,YAAa,MACnC,OAAQ,SAAU,QAAS,SAC3B,UAAW,YAAa,YAAa,UAAW,SAChD,UAAW,aAAc,YAAa,WAAY,UAClD,QACA,SAAU,QACV,SACA,WAAY,QAAS,QACrB,YAAa,MACb,QAAS,UACT,UAAW,SACX,OACA,OACA,WAAY,YAAa,YAAa,SAAU,QAChD,UAAW,WACX,QACA,WACA,SAAU,UAAW,SACrB,SAAU,OAAQ,OAClB,WAAY,KAAM,QAClB,YAAa,YAAa,WAAY,SAAU,KAChD,UAAW,YAAa,YAAa,QAAS,UAAW,UAAW,WAAY,YAChF,SAAU,QACV,QACA,QAAS,cAAe,SAAU,UAAW,MAC7C,UACA,YACA,WACA,OACA,UAAW,KACX,SACA,YAAa,OACb,MAAO,QAAS,WAAY,QAAS,OAAQ,UAC7C,UACA,YAAa,QACb,OACA,QAAS,OACT,QACA,SAAU,OAAQ,QAAS,YAC3B,iBACA,WAAY,OAAQ,SAAU,SAAU,UAAW,QAAS,eAAgB,WAAY,SAAU,SAClG,WAAY,OAAQ,QACpB,OAAQ,OAAQ,QAAS,WACzB,UACA,QACA,MAAO,OAAQ,MAAO,MAAO,OAAQ,OAAQ,KAAM,OACnD,YACA,aAAc,MACd,UAAW,SAAU,UACrB,SAAU,OACV,SACA,QAAS,UACT,SAAU,KAAM,MAAO,SACvB,OAAQ,MAAO,KACf,OACA,WAAY,SAAU,UAAW,KACjC,QACA,aAAc,SAAU,MACxB,QACA,OACA,WACA,UACA,aAAc,QAAS,QAAS,WAAY,SAAU,UAAW,YAAa,UAAW,WAAY,UACrG,QAAS,SAAU,WACnB,YAAa,YACb,UAAW,WAAY,WAAY,UACnC,QAAS,aAAc,aAAc,YAAa,aAAc,UAAW,cAAe,QAAS,QAAS,OAAQ,OACpH,WAAY,UAAW,YAAa,MAAO,aAC3C,cAAe,UAAW,UAAW,WAAY,UAAW,SAAU,aAAc,UAAW,UAAW,QAAS,UAAW,WAAY,SAAU,YACpJ,UAAW,SAAU,QACrB,OAAQ,WAAY,SAAU,UAAW,WAAY,MACrD,OAAQ,OAAQ,YAAa,SAAU,UAAW,SAAU,SAAU,SACtE,WAAY,SACZ,WAAY,YAAa,eAAgB,SAAU,UAAW,eAC9D,MAAO,QACP,OAAQ,QAAS,OAAQ,UACzB,SAAU,OAAQ,WAClB,WAAY,OACZ,MAAO,SAAU,aAAc,QAAS,YAAa,aAAc,QAAS,SAAU,UAAW,SAAU,SAAU,QAAS,eAAgB,YAC9I,UAAW,YACX,QAAS,SAAU,QACnB,SAAU,cACV,aAAc,OAAQ,WAAY,YAAa,OAAQ,OACvD,OAAQ,OACR,YACA,KACA,WACA,cAAe,YAAa,QAC5B,UAAW,OACX,OACA,WAAY,UAAW,OAAQ,QAAS,UAAW,YAAa,cAAe,cAAe,QAC9F,SACA,UAAW,WAAY,WAAY,QAAS,SAAU,OACtD,QACA,SAAU,QAAS,WAAY,YAAa,QAAS,SACrD,UACA,WACA,UACA,UACA,UAAW,OAAQ,QAAS,WAAY,OACxC,QACA,aAAc,SACd,OACA,SACA,UACA,OAAQ,UAAW,QAAS,MAAO,gBACnC,YACA,aACA,YACA,YACA,gBACA,WACA,QACA,UACA,eACA,WACA,OACA,MAAO,UChKHhH,GAAiB6B,GAAc,CAAC,4BAChC9B,GAAkB8B,GAAc,CACtC,mBAAoB,OAAQ,QAAS,4BAA6B,SAAU,SAAU,eAAgB,WAAY,QAAS,SAAU,uBAErI,cAAe,SACf,gBAAiB,MAAO,mBACxB,qBACA,0BACA,0DAA2D,2CAA4C,8EAA+E,yBACtL,iCAAkC,gCAAiC,kBAAmB,YAAa,+BAAgC,4BAA6B,iBAAkB,kBAClL,uBACA,wBAEA,QAAS,kBAAmB,kBAAmB,mBAAoB,iBAAkB,2BAA4B,eAAgB,sBAAuB,kBAAmB,6BAA8B,sBAAuB,iBAAkB,cAAe,cAAe,iBAAkB,qBAAsB,0BAA2B,iBAAkB,uBAAwB,wBAAyB,eAAgB,kBAAmB,oBAAqB,aAAc,gBAAiB,aAAc,eAAgB,iBAAkB,eAAgB,mBAAoB,qBAAsB,eAAgB,mBAAoB,kCAAmC,+BAAgC,2BAA4B,6BAA8B,gBAAiB,aAAc,aAAc,qBAAsB,aAAc,UAAW,QAAS,OAAQ,aAAc,QAAS,UAAW,UAAW,SAAU,kBAAmB,OAAQ,uBAAwB,mBAAoB,cAAe,mBAAoB,oBAAqB,kBAAmB,gBAAiB,uBAAwB,mBAAoB,8BAA+B,uBAAwB,kBAAmB,eAAgB,eAAgB,kBAAmB,kBAAmB,wBAAyB,yBAA0B,gBAAiB,mBAAoB,qBAAsB,cAAe,cAAe,gBAAiB,kBAAmB,gBAAiB,oBAAqB,sBAAuB,oBAAqB,mCAAoC,gCAAiC,4BAA6B,8BAA+B,mBAAoB,iBAAkB,cAAe,cAAe,sBAAuB,aAAc,UAAW,UAAW,KAAM,qBAAsB,iBAAkB,YAAa,iBAAkB,kBAAmB,gBAAiB,cAAe,qBAAsB,iBAAkB,4BAA6B,qBAAsB,gBAAiB,aAAc,aAAc,gBAAiB,yBAA0B,gBAAiB,sBAAuB,uBAAwB,aAAc,cAAe,iBAAkB,mBAAoB,YAAa,eAAgB,YAAa,cAAe,gBAAiB,cAAe,kBAAmB,oBAAqB,kBAAmB,iCAAkC,8BAA+B,0BAA2B,4BAA6B,iBAAkB,eAAgB,YAAa,YAAa,oBAAqB,YAAa,UAAW,UAAW,QAAS,QAAS,wBAAyB,SAAU,OAAQ,OAAQ,OAAQ,SAAU,UAAW,sBAAuB,iBAAkB,4BAA6B,UAAW,oBAAqB,QAAS,YAAa,SAAU,WAAY,oBAAqB,wBAAyB,YAAa,iBAAkB,cAAe,kBAAmB,WAAY,4BAA6B,kBAAmB,OAAQ,oBAAqB,WAAY,SAC5/F,QAAS,eACH5B,GAAwB4B,GAAc,CAAC,yBAA0B,0BAA2B,+BAC5F3B,GAAgB2B,GAAc,CAAC,OAAQ,qCAAsC,uBAAwB,uBAAwB,+CAC7HhC,GAAkBgC,GAAc,CAAC,gDAAiD,kCACxF,kDCtBO,MAAMoB,GAAY1Q,GAAgB,CAEvC6Q,UAAW,CAAC,YAAa,8BAA+B,MAAO,QAAS,UAAW,MAAO,SAAU,MAAO,kBAAmB,cAAe,aAAc,MAAO,WAAY,WAE9K/U,MAAO,CAAC,QAAS,eAAgB,gBAAiB,mBAAoB,iBAAkB,YAExFiV,QAAS,CAAC,UAAW,SAAU,WAAY,WAE3CoB,YAAa,CAAC,WAAY,SAAU,WAAY,QAAS,MAAO,OAAQ,UAExEoE,SAAU,CAAC,aAAc,eAAgB,mBAAoB,eAAgB,eAAgB,oBAAqB,WAAY,qBAAsB,uBAAwB,iBAAkB,UAAW,WAAY,YAAa,aAAc,UAAW,UAAW,eAAgB,WAAY,iBAAkB,WAAY,UAAW,YAAa,gBAAiB,qBAAsB,4BAA6B,kBAAmB,uBAAwB,4BAA6B,WAAY,eAAgB,SAEhgBC,QAAS,CAAC,UAAW,WAAY,eAAgB,cAAe,WAAY,UAAW,cAAe,YAAa,YAAa,eAAgB,YAAa,aAAc,cAAe,aAAc,cAAe,sBAAuB,gBAAiB,eAAgB,YAAa,aAAc,eAAgB,cAAe,cAAe,oBAAqB,aAAc,cAAe,cAAe,YAAa,kBAAmB,aAAc,aAAc,cAAe,cAAe,aAAc,eAAgB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,iBAAkB,mBAAoB,gBAAiB,kBAAmB,iBAAkB,cAAe,kBAAmB,aAAc,cAAe,aAAc,YAAa,kBAAmB,cAAe,wBAAyB,0BAA2B,OAAQ,kBAAmB,cAAe,eAAgB,iBAAkB,aAAc,UAAW,UAAW,WAAY,WAAY,aAAc,YAAa,mBAAoB,sBAAuB,eAAgB,eAAgB,iBAAkB,WAAY,YAAa,YAAa,aAAc,iBAAkB,aAAc,cAAe,aAAc,cAAe,UAAW,gBAAiB,aAAc,YAAa,OAAQ,UAAW,UAAW,OAAQ,UAAW,UAAW,OAAQ,UAAW,UAAW,gBAE13ClF,KAAM,CAAC,WAAY,YAAa,WAAY,MAAO,MAAO,OAAQ,QAElEmF,YAAa,CAAC,MAAO,oBAAqB,kBAAmB,eAE7DhF,KAAM,CAAC,gBAAiB,sBAAuB,oBAAqB,kCAAmC,yBAA0B,aAAc,kBAE/IC,KAAM,CAAC,MAAO,OAAQ,OAAQ,OAAQ,QAAS,OAAQ,UAAW,OAAQ,MAAO,MAAO,UAAW,OAAQ,QAAS,SAAU,MAAO,QAAS,KAAM,MAAO,MAAO,KAAM,QAAS,UAAW,SAAU,QAAS,MAAO,OAAQ,OAAQ,MAAO,SAAU,SAEvPgF,gBAAiB,CAAC,iBAElBvN,OAAQ,CAAC,QAAS,YAAa,QAAS,qBAAsB,cAAe,mBAAoB,YAAa,MAAO,UAAW,SAAU,QAAS,aAAc,UAAW,OAAQ,QAAS,MAAO,SAAU,QAAS,OAAQ,OAAQ,QAAS,aAAc,eAAgB,WAAY,cAAe,gBAAiB,eAAgB,eAAgB,iBAAkB,gBAAiB,SAAU,UAAW,YAAa,UAAW,QAAS,UAAW,aAAc,SAAU,SAAU,YAAa,UAAW,YAAa,OAAQ,SAE7gBwN,UAAW,CAAC,oBAAqB,gBAAiB,WAAY,YAAa,aAAc,UAAW,aAAc,WAAY,aAAc,YAAa,YAAa,cAAe,aAAc,eAEnMtC,OAAQ,CAAC,MAAO,QAAS,YAAa,aAAc,cAAe,aAAc,MAAO,OAAQ,UAAW,MAAO,SAAU,MAAO,YAAa,QAAS,eAAgB,kBAAmB,kBAAmB,OAAQ,kBAAmB,aAAc,cAAe,aAAc,MAAO,WAAY,WAExSuC,SAAU,CAAC,OAAQ,UAAW,UAAW,UAAW,YAAa,kBAAmB,uBAEpFT,SAAU,CAAC,wBAAyB,0BAA2B,uBAAwB,kBAAmB,oBAAqB,uBAAwB,iBAAkB,cAEzKD,QAAS,CAAC,sBAAuB,mBAAoB,oBAAqB,iBAAkB,kBAAmB,eAAgB,kBAAmB,2BAA4B,yBAA0B,uBAAwB,sBAAuB,iBAAkB,cAAe,6BAA8B,0BAA2B,gCAAiC,qBAAsB,kBAAmB,oBAAqB,mBAAoB,uBAAwB,eAAgB,YAAa,OAAQ,WACjgB9C,UAAW,CAAC,UAAW,UAAW,OAAQ,YAAa,UAAW,oBAAqB,QAAS,WAAY,aCnCjG/C,GAAWrQ,GAAgB,CAEtCmU,SAAU,CAAC,SAAU,SAAU,MAAO,iBAAkB,MAAO,QAAS,KAAM,MAAO,gBAAiB,SAAU,UAAW,SAAU,OAAQ,QAAS,SAAU,aAAc,SAAU,QAAS,UAAW,aAAc,UAAW,SAAU,OAAQ,UAAW,WAAY,KAAM,SAAU,SAAU,UAAW,aAAc,WAAY,QAAS,MAAO,UAAW,SAAU,OAAQ,OAAQ,gBAAiB,gBAAiB,QAAS,WAAY,SAAU,QAAS,KAAM,YAAa,QAAS,OAAQ,KAAM,SAAU,WAAY,UAAW,OAAQ,QAAS,YAAa,iBAAkB,MAAO,OAAQ,QAAS,UAAW,MAAO,MAAO,UAAW,OAAQ,QAAS,MAAO,UAAW,SAAU,MAAO,MAAO,KAAM,OAAQ,OAAQ,QAAS,QAAS,WAAY,WAAY,YAAa,UAAW,cAAe,UAAW,UAAW,UAAW,aAAc,YAAa,SAAU,UAAW,UAAW,UAAW,WAAY,OAAQ,SAAU,QAAS,MAAO,OAAQ,OAAQ,YAAa,KAAM,MAAO,WAAY,OAAQ,SAAU,QAAS,UAAW,SAAU,WAEhiC0C,qBAAsB,CAAC,gBAAiB,iBAAkB,eAAgB,aAAc,cAAe,WAAY,SAAU,eAAgB,aAAc,mBAAoB,eAAgB,eAAgB,UAAW,aAAc,aAAc,mBAEtPC,eAAgB,CAAC,WAAY,aAAc,WAAY,SAAU,cAEjEC,iBAAkB,CAAC,SAAU,MAAO,YAAa,aAAc,YAAa,OAAQ,OAAQ,UAAW,OAEvGC,eAAgB,CAAC,gBAAiB,cAAe,YAAa,WAAY,uBAAwB,oBAAqB,iBAEvHC,sBAAuB,CAAC,QAAS,OAAQ,OAAQ,QAEjDC,eAAgB,CAAC,WAAY,YAAa,SAAU,OAEpDC,qBAAsB,CAAC,MAAO,OAAQ,WAAY,QAAS,WAAY,MAAO,UAAW,WAAY,WAAY,YAAa,UAAW,WACzI3G,KAAM,CACN,eAAgB,aAAc,WAC9B,OAAQ,OAAQ,MAAO,YAEvB,eAUA4C,UAAW,CAAC,SAAU,UC3BlB3F,GAAiB6B,GAAc,CAAC,4BAChC9B,GAAkB8B,GAAc,CACtC,mBAAoB,OAAQ,QAAS,WAAY,SAAU,eAAgB,WAAY,QAAS,SAEhG,cAAe,SACf,SAAU,MACV,gBACA,mBACA,0CAA2C,iFAAkF,yBAC7H,cAAe,qBAAsB,eAAgB,gBAAiB,YAAa,gBAAiB,eAAgB,OACpH,SAEA,QAAS,iBAAkB,kBAAmB,2BAA4B,cAAe,0BAA2B,kBAAmB,eAAgB,aAAc,UAAW,UAAW,sBAAuB,sBAAuB,QAAS,OAAQ,SAAU,QAAS,UAAW,SAAU,OAAQ,kBAAmB,mBAAoB,2BAA4B,yBAA0B,wBAAyB,kBAAmB,eAAgB,iBAAkB,eAAgB,mBAAoB,gBAAiB,cAAe,aAAc,UAAW,iBAAkB,gBAAiB,iBAAkB,gBAAiB,aAAc,eAAgB,aAAc,yBAA0B,iBAAkB,cAAe,YAAa,YAAa,OAAQ,UAAW,UAAW,QAAS,QAAS,OAAQ,UAAW,4BAA6B,QAAS,SAAU,WAAY,cAAe,4BAA6B,8BAA+B,OAAQ,sBAAuB,aAAc,kBAAmB,iBAAkB,aAAc,YAAa,oBAAqB,SAAU,SAC/kC,iBACM5B,GAAwB4B,GAAc,CAAC,cAAe,SAAU,YAAa,UAC7E3B,GAAgB2B,GAAc,CAAC,OAAQ,qCAAsC,uBAAwB,uBAAwB,+CAC7HhC,GAAkBgC,GAAc,CACtC,UACA,eAAgB,iBAChB,2BCvBO,MAAMe,GAAWrQ,GAAgB,CAEtCyU,IAAK,CAAC,MAAO,QAAS,MAAO,QAAS,UAAW,MAAO,OAAQ,MAAO,UAAW,QAAS,KAAM,MAAO,KAAM,gBAAiB,UAAW,OAAQ,SAAU,UAAW,KAAM,QAAS,UAAW,OAAQ,SAAU,QAAS,QAAS,UAAW,YAAa,UAAW,UAAW,aAAc,SAAU,UAAW,UAAW,SAAU,UAAW,cAAe,UAAW,cAAe,aAAc,OAAQ,SAAU,QAAS,OAAQ,UAAW,eAAgB,eAAgB,oBAAqB,eAAgB,OAAQ,WAAY,YAAa,MAAO,eAAgB,UAAW,SAAU,YAAa,OAAQ,WAAY,MAAO,cAAe,YAAa,WAAY,aAAc,MAAO,OAAQ,SAAU,UAAW,SAAU,WAAY,SAAU,SAAU,WAAY,WAAY,UAAW,QAAS,QAAS,SAAU,SAAU,aAAc,QAAS,cAAe,YAAa,MAAO,UAAW,SAAU,YAAa,OAAQ,WAAY,YAAa,SAAU,QAAS,QAAS,WAAY,OAAQ,KAAM,SAAU,SAAU,KAAM,QAAS,UAAW,QAAS,SAAU,cAAe,YAAa,WAAY,OAAQ,KAAM,QAAS,OAAQ,OAAQ,aAAc,UAAW,OAAQ,UAAW,OAAQ,OAAQ,QAAS,OAAQ,QAAS,WAAY,OAAQ,QAAS,UAAW,QAAS,MAAO,UAAW,QAAS,SAAU,QAAS,OAAQ,YAAa,aAAc,UAAW,KAAM,MAAO,OAAQ,QAAS,KAAM,OAAQ,SAAU,UAAW,KAAM,QAAS,MAAO,QAAS,eAAgB,OAAQ,WAAY,UAAW,YAAa,QAAS,YAAa,cAAe,aAAc,UAAW,UAAW,WAAY,YAAa,UAAW,aAAc,aAAc,QAAS,QAAS,QAAS,eAAgB,eAAgB,UAAW,SAAU,aAAc,SAAU,SAAU,UAAW,UAAW,WAAY,SAAU,QAAS,QAAS,OAAQ,QAAS,WAAY,SAAU,MAAO,OAAQ,SAAU,SAAU,SAAU,OAAQ,YAAa,QAAS,kBAAmB,eAAgB,OAAQ,OAAQ,SAAU,OAAQ,OAAQ,SAAU,QAAS,aAAc,SAAU,WAAY,SAAU,SAAU,YAAa,QAAS,SAAU,gBAAiB,YAAa,aAAc,OAAQ,KAAM,QAAS,WAAY,cAAe,eAAgB,OAAQ,OAAQ,WAAY,YAAa,YAAa,UAAW,SAAU,UAAW,SAAU,QAAS,MAAO,OAAQ,QAAS,OAAQ,SAAU,OACx2E,UAAW,YAAa,WAAY,WAAY,UAAW,OAAQ,WAAY,aAAc,aAAc,SAAU,UAAW,cAAe,SAAU,UAAW,gBAAiB,QAAS,WAAY,eAAgB,QAAS,cAAe,cAAe,SAAU,QAAS,QAAS,gBAAiB,SAAU,SAAU,KAAM,WAAY,SAAU,YAAa,OAAQ,SAAU,OAAQ,QAAS,WAAY,YAAa,gBCH5Z/D,GAAY1Q,GAAgB,CAIvC6Q,UAAW,CACX,wBAAyB,oBAAqB,MAAO,UAAW,SAAU,UAAW,WAAY,UAAW,eAAgB,cAAe,OAAQ,QAAS,QAAS,QAAS,WAAY,mBAAoB,YAAa,aAAc,QAAS,QAAS,cAAe,WAAY,cAAe,WAAY,OAAQ,aAAc,MAAO,SAAU,OAAQ,MAAO,SAAU,aAAc,aAAc,oBAAqB,WACla,MAAO,SAAU,aAAc,cAAe,MAAO,UAAW,WAAY,YAE5EwD,OAAQ,CAAC,YAAa,aAAc,MAAO,OAAQ,YAAa,QAAS,eAAgB,OAAQ,cAEjGvY,MAAO,CAAC,QAAS,iBAAkB,iBAAkB,eAAgB,kBAAmB,aAAc,YAAa,YAAa,iBAAkB,eAAgB,eAAgB,cAAe,iBAAkB,aAAc,UAAW,WAAY,UAAW,QAAS,cAE5QnR,IAAK,CAAC,aAAc,aAAc,MAAO,aAAc,cAAe,kBAAmB,mBAAoB,WAAY,aAAc,cAEvIumB,SAAU,CAAC,aAAc,eAAgB,eAAgB,oBAAqB,oBAAqB,mBAAoB,WAAY,cAAe,sBAAuB,YAAa,WAAY,aAAc,WAAY,MAAO,aAAc,YAAa,YAAa,UAAW,gBAAiB,qBAAsB,OAAQ,WAAY,YAAa,mBAAoB,gBAAiB,iBAAkB,mBAAoB,SAAU,QAAS,iBAAkB,WAAY,MAAO,UAAW,SAAU,iBAAkB,mBAAoB,mBAAoB,oBAAqB,UAAW,eAAgB,oBAAqB,mBAAoB,QAAS,YAAa,cAAe,cAAe,eAAgB,iBAAkB,UAAW,aAAc,SAAU,QAElwBO,KAAM,CAAC,YAAa,kBAAmB,oBAAqB,mBAAoB,aAAc,iBAAkB,WAEhHjB,KAAM,CAAC,MAAO,OAAQ,QAAS,YAAa,aAAc,QAAS,OAAQ,QAAS,cAAe,OAAQ,QAAS,QAAS,SAAU,SAAU,MAAO,SAAU,YAAa,UAAW,aAAc,UAAW,SAAU,QAAS,cAAe,OAAQ,OAAQ,UAAW,OAAQ,cAAe,mBAAoB,MAAO,SAAU,YAAa,OAAQ,MAAO,OAAQ,MAAO,QAAS,kBAAmB,mBAAoB,eAAgB,OAAQ,UAAW,UAAW,SACrd,MAAO,MAAO,QAAS,YAAa,cAAe,QAAS,QAAS,SAAU,gBAAiB,gBAAiB,WAAY,SAAU,OAAQ,MAAO,QAAS,UAAW,SAAU,eAAgB,0BAA2B,yBAA0B,kBAAmB,QAAS,MAAO,QAAS,YAAa,SAAU,cAAe,QAAS,OAAQ,SAAU,cAAe,KAAM,SAAU,MAAO,QAAS,QAAS,OAAQ,QAAS,OAAQ,QAAS,aAAc,eAAgB,MAAO,MAAO,8BAA+B,eAAgB,QAAS,WAAY,MAAO,OAAQ,eAAgB,UAAW,YAAa,KAAM,OAAQ,aAAc,mBAAoB,WAAY,WAAY,MAAO,QAAS,SAAU,UAAW,cAAe,OAAQ,QAAS,SAAU,UAAW,iBAAkB,qBAAsB,cAAe,iBAAkB,SAAU,UAAW,UAAW,QAAS,OAAQ,QAAS,OAAQ,QAAS,gBAAiB,YAAa,MAAO,OAAQ,OAAQ,YAAa,aAAc,qBAAsB,OAAQ,SAAU,MAAO,OAAQ,WAAY,UAAW,QAAS,qBAAsB,QAAS,OAAQ,QAAS,SAAU,YAAa,kBAAmB,MAAO,OAAQ,YAAa,UAAW,SAAU,iBAAkB,mBAAoB,YAAa,OAAQ,UAAW,aAAc,SAAU,QAAS,WAAY,QAAS,QAAS,OAAQ,UAAW,eAAgB,QAAS,gBAAiB,eAAgB,cAAe,YAAa,aAAc,eAAgB,cAAe,eAAgB,WAAY,YACtgD0D,KAAM,CAAC,QAEPkD,WAAY,CAAC,WAAY,UAGzBhE,UAAW,CAAC,UAAW,MAAO,UAC9B,aCpBI3F,GAAiB6B,GAAc,CAAC,4BAChC9B,GAAkB8B,GAAc,CACtC,OAAQ,OAAQ,QAAS,WAAY,SAAU,SAAU,eAAgB,WAAY,UAAW,aAAc,gBAAiB,QAE/H,oCAAqC,SACrC,iBAEA,qCAEA,2BAA4B,yBAC5B,0EAA2E,0CAA2C,yBACtH,cAAe,cAAe,0BAA2B,YAAa,gBAAiB,eAAgB,iBAAkB,aAAc,kBAAmB,kBAAmB,gBAAiB,gBAAiB,YAAa,eAAgB,eAC5O,cAAe,QAAS,YAAa,UACrC,WAAY,UAAW,gBAAiB,cAAe,cAAe,oBAAqB,oBAAqB,iBAAkB,iBAAkB,YAAa,WAAY,UAAW,gBAAiB,mBAAoB,QAAS,eAAgB,oBAAqB,iBAAkB,iBAAkB,kBAAmB,sBAAuB,cAAe,qBAAsB,aAAc,gBAC5Y,iBACM5B,GAAwB4B,GAAc,CAAC,yBAA0B,0BAA2B,+BAC5F3B,GAAgB2B,GAAc,CAAC,OAAQ,qCAAsC,uBAAwB,uBAAwB,6CACnI,4BAA6B,sCACvBhC,GAAkBgC,GAAc,CAAC,YAAa,YAAa,cAAe,2BAoChF,SAASvC,GAAY/U,GACnB,OAAOA,EAAOrN,KAAI,CAACmI,EAAOzO,KACxB,MAAM4T,EAAYD,EAAO3T,EAAI,IAAM8R,GAC7BkC,EAAYL,EAAO3T,EAAI,IAAM8R,GAEnC,OAAIrC,GAAQ+C,OAAO/D,IAAUuF,EAAU7R,OAASuP,GAAU+C,WAEjD,IAAKhG,EACVtM,KAAMuP,GAAUgB,wBAKD,UAAfjE,EAAMlO,MAAoBkO,EAAMtM,OAASuP,GAAUS,kBAC5B,eAAnByB,EAAUrT,MAA4C,eAAnByT,EAAUzT,KAS9CkO,EAPI,IAAKA,EACVtM,KAAMuP,GAAUoC,WAChBvT,KAAMkO,EAAMoD,IAKN,GAEhB,CCrFO,MAAMwa,GAAY1Q,GAAgB,CAEvC+T,OAAQ,CAAC,MAAO,UAAW,OAAQ,WAAY,SAAU,OAAQ,MAAO,SAAU,MAAO,QAAS,oBAAqB,SAAU,OAAQ,aAAc,SAAU,iBAAkB,QAAS,QAAS,SAAU,SAAU,QAAS,SAAU,aAAc,UAAW,QAAS,QAAS,OAAQ,UAAW,2BAA4B,4BAA6B,gBAAiB,mBAAoB,iBAAkB,SAAU,YAAa,gBAAiB,OAAQ,SAAU,UAAW,WAAY,QAAS,YAEpflD,UAAW,CAAC,MAAO,QAAS,eAAgB,MAAO,MAAO,MAAO,SAEjEK,SAAU,CAAC,OAAQ,OAAQ,WAAY,YAAa,YAAa,YAEjEmD,OAAQ,CAAC,aAAc,OAAQ,aAAc,eAAgB,YAAa,QAAS,MAAO,OAAQ,cAAe,aAAc,aAE/H3C,KAAM,CAAC,OAAQ,QAAS,OAAQ,QAAS,OAAQ,QAAS,QAAS,OAAQ,UAAW,MAAO,OAAQ,UAAW,MAAO,QAAS,KAAM,MAAO,MAAO,QAAS,OAAQ,MAAO,KAAM,MAAO,QAAS,UAAW,MAAO,OAAQ,OAAQ,MAAO,OAAQ,SAEnPD,KAAM,CAAC,OAAQ,aAAc,oBAAqB,oBAAqB,eAAgB,cAAe,cAAe,aAAc,cAAe,eAAgB,WAAY,YAAa,YAAa,aAAc,aAAc,mBAAoB,oBAAqB,YAAa,aAC1RyC,KAAM,CAAC,QAIPd,UAAW,CAAC,YAAa,UAAW,oBAAqB,QAAS,mBAAoB,WAAY,UAAW,aCjBlG/C,GAAWrQ,GAAgB,CAEtCyU,IAAK,CAAC,QAAS,SAAU,MAAO,QAAS,MAAO,QAAS,MAAO,MAAO,MAAO,QAAS,SAAU,UAAW,KAAM,MAAO,SAAU,gBAAiB,SAAU,QAAS,UAAW,KAAM,UAAW,OAAQ,OAAQ,QAAS,UAAW,SAAU,SAAU,WAAY,aAAc,SAAU,QAAS,UAAW,eAAgB,eAAgB,oBAAqB,WAAY,UAAW,aAAc,WAAY,SAAU,OAAQ,SAAU,WAAY,KAAM,OAAQ,OAAQ,OAAQ,MAAO,SAAU,SAAU,UAAW,YAAa,SAAU,UAAW,OAAQ,SAAU,QAAS,YAAa,MAAO,UAAW,OAAQ,OAAQ,YAAa,OAAQ,QAAS,SAAU,SAAU,KAAM,SAAU,YAAa,KAAM,QAAS,UAAW,YAAa,QAAS,SAAU,UAAW,YAAa,OAAQ,KAAM,SAAU,OAAQ,MAAO,OAAQ,OAAQ,OAAQ,QAAS,QAAS,eAAgB,UAAW,KAAM,MAAO,UAAW,UAAW,OAAQ,QAAS,KAAM,SAAU,KAAM,OAAQ,OAAQ,KAAM,QAAS,SAAU,QAAS,OAAQ,YAAa,OAAQ,SAAU,YAAa,UAAW,QAAS,QAAS,QAAS,YAAa,aAAc,SAAU,UAAW,UAAW,SAAU,UAAW,WAAY,YAAa,QAAS,WAAY,MAAO,OAAQ,YAAa,SAAU,MAAO,QAAS,OAAQ,YAAa,OAAQ,OAAQ,KAAM,cAAe,UAAW,YAAa,QAAS,SAAU,SAAU,QAAS,SAAU,SAAU,OAAQ,UAAW,OAAQ,QAAS,SAAU,OAAQ,aCEt8ChH,GAAiB6B,GAAc,CAAC,4BAChC9B,GAAkB8B,GAAc,CACtC,mBAAoB,OAAQ,QAAS,WAAY,SAAU,SAAU,eAAgB,WAAY,QAAS,SAE1G,0EAA2E,eAAgB,SAC3F,qEAAsE,MACtE,cACA,iDAAkD,kDAAmD,yBACrG,cAAe,eAAgB,gBAAiB,kBAAmB,YACnE,eACM5B,GAAwB4B,GAAc,CAAC,cAAe,SAAU,cAEhE3B,GAAgB2B,GAAc,CAAC,OAAQ,qCAAsC,uBAAwB,uBAAwB,+CAC7HhC,GAAkBgC,GAAc,CAAC,gDAAiD,oCCjBjF,MAAMoB,GAAY1Q,GAAgB,CAEvCiW,IAAK,CAAC,YAEN5B,OAAQ,CAAC,OAAQ,aAAc,eAAgB,YAAa,cAE5DK,QAAS,CAAC,WAAY,oBAAqB,iBAAkB,UAAW,cAAe,mBAAoB,eAAgB,cAAe,MAAO,MAAO,KAAM,MAAO,QAAS,OAAQ,QAAS,OAAQ,UAAW,gBAElNvL,OAAQ,CAAC,YAAa,kBAAmB,QAAS,QAAS,UAAW,YAAa,kBAAmB,OAAQ,UAAW,YAAa,gBAEtI+H,SAAU,CAAC,eAAgB,eAAgB,YAAa,oBAAqB,kBAK7EL,UAAW,CAAC,QAAS,MAAO,MAAO,MAAO,MAG1C,aAAc,cAAe,WAAY,UAAW,UAAW,SAAU,eAAgB,YAAa,aAAc,OAAQ,aAAc,iBAAkB,aAAc,UAAW,YAAa,YAAa,WAAY,WAAY,WAAY,kBAAmB,mBAMtQqD,KAAM,CAAC,QAEPkD,WAAY,CAAC,WAAY,UAEzBC,YAAa,CAAC,QAAS,MAAO,MAAO,MAAO,OAAQ,OAAQ,QAG5DjE,UAAW,CAAC,YAAa,OAAQ,oBAAqB,eAAgB,UAAW,yBAA0B,oBAAqB,OAAQ,qBAAsB,gBAAiB,QAAS,6BAA8B,wBAAyB,gBAAiB,kCAAmC,qBAAsB,QAAS,SAAU,iBAAkB,YAAa,sBAAuB,OAAQ,UAAW,UAAW,MAAO,OAAQ,eC/Bpa/C,GAAWrQ,GAAgB,CAEtCyU,IAAK,CAAC,MAAO,WAAY,QAAS,MAClC,MAAO,QAAS,KAAM,aAAc,aAAc,KAAM,SAAU,gBAAiB,QAAS,UAAW,SAAU,SAAU,OAAQ,UAAW,OAAQ,KAAM,OAAQ,SAAU,WAAY,OAAQ,OAAQ,YAAa,QAAS,OAAQ,QAAS,WAAY,UAAW,SAAU,SAAU,YAAa,UAAW,aAAc,gBAAiB,SAAU,QAAS,OAAQ,UAAW,kBAAmB,kCAAmC,eAAgB,eAAgB,iBAAkB,mCAAoC,eAAgB,SAAU,QAAS,OAAQ,MAAO,aAAc,MAAO,UAAW,UAAW,UAAW,SAAU,QAAS,WAAY,gBAAiB,aAAc,WAAY,SAAU,OAAQ,UAAW,OAAQ,UAAW,WAAY,SAAU,QAC7vB,SAAU,OAAQ,UAAW,SAAU,WAAY,QAAS,QAAS,SAAU,QAAS,MAAO,UAAW,OAAQ,OAAQ,OAAQ,WAAY,MAAO,SAAU,QAAS,QAAS,SAAU,OAAQ,OAAQ,WAAY,KAAM,YAAa,QAAS,QAAS,cAAe,SAAU,MAAO,UAAW,YAAa,WAAY,OAAQ,KAAM,WAAY,QAAS,UAAW,UAAW,OAAQ,OAAQ,aAAc,QAAS,QAAS,SAAU,QAAS,SAAU,SAAU,WAAY,SAAU,QAAS,WAAY,WAAY,UAAW,QAAS,QAAS,MAAO,KAAM,OAAQ,MAAO,OAAQ,SAAU,UAAW,KAAM,MAAO,KAAM,OAAQ,OAAQ,QAAS,MAAO,QAAS,OAAQ,WAAY,YAAa,YAAa,YAAa,UAAW,UAAW,YAAa,QAAS,QAAS,OAAQ,YAAa,MAAO,aAAc,cAAe,UAAW,SAAU,SAAU,UAAW,SAAU,QAAS,WAAY,SAAU,MAAO,OAAQ,YAAa,QAAS,SAAU,SAAU,SAAU,SAAU,YAAa,eAAgB,MAAO,UAAW,WAAY,OAC7hC,WAAY,MAAO,eAAgB,WAAY,aAAc,QAAS,SAAU,cAAe,YAAa,SAAU,cAAe,QAAS,cAAe,OAAQ,OAAQ,YAAa,gBAAiB,kBAAmB,KAAM,WAAY,cAAe,QAAS,UAAW,OAAQ,UAAW,QAAS,SAAU,UAAW,SAAU,SAAU,OAAQ,QAAS,QAAS,SAAU,YAAa,UAAW,UAAW,WAAY,SAAU,SAAU,UAAW,UCDtchH,GAAiB6B,GAAc,CAAC,4BAChC9B,GAAkB8B,GAAc,CACtC,mBAAoB,OAAQ,QAAS,4BAA6B,SAAU,SAAU,eAAgB,WAAY,QAAS,SAAU,uBAErI,cAAe,SACf,SAAU,MAAO,mBACjB,cACA,iBACA,0BAA2B,oDAAqD,aAChF,cAAe,aAAc,gBAAiB,gBAAiB,YAAa,iBAAkB,uBAC9F,YACA,kCACA,eAEA,eACM5B,GAAwB4B,GAAc,CAAC,yBAA0B,0BAA2B,+BAC5F3B,GAAgB2B,GAAc,CAAC,OAAQ,qCAAsC,uBAAwB,uBAAwB,+CAC7HhC,GAAkBgC,GAAc,CAAC,gDAAiD,2BCrBjF,MAAMoB,GAAY1Q,GAAgB,CAOvCyU,IAAK,CAAC,MAAO,OAAQ,YAAa,YAAa,kBAAmB,uBAAwB,oBAAqB,aAAc,YAAa,iBAAkB,YAAa,iBAAkB,eAAgB,kBAAmB,aAAc,YAAa,YAAa,iBAAkB,eAAgB,aAAc,cAAe,OAAQ,OAAQ,QAAS,cAAe,MAAO,MAAO,WAAY,YAAa,oBAAqB,eAAgB,wBAAyB,oBAAqB,oBAAqB,uBAAwB,cAAe,kBAAmB,qBAAsB,cAAe,aAAc,iBAAkB,sBAAuB,iCAAkC,cAAe,YAAa,WAAY,UAAW,cAAe,OAAQ,OAAQ,OAAQ,UAAW,cAAe,WAAY,MAAO,WAAY,WAAY,YAAa,QAAS,eAAgB,SAAU,YAAa,WAAY,oBAAqB,kBAAmB,OAAQ,MAAO,OAAQ,oBAAqB,QAAS,WAAY,YAAa,aAAc,QAAS,YAAa,kBAAmB,eAAgB,iBAAkB,iBAAkB,eAAgB,oBAAqB,mBAAoB,eAAgB,OAAQ,WAAY,YAAa,cAAe,aAAc,aAAc,MAAO,eAAgB,cAAe,cAAe,UAAW,aAAc,MAAO,MAAO,IAAK,aAAc,mBAAoB,kCAAmC,QAAS,MAAO,UAAW,WAAY,SAAU,cAAe,UAAW,QAAS,SAAU,kBAAmB,gBAAiB,YAAa,cAAe,cAAe,iBAAkB,qBAAsB,qBAAsB,wBAAyB,wBAAyB,WAAY,kBAAmB,kBAAmB,oBAAqB,yBAA0B,+BAAgC,gBAAiB,sBAAuB,YAAa,iBAAkB,6BAA8B,0BAA2B,0BAA2B,yBAA0B,iBAAkB,qBAAsB,WAAY,wBAAyB,mBAAoB,cAAe,YAAa,WAAY,YAAa,cAAe,cAAe,OAAQ,yBAA0B,KAAM,QAAS,WAAY,2BAA4B,mBAAoB,qBAAsB,YAAa,cAAe,iBAAkB,SAAU,gBAAiB,sBAAuB,iBAAkB,oBAAqB,cAAe,eAAgB,sBAAuB,cAAe,aAAc,aAAc,YAAa,aAAc,WAAY,MAAO,oBAAqB,aAAc,OAAQ,mBAAoB,0BAA2B,yBAA0B,kBAAmB,QAAS,SAAU,uBAAwB,yBAA0B,0BAA2B,oBAAqB,UAAW,KAAM,YAAa,iBAAkB,MAAO,QAAS,OAAQ,QAAS,OAAQ,QAAS,aAAc,kBAAmB,MAAO,UAAW,aAAc,cAAe,aAAc,mBAAoB,WAAY,YAAa,aAAc,eAAgB,MAAO,SAAU,MAAO,QAAS,mBAAoB,cAAe,MAAO,SAAU,SAAU,MAAO,QAAS,eAAgB,wBAAyB,UAAW,MAAO,SAAU,aAAc,YAAa,aAAc,MAAO,YAAa,QAAS,SAAU,oBAAqB,WAAY,qBAAsB,kBAAmB,iBAAkB,iBAAkB,eAAgB,KAAM,WAAY,MAAO,QAAS,cAAe,UAAW,UAAW,OAAQ,SAAU,OAAQ,SAAU,aAAc,eAAgB,iBAAkB,qBAAsB,cAAe,kBAAmB,iBAAkB,eAAgB,UAAW,iBAAkB,aAAc,SAAU,SAAU,UAAW,UAAW,MAAO,QAAS,aAAc,OAAQ,QAAS,SAAU,WAAY,OAAQ,SAAU,SAAU,UAAW,OAAQ,oBAAqB,MAAO,WAAY,QAAS,UAAW,uBAAwB,qBAAsB,QAAS,aAAc,eAAgB,oBAAqB,oBAAqB,oBAAqB,OAAQ,cAAe,SAAU,aAAc,cAAe,SAAU,UAAW,cAAe,YAAa,cAAe,YAAa,cAAe,cAAe,gBAAiB,cAAe,aAAc,gBAAiB,eAAgB,cAAe,cAAe,cAAe,cAAe,mBAAoB,YAAa,kBAAmB,gBAAiB,sBAAuB,eAAgB,kBAAmB,oBAAqB,mBAAoB,mBAAoB,kBAAmB,gBAAiB,cAAe,aAAc,YAAa,cAAe,aAAc,YAAa,kBAAmB,gBAAiB,gBAAiB,mBAAoB,qBAAsB,eAAgB,cAAe,WAAY,YAAa,YAAa,aAAc,YAAa,gBAAiB,mBAAoB,aAAc,WAAY,YAAa,OAAQ,UAAW,UAAW,OAAQ,UAAW,UAAW,SAAU,YAAa,MAAO,MAAO,OAAQ,cAAe,qBAAsB,gBAAiB,kBAAmB,UAAW,YAAa,YAAa,eAAgB,mBAAoB,mBAAoB,UAAW,UAAW,sBAAuB,sBAAuB,cAAe,SAAU,gBAAiB,gBAAiB,aAAc,kBAAmB,yBAA0B,eAAgB,cAAe,UAAW,YAAa,iBAAkB,mBAAoB,YAAa,OAAQ,aAAc,WAAY,MAAO,WAAY,SAAU,QAAS,aAAc,aAAc,uBAAwB,mBAAoB,wBAAyB,mBAAoB,mBAAoB,uBAAwB,oBAAqB,OAAQ,sBAAuB,oBAAqB,WAAY,UAAW,WAAY,UAAW,OAAQ,eAAgB,eAAgB,wBAAyB,wBAAyB,gBAAiB,YAAa,WAAY,OAAQ,eAAgB,MAAO,MAAO,YAE/hM6C,WAAY,CAAC,aAAc,QAAS,OAAQ,eAAgB,OAAQ,UAAW,UCTpEjH,GAAWrQ,GAAgB,CAEtCyU,IAAK,CAAC,SAAU,MAAO,QAAS,QAAS,MAAO,QAAS,UAAW,MAAO,MAAO,QAAS,KAAM,MAAO,KAAM,gBAAiB,YAAa,UAAW,OAAQ,KAAM,OAAQ,UAAW,OAAQ,WAAY,SAAU,UAAW,UAAW,SAAU,YAAa,cAAe,aAAc,cAAe,SAAU,QAAS,OAAQ,UAAW,eAAgB,eAAgB,OAAQ,aAAc,UAAW,SAAU,UAAW,SAAU,OAAQ,OAAQ,WAAY,aAAc,WAAY,cAAe,SAAU,OAAQ,OAAQ,QAAS,WAAY,MAAO,QAAS,SAAU,SAAU,YAAa,UAAW,SAAU,UAAW,QAAS,QAAS,QAAS,QAAS,YAAa,MAAO,OAAQ,OAAQ,YAAa,QAAS,UAAW,SAAU,WAAY,QAAS,WAAY,SAAU,SAAU,SAAU,KAAM,YAAa,UAAW,QAAS,QAAS,SAAU,YAAa,WAAY,OAAQ,UAAW,KAAM,KAAM,YAAa,OAAQ,OAAQ,aAAc,cAAe,OAAQ,MAAO,OAAQ,OAAQ,UAAW,UAAW,OAAQ,QAAS,OAAQ,QAAS,QAAS,UAAW,QAAS,UAAW,UAAW,kBAAmB,eAAgB,WAAY,UAAW,OAAQ,MAAO,MAAO,OAAQ,OAAQ,KAAM,OAAQ,MAAO,OAAQ,QAAS,SAAU,KAAM,SAAU,OAAQ,KAAM,MAAO,OAAQ,SAAU,KAAM,QAAS,aAAc,QAAS,SAAU,OAAQ,WAAY,YAAa,aAAc,UAAW,OAAQ,OAAQ,UAAW,MAAO,UAAW,YAAa,YAAa,UAAW,aAAc,aAAc,QAAS,SAAU,QAAS,OAAQ,YAAa,UAAW,SAAU,aAAc,QAAS,UAAW,WAAY,YAAa,SAAU,QAAS,OAAQ,QAAS,WAAY,SAAU,MAAO,OAAQ,UAAW,SAAU,SAAU,UAAW,WAAY,OAAQ,SAAU,eAAgB,UAAW,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,QAAS,SAAU,SAAU,SAAU,QAAS,SAAU,cAAe,OAAQ,OAAQ,OAAQ,OAAQ,YAAa,KAAM,WAAY,cAAe,OAAQ,OAAQ,UAAW,YAAa,cAAe,gBAAiB,QAAS,SAAU,UAAW,YAAa,SAAU,SAAU,MAAO,OAAQ,QAAS,QAAS,QAAS,OAAQ,WAAY,QAAS,SAAU,UAAW,OAAQ,OAAQ,QAAS,SAAU,OAAQ,SAAU,UAAW,OAAQ,UAAW,QAAS,QAGpzE8C,MAAO,CAAC,SAAU,MAAO,UAAW,WAAY,UAAW,UAAW,OAAQ,UAAW,OAAQ,SAAU,cAAe,UAAW,UAAW,gBAAiB,WAAY,YAAa,OAAQ,YAAa,UAAW,OAAQ,MAAO,QAAS,MAAO,OAAQ,WAAY,YAAa,WAAY,OAAQ,YAAa,aAAc,aAAc,cAAe,QAAS,aAAc,WAAY,cCDrY9J,GAAiB6B,GAAc,CAAC,4BAEhC9B,GAAkB8B,GAAc,CACtC,mBAAoB,OAAQ,QAAS,4BAA6B,SAAU,SAAU,eAAgB,WAAY,QAAS,SAAU,uBAErI,cAAe,SACf,SAAU,MACV,cACA,iBACA,0CAA2C,+BAAgC,yBAC3E,0BAA2B,6BAA8B,0BAA2B,4BAA6B,YAAa,kCAAmC,iBAAkB,UAAW,eAAgB,0BAA2B,aAAc,gBAAiB,cAAe,cAAe,cAAe,yBAA0B,YAAa,YAC5V,UAAW,UAAW,kBAAmB,0BAA2B,MAAO,mBAAoB,oBAAqB,iBAAkB,kBAAmB,4BAA6B,gBAAiB,cAAe,WAAY,gBAAiB,cAAe,oBAAqB,qBAAsB,mBAAoB,gCAAiC,cAAe,eAAgB,gBAAiB,eAAgB,iBAAkB,aAAc,qBAAsB,mBAAoB,iBAAkB,eAC9f,kBAAmB,WAAY,oBAAqB,qBAAsB,cAAe,UAAW,SAAU,WAGxG5B,GAAwB4B,GAAc,CAAC,yBAA0B,0BAA2B,+BAE5F3B,GAAgB2B,GAAc,CAAC,OAAQ,qCAAsC,uBAAwB,uBAAwB,+CAC7HhC,GAAkBgC,GAAc,CAAC,oCCtBhC,MAAMoB,GAAY1Q,GAAgB,CAEvC6Q,UAAW,CAAC,wBAAyB,MAAO,eAAgB,QAAS,YAAa,WAAY,cAAe,MAAO,MAAO,QAAS,SAAU,MAAO,MAAO,QAC5J2G,SAAU,CAAC,YAAa,cAAe,MAAO,aAAc,OAAQ,kBAAmB,kBAAmB,eAAgB,gCAAiC,gCAC3JC,cAAe,CAAC,SAAU,WAAY,aAAc,iBAAkB,oBAAqB,kBAAmB,cAAe,YAAa,cAAe,eAAgB,gBAAiB,SAAU,aAAc,aAClNzG,WAAY,CAAC,OAAQ,UAAW,QAAS,WAAY,cAAe,aACpE0G,cAAe,CAAC,aAAc,kBAAmB,eAAgB,UAAW,mBAAoB,mBAAoB,gBAAiB,eAAgB,0BAA2B,uBAAwB,sBAAuB,mBAAoB,gBAAiB,eAAgB,sBAAuB,YAAa,kBAAmB,WAAY,SAAU,WAAY,gBAAiB,aAAc,iBAAkB,qBAAsB,yBACpbC,OAAQ,CAAC,gBAAiB,iBAAkB,iBAC5Cf,SAAU,CAAC,aAAc,gBAAiB,aAAc,aAAc,WAAY,wBAClF1F,SAAU,CAAC,cAAe,oBAAqB,mBAAoB,sBAAuB,UAAW,WAAY,eAAgB,gBAAiB,WAAY,WAAY,qBAAsB,oBAAqB,0BAA2B,MAAO,UAAW,UAAW,aAAc,SAAU,QAAS,yBAA0B,eAAgB,cAAe,oBAAqB,iBAAkB,gBAAiB,mBAAoB,OAAQ,OAAQ,SAAU,aAAc,aAAc,eACze0G,aAAc,CAAC,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,UAAW,MAAO,MAAO,UAAW,MAAO,QAAS,MAAO,QAAS,KAAM,QAAS,UAAW,OAAQ,QAAS,OAAQ,MAAO,OAAQ,SAAU,MAAO,SAAU,WAAY,MAAO,SAC1OC,SAAU,CAAC,WAAY,WAAY,eAAgB,eAAgB,mBAAoB,aAAc,WAAY,iBAAkB,qBAAsB,QAAS,UAAW,UAAW,YAAa,YAAa,eAAgB,iBAAkB,oBAAqB,eAAgB,iBAAkB,0BAA2B,0BAA2B,YAAa,oBAAqB,gBAAiB,iBAAkB,oBAAqB,YAAa,cAAe,qBAAsB,iBAAkB,mBAAoB,mBAAoB,YAAa,YAAa,cAAe,iBAAkB,iBAAkB,aAAc,UAAW,YAAa,gBAC1pBC,QAAS,CAAC,aAAc,QAAS,OAAQ,aAAc,wBACvDhG,SAAU,CAAC,cAAe,iBAAkB,eAAgB,wBAAyB,eAAgB,oBAAqB,YAAa,gBAAiB,mBAAoB,gBAAiB,iBAAkB,cAAe,aAAc,aAAc,eAAgB,kBAAmB,WAAY,aAAc,YAAa,cAAe,cAAe,OAAQ,UAAW,aACrX3I,OAAQ,CAAC,QAAS,OAAQ,YAAa,SAAU,YAAa,aAAc,SAAU,OAAQ,MAAO,QAAS,QAAS,QAAS,WAAY,YAAa,UAAW,YAAa,UAAW,QAAS,QAAS,UAAW,QAAS,MAAO,aAAc,gBAAiB,QAAS,YAAa,YAAa,OAAQ,UAAW,SAC9T4O,OAAQ,CAAC,aAAc,UAAW,aAAc,kBAAmB,aAAc,cAAe,kBAAmB,WAAY,WAAY,qBAAsB,eAAgB,qBAAsB,yBAA0B,aAAc,aAAc,gBAAiB,eAAgB,kBAAmB,iBAAkB,cAAe,gBAAiB,qCAAsC,cAAe,UAAW,YAAa,SAAU,YAAa,wBAAyB,QAAS,kBAAmB,eAAgB,kBAAmB,cAC/hBC,YAAa,CAAC,gBAAiB,aAAc,SAAU,YAAa,cAAe,kBAAmB,cAAe,iBAAkB,eAAgB,gBAAiB,UAAW,aACnL5B,QAAS,CAAC,kBAAmB,YAAa,oBAAqB,UAE/DgB,WAAY,CAAC,WAAY,UAGzBhE,UAAW,CAAC,UAAW,UAAW,QAAS,OAAQ,YAAa,iBAAkB,OAAQ,OAAQ,UAAW,QAAS,WAAY,SAAU,eCtBjI/C,GAAWrQ,GAAgB,CAEtCmU,SAAU,CAAC,MAAO,MAAO,QAAS,MAAO,MAAO,KAAM,MAAO,gBAAiB,SAAU,QAAS,UAAW,QAAS,SAAU,OAAQ,KAAM,UAAW,QAAS,aAAc,QAAS,YAAa,WAAY,UAAW,SAAU,SAAU,UAAW,aAAc,WAAY,gBAAiB,WAAY,UAAW,SAAU,QAAS,UAAW,eAAgB,eAAgB,oBAAqB,eAAgB,SAAU,WAAY,OAAQ,aAAc,UAAW,UAAW,SAAU,OAAQ,OAAQ,OAAQ,WAAY,cAAe,SAAU,OAAQ,OAAQ,SAAU,SAAU,OAAQ,UAAW,SAAU,OAAQ,WAAY,QAAS,OAAQ,aAAc,MAAO,UAAW,WAAY,gBAAiB,OAAQ,OAAQ,WAAY,OAAQ,QAAS,QAAS,SAAU,WAAY,WAAY,cAAe,kBAAmB,KAAM,KAAM,QAAS,QAAS,SAAU,YAAa,OAAQ,KAAM,OAAQ,MAAO,OAAQ,OAAQ,OAAQ,SAAU,OAAQ,QAAS,WAAY,UAAW,eAAgB,MAAO,OAAQ,SAAU,KAAM,MAAO,UAAW,KAAM,OAAQ,iBAAkB,YAAa,aAAc,UAAW,SAAU,KAAM,QAAS,QAAS,OAAQ,UAAW,QAAS,OAAQ,YAAa,UAAW,QAAS,OAAQ,YAAa,SAAU,YAAa,OAAQ,WAAY,cAAe,aAAc,cAAe,UAAW,WAAY,SAAU,SAAU,SAAU,QAAS,WAAY,WAAY,aAAc,OAAQ,OAAQ,SAAU,gBAAiB,SAAU,yBAA0B,iCAAkC,0BAA2B,eAAgB,MAAO,UAAW,WAAY,OAAQ,aAAc,cAAe,QAAS,cAAe,WAAY,OAAQ,KAAM,MAAO,OAAQ,cAAe,UAAW,WAAY,cAAe,UAAW,QAAS,SAAU,UAAW,SAAU,aAAc,MAAO,OAAQ,SAAU,UAAW,OAAQ,UAAW,QAAS,QAAS,OAAQ,eAAgB,aACv5D8D,KAAM,CAAC,WAAY,SAAU,MAAO,MAAO,MAAO,WAAY,QAAS,MAAO,MAAO,MAAO,KAAM,MAAO,YAAa,KAAM,gBAAiB,MAAO,QAAS,UAAW,MAAO,aAAc,OAAQ,KAAM,UAAW,WAAY,OAAQ,UAAW,OAAQ,YAAa,mBAAoB,cAAe,QAAS,QAAS,WAAY,UAAW,YAAa,SAAU,SAAU,UAAW,aAAc,aAAc,cAAe,WAAY,UAAW,gBAAiB,QAAS,SAAU,QAAS,UAAW,eAAgB,eAAgB,oBAAqB,eAAgB,SAAU,OAAQ,MAAO,aAAc,MAAO,UAAW,UAAW,UAAW,aAAc,WAAY,SAAU,OAAQ,WAAY,aAAc,cAAe,aAAc,WAAY,SAAU,SAAU,OAAQ,WAAY,SAAU,YAAa,OAAQ,UAAW,SAAU,WAAY,UAAW,QAAS,QAAS,QAAS,QAAS,MAAO,UAAW,UAAW,QAAS,OAAQ,OAAQ,MAAO,SAAU,KAAM,OAAQ,QAAS,QAAS,SAAU,OAAQ,WAAY,YAAa,KAAM,UAAW,QAAS,YAAa,YAAa,QAAS,QAAS,cAAe,SAAU,MAAO,UAAW,YAAa,WAAY,OAAQ,KAAM,YAAa,OAAQ,MAAO,WAAY,OAAQ,UAAW,OAAQ,QAAS,OAAQ,QAAS,QAAS,QAAS,MAAO,MAAO,SAAU,SAAU,QAAS,QAAS,WAAY,UAAW,QAAS,OAAQ,KAAM,OAAQ,MAAO,OAAQ,SAAU,UAAW,eAAgB,KAAM,OAAQ,OAAQ,SAAU,KAAM,QAAS,QAAS,SAAU,WAAY,MAAO,UAAW,SAAU,WAAY,YAAa,UAAW,WAAY,UAAW,QAAS,aAAc,YAAa,SAAU,OAAQ,OAAQ,aAAc,WAAY,WAAY,SAAU,QAAS,WAAY,OAAQ,SAAU,SAAU,SAAU,UAAW,SAAU,UAAW,eAAgB,MAAO,OAAQ,WAAY,OAAQ,QAAS,MAAO,QAAS,UAAW,WAAY,WAAY,aAAc,YAAa,MAAO,cAAe,QAAS,YAAa,OAAQ,YAAa,gBAAiB,kBAAmB,KAAM,WAAY,cAAe,YAAa,cAAe,OAAQ,OAAQ,QAAS,SAAU,UAAW,SAAU,QAAS,QAAS,OAAQ,QAAS,SAAU,UAAW,UAAW,OAAQ,WAAY,QAAS,OAAQ,OAAQ,QAAS,OAAQ,UCC5xExK,GAAiB6B,GAAc,CAAC,4BAChC9B,GAAkB8B,GAAc,CACtC,OAAQ,OAAQ,QAAS,WAAY,SAAU,SAAU,eAAgB,WAAY,SAAU,uBAE/F,gBAAiB,SACjB,SAAU,MAAO,mBACjB,gBACA,iBACA,eAAgB,oDAAqD,aACrE,wCAAyC,eAAgB,yBACzD,cAAe,MAAO,0BAA2B,eACjD,iCAAkC,gBAAiB,YAAa,gBAAiB,aAAc,qBAAsB,oBAAqB,eAAgB,gBAAiB,mBAAoB,aAAc,cAAe,WAAY,iBAAkB,gBAAiB,qBAAsB,SAAU,qBAAsB,oBAAqB,4BAA6B,2BAA4B,4BAA6B,kBAAmB,cAAe,cAAe,mBAAoB,sBAAuB,UAAW,wBAAyB,oBAAqB,oBAAqB,0BAA2B,eAAgB,WAAY,aAAc,yBAA0B,yBAA0B,WAAY,+BAAgC,0BAA2B,gBAAiB,gCAAiC,6BAA8B,eAAgB,YAAa,aAAc,oBAAqB,OAAQ,WAAY,kBAAmB,iBAAkB,mBAAoB,WAAY,qBAAsB,gBAAiB,aAAc,uBAAwB,uBAAwB,oBAAqB,mBAAoB,yBAA0B,iBAAkB,eAAgB,UAAW,YAAa,mBAAoB,iBAAkB,oBAAqB,WAAY,yBAA0B,0BAA2B,QAAS,YAAa,kBAAmB,wBAAyB,QAAS,WAAY,eAAgB,QAAS,aAAc,eAAgB,oBAAqB,UAAW,SAAU,qBAAsB,UAAW,kBAAmB,qBAAsB,YAAa,qBAAsB,mBAAoB,YAAa,4BAA6B,QAAS,oBAAqB,UAAW,yBAA0B,2BAA4B,oBAAqB,gBAAiB,UAAW,uBAAwB,qBAAsB,oBAAqB,qBAAsB,qBAAsB,6BAA8B,qBAAsB,SAAU,SAAU,aAAc,OAAQ,QAAS,WAAY,OAAQ,SAAU,uBAAwB,kBAAmB,sBAAuB,OAAQ,6BAA8B,WAAY,eAAgB,6BAA8B,uBAAwB,cAAe,UAAW,qBAAsB,UAAW,eAAgB,gBAAiB,eAAgB,YAAa,gBAAiB,aAAc,gBAAiB,qBAAsB,kBAAmB,iBAAkB,gBAAiB,UAAW,QAAS,iBAAkB,WAAY,8BAA+B,UAAW,OAAQ,oBAAqB,OAAQ,iBAAkB,aAAc,YAAa,0BAC3pF5B,GAAwB4B,GAAc,CAAC,cAAe,SAAU,cAChE3B,GAAgB2B,GAAc,CAAC,OAAQ,qCAAsC,uBACnF,0BACMhC,GAAkBgC,GAAc,CAAC,gDAAiD,2BAEzE,MAAM4I,WAA6B9Q,GAChD,SAAAC,GACE,OAAO,IAAIoF,GAAU,CACzBe,gBAAMA,GACNC,eAAMA,GACNC,sBAAMA,GACNC,cAAMA,GACNL,gBAAMA,GACAvD,iBAAkBsG,GAClBxC,sBAAuB6C,GACvBzD,qBAAqB,EACrBgB,YAAa,CAAC,CACZhD,MAAO,QACPH,SAAU,CAAC,OAEbsC,WAAY,CAAC,QAAS,MACtBpD,WAAY,CACVqB,MAAO,KACPrf,KAAM,OAERkc,WAAY,CACVwG,MAAO,CAAC,KACRC,OAAQ,CAAC,MAEXN,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAGpG,CAED,aAAA7G,GACE,MAAO,CACLtB,qBAAsB,CAAC,MAE1B,ECtDI,MAAMmK,GAAWrQ,GAAgB,CAGtCyU,IAAK,CAAC,QAAS,WAAY,SAAU,aAAc,UAAW,SAAU,SAAU,MAAO,QAAS,QAAS,UAAW,YAAa,aAAc,aAAc,gBAAiB,uBAAwB,cAAe,YAAa,MAAO,OAAQ,QAAS,SAAU,UAAW,MAAO,MAAO,aAAc,UAAW,cAAe,QAAS,KAAM,MAAO,QAAS,aAAc,MAAO,YAAa,aAAc,MAAO,aAAc,QAAS,KAAM,SAAU,YAAa,gBAAiB,OAAQ,iBAAkB,mBAAoB,YAAa,6BAA8B,oBAAqB,2BAA4B,qBAAsB,eAAgB,MAAO,iBAAkB,OAAQ,QAAS,aAAc,kCAAmC,SAAU,iBAAkB,YAAa,WAAY,QAAS,UAAW,iBAAkB,oBAAqB,SAAU,QAAS,UAAW,SAAU,SAAU,UAAW,MAAO,OAAQ,OAAQ,UAAW,YAAa,OAAQ,MAAO,QAAS,eAAgB,UAAW,KAAM,OAAQ,cAAe,QAAS,OAAQ,oBAAqB,SAAU,UAAW,UAAW,WAAY,OAAQ,UAAW,QAAS,SAAU,OAAQ,YAAa,kBAAmB,UAAW,QAAS,aAAc,qBAAsB,qBAAsB,WAAY,YAAa,QAAS,QAAS,SAAU,oBAAqB,QAAS,UAAW,YAAa,MAAO,WAAY,UAAW,YAAa,SAAU,WAAY,UAAW,cAAe,2BAA4B,UAAW,WAAY,SAAU,YAAa,mBAAoB,UAAW,UAAW,aAAc,cAAe,aAAc,eAAgB,YAAa,gBAAiB,aAAc,cAAe,SAAU,aAAc,WAAY,UAAW,WAAY,mBAAoB,aAAc,UAAW,OAAQ,QAAS,OAAQ,SAAU,cAAe,QAAS,OAAQ,MAAO,YAAa,UAAW,kBAAmB,eAAgB,iBAAkB,0BAA2B,yBAA0B,eAAgB,oBAAqB,eAAgB,SAAU,QAAS,OAAQ,WAAY,YAAa,OAAQ,WAAY,MAAO,WAAY,kBAAmB,aAAc,aAAc,aAAc,MAAO,UAAW,UAAW,UAAW,WAAY,aAAc,WAAY,UAAW,UAAW,UAAW,kBAAmB,SAAU,YAAa,aAAc,aAAc,OAAQ,WAAY,SAAU,gBAAiB,aAAc,eAAgB,YAAa,UAAW,UAAW,cAAe,OAAQ,WAAY,cAAe,oBAAqB,MAAO,KAAM,WAAY,SAAU,SAAU,OAAQ,gBAAiB,OAAQ,OAAQ,YAAa,aAAc,UAAW,WAAY,OAAQ,OAAQ,WAAY,OAAQ,SAAU,SAAU,WAAY,WAAY,YAAa,MAAO,SAAU,UAAW,OAAQ,SAAU,SAAU,UAAW,WAAY,QAAS,SAAU,SAAU,UAAW,YAAa,YAAa,UAAW,SAAU,OAAQ,UAAW,WAAY,YAAa,WAAY,gBAAiB,gBAAiB,YAAa,aAAc,aAAc,YAAa,wBAAyB,UAAW,QAAS,SAAU,QAAS,QAAS,SAAU,OAAQ,QAAS,OAAQ,YAAa,QAAS,QAAS,SAAU,SAAU,QAAS,YAAa,MAAO,QAAS,sBAAuB,yBAA0B,aAAc,UAAW,SAAU,UAAW,SAAU,OAAQ,KAAM,SAAU,OAAQ,WAAY,WAAY,YAAa,KAAM,MAAO,aAAc,MAAO,OAAQ,WAAY,YAAa,iBAAkB,WAAY,gBAAiB,SAAU,4BAA6B,QAAS,UAAW,SAAU,QAAS,WAAY,SAAU,OAAQ,SAAU,UAAW,4BAA6B,OAAQ,kBAAmB,SAAU,OAAQ,SAAU,uBAAwB,gBAAiB,YAAa,OAAQ,UAAW,OAAQ,QAAS,OAAQ,mBAAoB,cAAe,cAAe,aAAc,WAAY,KAAM,SAAU,QAAS,YAAa,YAAa,WAAY,SAAU,KAAM,YAAa,YAAa,cAAe,QAAS,UAAW,SAAU,UAAW,WAAY,gBAAiB,OAAQ,aAAc,YAAa,SAAU,SAAU,QAAS,QAAS,QAAS,cAAe,SAAU,gBAAiB,WAAY,UAAW,KAAM,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,UAAW,6BAA8B,mBAAoB,YAAa,WAAY,OAAQ,UAAW,YAAa,UAAW,OAAQ,OAAQ,QAAS,MAAO,iBAAkB,OAAQ,OAAQ,UAAW,QAAS,MAAO,WAAY,QAAS,OAAQ,aAAc,UAAW,SAAU,aAAc,WAAY,OAAQ,UAAW,OAAQ,YAAa,QAAS,SAAU,OAAQ,QAAS,UAAW,OAAQ,QAAS,QAAS,SAAU,OAAQ,iBAAkB,OAAQ,QAAS,YAAa,iBAAkB,WAAY,OAAQ,OAAQ,WAAY,WAAY,OAAQ,eAAgB,MAAO,MAAO,aAAc,qBAAsB,UAAW,SAAU,QAAS,eAAgB,WAAY,kBAAmB,aAAc,2BAA4B,kBAAmB,kCAAmC,WAAY,MAAO,MAAO,aAAc,YAAa,aAAc,SAAU,SAAU,oBAAqB,0BAA2B,SAAU,qBAAsB,yBAA0B,mBAAoB,QAAS,WAAY,cAAe,YAAa,WAAY,QAAS,qBAAsB,gBAAiB,WAAY,MAAO,OAAQ,QAAS,WAAY,SAAU,QAAS,OAAQ,MAAO,QAAS,QAAS,YAAa,WAAY,UAAW,QAAS,OAAQ,KAAM,OAAQ,OAAQ,mBAAoB,UAAW,MAAO,UAAW,SAAU,SAAU,qBAAsB,mBAAoB,SAAU,YAAa,QAAS,OAAQ,WAAY,QAAS,UAAW,WAAY,SAAU,KAAM,MAAO,UAAW,SAAU,UAAW,OAAQ,KAAM,SAAU,OAAQ,OAAQ,WAAY,eAAgB,WAAY,YAAa,kBAAmB,SAAU,UAAW,aAAc,KAAM,QAAS,oBAAqB,SAAU,MAAO,eAAgB,QAAS,UAAW,OAAQ,WAAY,UAAW,QAAS,QAAS,YAAa,SAAU,SAAU,UAAW,UAAW,YAAa,eAAgB,eAAgB,aAAc,UAAW,WAAY,qBAAsB,QAAS,gBAAiB,WAAY,YAAa,WAAY,YAAa,UAAW,OAAQ,QAAS,YAAa,UAAW,OAAQ,QAAS,OAAQ,YAAa,YAAa,UAAW,WAAY,UAAW,QAAS,aAAc,aAAc,YAAa,aAAc,UAAW,cAAe,UAAW,WAAY,UAAW,UAAW,QAAS,QAAS,UAAW,UAAW,QAAS,gBAAiB,QAAS,QAAS,OAAQ,OAAQ,QAAS,QAAS,OAAQ,WAAY,YAAa,UAAW,SAAU,YAAa,aAAc,YAAa,MAAO,YAAa,aAAc,UAAW,SAAU,UAAW,WAAY,UAAW,SAAU,OAAQ,SAAU,SAAU,SAAU,SAAU,gBAAiB,SAAU,aAAc,QAAS,kBAAmB,UAAW,UAAW,YAAa,cAAe,cAAe,UAAW,WAAY,gBAAiB,QAAS,UAAW,UAAW,WAAY,SAAU,aAAc,QAAS,SAAU,YAAa,UAAW,UAAW,UAAW,SAAU,QAAS,kBAAmB,kBAAmB,sBAAuB,QAAS,QAAS,WAAY,SAAU,UAAW,MAAO,YAAa,aAAc,aAAc,OAAQ,WAAY,OAAQ,OAAQ,UAAW,KAAM,OAAQ,OAAQ,YAAa,SAAU,SAAU,UAAW,iBAAkB,SAAU,SAAU,SAAU,qBAAsB,WAAY,SAAU,YAAa,gBAAiB,YAAa,YAAa,WAAY,YAAa,SAAU,eAAgB,SAAU,eAAgB,SAAU,UAAW,eAAgB,MAAO,QAAS,2BAA4B,MAAO,QAAS,UAAW,aAAc,QAAS,OAAQ,WAAY,SAAU,SAAU,UAAW,SAAU,OAAQ,OAAQ,kBAAmB,UAAW,WAAY,WAAY,YAAa,aAAc,4BAA6B,OAAQ,SAAU,SAAU,UAAW,sBAAuB,WAAY,MAAO,iBAAkB,oBAAqB,YAAa,sBAAuB,eAAgB,WAAY,eAAgB,iBAAkB,mBAAoB,WAAY,aAAc,QAAS,SAAU,OAAQ,UAAW,gBAAiB,SAAU,SAAU,QAAS,UAAW,QAAS,YAAa,gBAAiB,OAAQ,QAAS,SAAU,mBAAoB,iBAAkB,cAAe,QAAS,SAAU,QAAS,iBAAkB,SAAU,aAAc,OAAQ,cAAe,OAAQ,OAAQ,WAAY,YAAa,YAAa,aAAc,YAAa,aAAc,OAAQ,OAAQ,OAAQ,UAAW,YAAa,eAAgB,gBAAiB,WAAY,WAAY,UAAW,WAAY,KAAM,YAAa,cAAe,WAAY,YAAa,cAAe,6BAA8B,QAAS,UAAW,WAAY,OAAQ,QAAS,WAAY,UAAW,YAAa,WAAY,OAAQ,QAAS,YAAa,cAAe,YAAa,OAAQ,cAAe,aAAc,SAAU,UAAW,QAAS,SAAU,YAAa,UAAW,WAAY,UAAW,SAAU,WAAY,UAAW,WAAY,QAAS,SAAU,UAAW,QAAS,MAAO,OAAQ,QAAS,QAAS,WAAY,WAAY,gBAAiB,QAAS,SAAU,QAAS,WAAY,YAAa,QAAS,SAAU,YAAa,UAAW,eAAgB,YAAa,WAAY,UAAW,UAAW,OAAQ,OAAQ,WAAY,SAAU,OAAQ,QAAS,WAAY,OAAQ,OAAQ,QAAS,QAAS,aAAc,SAAU,OAAQ,UAAW,SAAU,gBAAiB,OAAQ,WAAY,UAAW,QAAS,UAAW,MAAO,OAAQ,aAAc,MAAO,WAAY,UCH7wT/D,GAAY1Q,GAAgB,CAgBvCyU,IAAK,CAAC,MAAO,OAAQ,UAAW,UAAW,cAAe,cAAe,YAAa,wBAAyB,mCAAoC,gCAAiC,iCAAkC,8BAA+B,oBAAqB,QAAS,OAAQ,OAAQ,QAAS,MAAO,MAAO,SAAU,UAAW,YAAa,SAAU,UAAW,OAAQ,OAAQ,UAAW,OAAQ,mBAAoB,cAAe,UAAW,WAAY,eAAgB,YAAa,UAAW,SAAU,YAAa,gBAAiB,OAAQ,UAAW,aAAc,MAAO,MAAO,QAAS,YAAa,UAAW,eAAgB,eAAgB,eAAgB,oBAAqB,eAAgB,UAAW,WAAY,OAAQ,WAAY,WAAY,cAAe,WAAY,aAAc,MAAO,UAAW,aAAc,YAAa,YAAa,SAAU,UAAW,UAAW,aAAc,MAAO,cAAe,MAAO,qBAAsB,MAAO,UAAW,QAAS,QAAS,cAAe,QAAS,SAAU,aAAc,cAAe,YAAa,gBAAiB,iBAAkB,qBAAsB,qBAAsB,uBAAwB,qBAAsB,mBAAoB,sBAAuB,kBAAmB,4BAA6B,gBAAiB,oBAAqB,oBAAqB,kBAAmB,sBAAuB,kBAAmB,iBAAkB,2BAA4B,aAAc,aAAc,WAAY,WAAY,eAAgB,MAAO,YAAa,OAAQ,cAAe,KAAM,SAAU,YAAa,YAAa,aAAc,aAAc,UAAW,SAAU,QAAS,WAAY,KAAM,UAAW,WAAY,6BAA8B,2BAA4B,6BAA8B,yBAA0B,uBAAwB,yBAA0B,kBAAmB,sBAAuB,oBAAqB,sBAAuB,sBAAuB,gBAAiB,cAAe,kBAAmB,gBAAiB,kBAAmB,qBAAsB,mBAAoB,qBAAsB,MAAO,WAAY,aAAc,QAAS,OAAQ,QAAS,OAAQ,SAAU,OAAQ,KAAM,YAAa,iBAAkB,SAAU,MAAO,QAAS,OAAQ,OAAQ,QAAS,QAAS,MAAO,MAAO,SAAU,cAAe,MAAO,SAAU,MAAO,QAAS,YAAa,iBAAkB,MAAO,MAAO,YAAa,QAAS,SAAU,eAAgB,eAAgB,kBAAmB,kBAAmB,KAAM,QAAS,WAAY,MAAO,QAAS,UAAW,QAAS,UAAW,OAAQ,OAAQ,SAAU,SAAU,UAAW,UAAW,QAAS,QAAS,QAAS,YAAa,aAAc,OAAQ,QAAS,SAAU,SAAU,cAAe,OAAQ,OAAQ,UAAW,OAAQ,MAAO,QAAS,QAAS,UAAW,cAAe,kBAAmB,QAAS,OAAQ,SAAU,aAAc,cAAe,cAAe,UAAW,SAAU,YAAa,kBAAmB,MAAO,WAAY,MAAO,OAAQ,WAAY,cAAe,cAAe,YAAa,eAAgB,gBAAiB,cAAe,YAAa,UAAW,UAAW,UAAW,YAAa,aAAc,eAAgB,OAAQ,QAAS,WAAY,QAAS,QAAS,iBAAkB,YAAa,QAAS,OAAQ,WAAY,WAAY,gBAAiB,OAAQ,SAAU,WAAY,UAAW,WAAY,aAAc,UAAW,OAAQ,UAAW,aAAc,OAE74G,MAAO,UAAW,WAAY,YAAa,MAAO,UAAW,SAAU,UAAW,MAAO,UAAW,QAAS,QAAS,SAAU,mBAAoB,OAAQ,WAAY,YAAa,OAAQ,OAAQ,OAAQ,gBAAiB,UAAW,mBAAoB,SAAU,YAAa,OAAQ,OAAQ,UCbhShH,GAAiB6B,GAAc,CAAC,0CAChC9B,GAAkB8B,GAAc,CACtC,OAAQ,OAAQ,QAAS,WAAY,SAAU,eAAgB,WAAY,QAAS,SAEpF,yBAA0B,SAAU,iBACpC,SAAU,MACV,gBACA,mBACA,cAAe,qFAAsF,4DAA6D,0CAA2C,qCAC7M,uBAAwB,eAAgB,6BAA8B,gBAAiB,kBAAmB,SAAU,mBACpH,iBAAkB,WAAY,2BAA4B,iBAAkB,iBAAkB,sBAAuB,aAAc,aAAc,gBAAiB,kBAAmB,cAAe,kBAAmB,kBAAmB,SAAU,uBAAwB,cAAe,OAAQ,SAAU,mBAAoB,4BAA6B,+BAAgC,sBAAuB,cAAe,iBAAkB,yBAA0B,QAAS,SAAU,kBAAmB,eAAgB,eAAgB,cAAe,mBAAoB,kBAAmB,uBAAwB,cAAe,cAAe,qBAAsB,WAAY,kBAAmB,kBAAmB,KAAM,gBAAiB,gBAAiB,aAAc,YAAa,gBAAiB,iBAAkB,qBAAsB,YAAa,YAAa,YAAa,UAAW,UAAW,QAAS,QAAS,QAAS,UAAW,OAAQ,kBAAmB,kBAAmB,YAAa,wBAAyB,WAAY,2BAA4B,cAAe,kBAAmB,iBAAkB,UAAW,oBAAqB,uBAAwB,oBAAqB,oBAAqB,cAAe,eAAgB,UAAW,qBAAsB,QAAS,eAAgB,gBAAiB,gBAAiB,cAAe,UAAW,mBAAoB,qBAAsB,SAAU,WAAY,wBAAyB,YAAa,oBAAqB,mBAAoB,YAAa,eAAgB,qBAAsB,WAAY,kBAAmB,OAAQ,qBAAsB,iBAAkB,eAAgB,uBAAwB,uBAAwB,uBAAwB,wBAAyB,oBAAqB,mBAAoB,mBAAoB,iBAAkB,cAAe,eAAgB,cAAe,qBAAsB,uBAAwB,cAAe,aAAc,qBAAsB,mBAAoB,eAAgB,kBAAmB,sBAAuB,wBAAyB,mBAAoB,eAAgB,gBAAiB,uBAAwB,sBAAuB,gBAAiB,aAAc,mBAAoB,cAAe,oBAAqB,cAAe,iBAAkB,gBAAiB,WAAY,oBAAqB,kBAAmB,0BAA2B,iBAAkB,gBAAiB,cAAe,oBAAqB,yBAA0B,gBAAiB,eAAgB,mBAAoB,aAAc,gBAAiB,iBAAkB,kBAAmB,gBAAiB,MAAO,KACrkF,UAAW,QAAS,OAAQ,SAAU,SAAU,UAC1C5B,GAAwB4B,GAAc,CAAC,yBAA0B,SAAU,YAAa,UACxF3B,GAAgB2B,GAAc,CAAC,OAAQ,qCAAsC,uBAAwB,sCAC3G,kBACMhC,GAAkBgC,GAAc,CAAC,YAAa,YAAa,gBAAiB,2BAsClF,SAASvC,GAAY/U,GACnB,OAAOA,EAAOrN,KAAI,CAACmI,EAAOzO,KACxB,MAAMgU,EAAYL,EAAO3T,EAAI,IAAM8R,GAEnC,OAAIrC,GAAQ4C,IAAI5D,IAA6B,MAAnBuF,EAAUzT,KAE3B,IAAKkO,EACVtM,KAAMuP,GAAUgB,wBAIbjE,CAAK,GAEhB,CCvEO,MAAM4d,GAAY1Q,GAAgB,CAkBvCyU,IAAK,CAAC,MAAO,OAAQ,QAAS,aAAc,iBAAkB,YAAa,wBAAyB,oBAAqB,+BAAgC,4BAA6B,6BAA8B,eAAgB,0BAA2B,uBAAwB,wBAAyB,4BAA6B,yBAA0B,YAAa,eAAgB,YAAa,gBAAiB,kBAAmB,0BAA2B,iBAAkB,eAAgB,qBAAsB,iBAAkB,gBAAiB,aAAc,cAAe,kBAAmB,kBAAmB,mBAAoB,iBAAkB,WAAY,YAAa,aAAc,UAAW,aAAc,UAAW,aAAc,YAAa,YAAa,UAAW,aAAc,YAAa,UAAW,mBAAoB,mBAAoB,kBAAmB,QAAS,OAAQ,QAAS,OAAQ,QAAS,QAAS,oCAAqC,+BAAgC,MAAO,uBAAwB,uBAAwB,gBAAiB,aAAc,SAAU,aAAc,sBAAuB,uBAAwB,uBAAwB,eAAgB,gBAAiB,SAAU,QAAS,YAAa,eAAgB,gBAAiB,SAAU,aAAc,UAAW,cAAe,UAAW,SAAU,aAAc,UAAW,cAAe,wBAAyB,uBAAwB,OAAQ,OAAQ,OAAQ,OAAQ,YAAa,aAAc,YAAa,MAAO,OAAQ,WAAY,UAAW,YAAa,uBAAwB,WAAY,SAAU,YAAa,2BAA4B,yBAA0B,WAAY,mBAAoB,eAAgB,OAAQ,MAAO,OAAQ,MAAO,QAAS,WAAY,YAAa,aAAc,YAAa,kBAAmB,0BAA2B,iBAAkB,mBAAoB,eAAgB,qBAAsB,iBAAkB,eAAgB,iBAAkB,kBAAmB,0BAA2B,kBAAmB,oBAAqB,sBAAuB,eAAgB,oBAAqB,sBAAuB,eAAgB,kBAAmB,oBAAqB,wBAAyB,2BAA4B,4BAA6B,mCAAoC,iCAAkC,kBAAmB,YAAa,aAAc,UAAW,WAAY,UAAW,SAAU,oBAAqB,oBAAqB,UAAW,cAAe,UAAW,aAAc,OAAQ,eAAgB,UAAW,cAAe,WAAY,aAAc,MAAO,eAAgB,6BAA8B,uBAAwB,2CAA4C,UAAW,8BAA+B,YAAa,cAAe,UAAW,QAAS,8BAA+B,YAAa,MAAO,oBAAqB,UAAW,kBAAmB,wBAAyB,WAAY,oBAAqB,oBAAqB,qBAAsB,SAAU,WAAY,WAAY,cAAe,OAAQ,WAAY,YAAa,oBAAqB,oBAAqB,aAAc,MAAO,iBAAkB,cAAe,eAAgB,aAAc,aAAc,OAAQ,SAAU,SAAU,MAAO,SAAU,QAAS,YAAa,eAAgB,UAAW,SAAU,eAAgB,gBAAiB,WAAY,YAAa,aAAc,UAAW,aAAc,UAAW,gBAAiB,aAAc,YAAa,UAAW,6BAA8B,aAAc,gBAAiB,YAAa,qBAAsB,UAAW,mBAAoB,mBAAoB,kBAAmB,yBAA0B,yBAA0B,WAAY,MAAO,WAAY,gBAAiB,mBAAoB,aAAc,OAAQ,QAAS,OAAQ,SAAU,MAAO,OAAQ,WAAY,WAAY,UAAW,KAAM,YAAa,iBAAkB,MAAO,gBAAiB,wBAAyB,QAAS,OAAQ,QAAS,oCAAqC,MAAO,UAAW,aAAc,yBAA0B,qBAAsB,qBAAsB,SAAU,MAAO,MAAO,UAAW,kBAAmB,MAAO,OAAQ,YAAa,iBAAkB,WAAY,SAAU,YAAa,QAAS,SAAU,aAAc,MAAO,OAAQ,aAAc,mBAAoB,6BAA8B,gBAAiB,gBAAiB,cAAe,cAAe,eAAgB,WAAY,aAAc,YAAa,YAAa,eAAgB,kBAAmB,kBAAmB,KAAM,qBAAsB,iBAAkB,oBAAqB,WAAY,MAAO,QAAS,eAAgB,6BAA8B,gBAAiB,2BAA4B,wBAAyB,6BAA8B,UAAW,SAAU,UAAW,OAAQ,kBAAmB,SAAU,eAAgB,eAAgB,cAAe,iBAAkB,gBAAiB,oBAAqB,YAAa,YAAa,aAAc,iBAAkB,UAAW,aAAc,WAAY,WAAY,WAAY,YAAa,YAAa,SAAU,UAAW,oCAAqC,qCAAsC,4CAA6C,kCAAmC,4BAA6B,qBAAsB,cAAe,UAAW,QAAS,QAAS,QAAS,aAAc,OAAQ,QAAS,kBAAmB,8BAA+B,OAAQ,OAAQ,OAAQ,OAAQ,0BAA2B,OAAQ,WAAY,cAAe,OAAQ,WAAY,cAAe,OAAQ,MAAO,OAAQ,OAAQ,UAAW,QAAS,QAAS,aAAc,iBAAkB,OAAQ,SAAU,UAAW,YAAa,YAAa,eAAgB,WAAY,cAAe,WAAY,YAAa,aAAc,cAAe,aAAc,cAAe,eAAgB,YAAa,gBAAiB,eAAgB,cAAe,cAAe,aAAc,cAAe,cAAe,qBAAsB,0BAA2B,sBAAuB,sBAAuB,aAAc,qBAAsB,qBAAsB,uBAAwB,kBAAmB,gBAAiB,YAAa,mBAAoB,gBAAiB,cAAe,eAAgB,WAAY,iBAAkB,aAAc,aAAc,eAAgB,eAAgB,YAAa,aAAc,cAAe,UAAW,gBAAiB,mBAAoB,WAAY,YAAa,OAAQ,UAAW,UAAW,OAAQ,UAAW,UAAW,4CAA6C,8BAA+B,aAAc,SAAU,aAAc,cAAe,mBAAoB,SAAU,wBAAyB,kBAAmB,SAAU,YAAa,MAAO,UAAW,uBAAwB,2BAA4B,+BAAgC,4CAA6C,uCAAwC,4BAA6B,sBAAuB,0BAA2B,gCAAiC,2BAA4B,gCAAiC,mCAAoC,mCAAoC,2CAA4C,wCAAyC,sCAAuC,uCAAwC,qCAAsC,4CAA6C,8BAA+B,2BAA4B,oCAAqC,2BAA4B,oCAAqC,gCAAiC,sCAAuC,yBAA0B,8CAA+C,gCAAiC,qCAAsC,iBAAkB,gCAAiC,mCAAoC,kCAAmC,sCAAuC,iCAAkC,sCAAuC,uCAAwC,2BAA4B,qBAAsB,4BAA6B,yCAA0C,0BAA2B,mCAAoC,oCAAqC,yBAA0B,gCAAiC,gBAAiB,6CAA8C,qCAAsC,cAAe,mBAAoB,+BAAgC,iBAAkB,6BAA8B,8BAA+B,MAAO,OAAQ,kBAAmB,eAAgB,kBAAmB,aAAc,UAAW,WAAY,uBAAwB,eAAgB,gBAAiB,WAAY,YAAa,aAAc,UAAW,aAAc,UAAW,OAAQ,aAAc,YAAa,aAAc,YAAa,eAAgB,cAAe,UAAW,YAAa,UAAW,OAAQ,eAAgB,mBAAoB,mBAAoB,kBAAmB,aAAc,SAAU,YAAa,OAAQ,WAAY,QAAS,QAAS,2BAA4B,2BAA4B,WAAY,wBAAyB,wBAAyB,iBAAkB,gBAAiB,iBAAkB,cAAe,iBAAkB,gBAAiB,iBAAkB,gBAAiB,mBAAoB,kBAAmB,cAAe,mBAAoB,uBAAwB,uBAAwB,sBAAuB,SAAU,UAAW,UAAW,QAAS,cAAe,WAAY,qBAAsB,UAAW,WAAY,WAAY,gBAAiB,eAAgB,yBAA0B,6BAA8B,eAAgB,SAAU,OAAQ,aAAc,gBAAiB,MAAO,aAAc,YAAa,eAAgB,YAAa,OAAQ,OAAQ,aAAc,UAAW,QAAS,UAAW,aAAc,UClB9yTpE,GAAWrQ,GAAgB,CAItCyU,IAAK,CAAC,UAAW,MAAO,QAAS,MAAO,MAAO,KAAM,UAAW,KAAM,OAAQ,OAAQ,QAAS,SAAU,UAAW,aAAc,aAAc,SAAU,QAAS,UAAW,eAAgB,eAAgB,oBAAqB,eAAgB,WAAY,SAAU,WAAY,OAAQ,OAAQ,SAAU,QAAS,YAAa,MAAO,OAAQ,OAAQ,QAAS,QAAS,YAAa,SAAU,QAAS,KAAM,YAAa,QAAS,SAAU,YAAa,OAAQ,KAAM,QAAS,OAAQ,UAAW,OAAQ,OAAQ,YAAa,iBAAkB,QAAS,UAAW,MAAO,OAAQ,KAAM,KAAM,KAAM,QAAS,eAAgB,UAAW,SAAU,SAAU,QAAS,QAAS,MAAO,OAAQ,SAAU,SAAU,SAAU,MAAO,OAAQ,QAAS,QAAS,cAAe,OAAQ,KAAM,UAAW,OAAQ,WAAY,QAAS,SAAU,SAAU,QAAS,SAAU,OAAQ,OAAQ,WAAY,QAAS,UCAp3BhH,GAAiB6B,GAAc,CAAC,4BAYhC9B,GAAkB8B,GAAc,CACtC,mBAAoB,OAAQ,QAAS,WAAY,SAAU,eAAgB,WAAY,QAAS,SAAU,uBAE1G,qDAAsD,qBAAsB,SAC5E,SAAU,MACV,cACA,+BAEA,gEACA,uDAAwD,8EAA+E,aAAc,oDAAqD,cAAe,iBAAkB,aAAc,qBAAsB,6BAA8B,+BAAgC,yBAC7U,0BAA2B,YAAa,YAAa,+BAAgC,sBAAuB,eAAgB,gBAAiB,4BAA6B,gBAAiB,6CAA8C,oBAAqB,mCAAoC,sBAAuB,iCAAkC,+BAAgC,uBAC3X,wBACA,kBACA,kBACA,+BAuBA,gBAAiB,wBAAyB,mBAAoB,iBAAkB,uBAAwB,uBAAwB,oBAAqB,iBAAkB,oBAAqB,uBAAwB,0BAA2B,uBAAwB,iCAAkC,aAAc,kBAAmB,0BAA2B,yBAA0B,aAAc,0BAA2B,eAAgB,6BAA8B,iBAAkB,gBAAiB,uBAAwB,cAAe,cAAe,4BAA6B,eAAgB,YAAa,aAAc,aAAc,aAAc,kBAAmB,QAAS,OAAQ,SAAU,YAAa,iBAAkB,yBAA0B,oBAAqB,kBAAmB,2BAA4B,wBAAyB,wBAAyB,qBAAsB,kBAAmB,qBAAsB,yBAA0B,wBAAyB,2BAA4B,wBAAyB,kCAAmC,cAAe,mBAAoB,2BAA4B,0BAA2B,cAAe,2BAA4B,gBAAiB,8BAA+B,kBAAmB,wBAAyB,eAAgB,eAAgB,6BAA8B,gBAAiB,aAAc,cAAe,cAAe,mBAAoB,SAAU,oBAAqB,0BAA2B,uBAAwB,oBAAqB,uBAAwB,0BAA2B,6BAA8B,0BAA2B,gBAAiB,qBAAsB,kBAAmB,6BAA8B,kBAAmB,oBAAqB,0BAA2B,iBAAkB,iBAAkB,kBAAmB,iBAAkB,gBAAiB,uBAAwB,gBAAiB,gBAAiB,qBAAsB,kBAAmB,gBAAiB,sBAAuB,sBAAuB,mBAAoB,gBAAiB,mBAAoB,uBAAwB,sBAAuB,yBAA0B,sBAAuB,YAAa,iBAAkB,yBAA0B,wBAAyB,YAAa,yBAA0B,cAAe,gBAAiB,sBAAuB,aAAc,aAAc,cAAe,WAAY,YAAa,YAAa,YAAa,iBAAkB,oBAAqB,eAAgB,UAAW,MAAO,kBAAmB,aAAc,SAAU,OAAQ,QAAS,MAAO,SAAU,cAAe,WAAY,eAAgB,mBAAoB,iBAAkB,mCAAoC,sCAAuC,gCAAiC,0BAA2B,uBAAwB,uBAAwB,oBAAqB,iBAAkB,uBAAwB,cAAe,oBAAqB,aAAc,wBAAyB,wBAAyB,0BAA2B,wBAAyB,eAAgB,6BAA8B,kBAAmB,aAAc,oBAAqB,kBAAmB,eAAgB,4BAA6B,6BAA8B,0BAA2B,yBAA0B,aAAc,2BAA4B,eAAgB,iBAAkB,wBAAyB,cAAe,gCAAiC,mCAAoC,cAAe,eAAgB,cAAe,YAAa,aAAc,oBAAqB,sBAAuB,aAAc,iBAAkB,aAAc,kBAAmB,6BAA8B,kBAAmB,gBAAiB,eAAgB,aAAc,QAAS,eAAgB,WAAY,aAAc,sBAAuB,kBAC1zH5B,GAAwB4B,GAAc,CAAC,cAAe,QAAS,SAAU,cACzE3B,GAAgB2B,GAAc,CAAC,eAAgB,+CAAgD,2BAC/FhC,GAAkBgC,GAAc,CAAC,yBAA0B,kDCzC1D,MAAM6I,GAAa,CACxBC,S9CiBa,cAAgChR,GAE7C,SAAAC,GACE,OAAO,IAAIoF,GAAU,CACzBe,gBAAMA,GACNC,eAAMA,GACNC,sBAAMA,GACNC,cAAMA,GACNL,gBAAMA,GACAvD,iBAAkBsG,GAClBxC,sBAAuB6C,GACvB9G,YAAa,CAAC,MACdqE,YAAa,CAEb,CACEhD,MAAO,WACPH,SAAU,CAAC,IAAK,IAAK,KAAM,OAC1B,CACDG,MAAO,WACPH,SAAU,CAAC,IAAK,IAAK,KAAM,OAC1B,QAAS,QAAS,CACnBG,MAAO,SACPH,SAAU,CAAC,IAAK,IAAK,KAAM,MAC3BC,eAAe,GACd,CACDE,MAAO,SACPH,SAAU,CAAC,IAAK,IAAK,KAAM,MAC3BC,eAAe,IAEjBqC,WAAY,CAAC,MACbpD,WAAY,CACVE,QAAQ,GAEVhC,WAAY,CACV2G,YAAY,EACZH,MAAO,CAAC,KACRC,OAAQ,CAAC,MAEXzB,iBAAkB,CAAC,KAAM,KACzBmB,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,MAClDtB,YAAMA,IAEH,G8C1DDsL,I3COa,cAA2BjR,GACxC,SAAAC,GACE,OAAO,IAAIoF,GAAU,CACzBe,gBAAMA,GACNC,eAAMA,GACNC,sBAAMA,GACNC,cAAMA,GACNL,gBAAMA,GACAvD,iBAAkBsG,GAClBxC,sBAAuB6C,GACvBzC,YAAa,CAAC,CACZhD,MAAO,QACPH,SAAU,CAAC,IAAK,IAAK,OACpB,CACDG,MAAO,SACPH,SAAU,CAAC,IAAK,KAAM,KAAM,MAC5BC,eAAe,IAEjBqC,WAAY,CAAC,SACblF,WAAY,CACV2G,YAAY,EACZH,MAAO,CAAC,MAEVM,WAAY,CACV3D,MAAO,MACPrf,KAAM,OAERqiB,UAAW,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAEnD,G2CnCDiK,KxCWa,cAA4BlR,GACzC,SAAAC,GACE,OAAO,IAAIoF,GAAU,CACzBe,gBAAMA,GACNC,eAAMA,GACNC,sBAAMA,GACNC,cAAMA,GACNL,gBAAMA,GACAvD,iBAAkBsG,GAClBxC,sBAAuB6C,GACvB9G,YAAa,CAAC,MACdqE,YAAa,CAAC,QAAS,SACvBb,WAAY,CAAC,MACbU,cAAe,CAAC,CACd7C,MAAO,KACPH,SAAU,CAAC,KACXC,eAAe,IAEjBsD,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,KAAM,IAAK,OAE1D,GwC9BDkK,QrCIa,cAA+BnR,GAC5C,SAAAC,GACE,OAAO,IAAIoF,GAAU,CACzBe,gBAAMA,GACNC,eAAMA,GACNC,sBAAMA,GACNC,cAAMA,GACNL,gBAAMA,GACAM,aAAa,EACb7D,iBAAkBsG,GAClBxC,sBAAuB6C,GAEvBzC,YAAa,CAAC,WAAY,WAAY,CACpChD,MAAO,SACPH,SAAU,CAAC,IAAK,KAChBC,eAAe,IAEjBqC,WAAY,CAAC,MACbpD,WAAY,CACVqB,MAAO,IACPrf,KAAM,IACNsf,sBAAsB,GAExBwC,cAAe,CAAC,CACd5B,MAAO,sBACN,CACDjB,MAAO,WACPH,SAAU,CAAC,KACXC,eAAe,GACd,CACDE,MAAO,WACPH,SAAU,CAAC,KACXC,eAAe,GACd,CACDE,MAAO,KACPH,SAAU,CAAC,KACXC,eAAe,IAEjB7C,WAAY,CACV2G,YAAY,GAEd3B,iBAAkB,CAAC,KAAM,KACzBmB,UAAW,CAAC,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,MAAO,KAAM,KAAM,KAChFtB,YAAMA,IAEH,GqChDDyL,MlCIa,cAA6BpR,GAC1C,SAAAC,GACE,OAAO,IAAIoF,GAAU,CACzBe,gBAAMA,GACNC,eAAMA,GACNC,sBAAMA,GACNC,cAAMA,GACNL,gBAAMA,GACAM,aAAa,EACb7D,iBAAkBsG,GAClBxC,sBAAuB6C,GAEvBzC,YAAa,CAAC,WAAY,CACxBhD,MAAO,WACPH,SAAU,CAAC,MACV,CACDG,MAAO,SACPH,SAAU,CAAC,IAAK,KAChBC,eAAe,IAEjBqC,WAAY,CAAC,MACbpD,WAAY,CACVqB,MAAO,IACPrf,KAAM,IACNsf,sBAAsB,GAExBwC,cAAe,CAAC,CACd5B,MAAO,sBACN,CACDjB,MAAO,WACPH,SAAU,CAAC,KACXC,eAAe,GACd,CACDE,MAAO,WACPH,SAAU,CAAC,KACXC,eAAe,GACd,CACDE,MAAO,KACPH,SAAU,CAAC,KACXC,eAAe,IAEjB7C,WAAY,CACV2G,YAAY,GAEd3B,iBAAkB,CAAC,KAAM,KACzBmB,UAAW,CAAC,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,KAC7FtB,YAAMA,IAEH,GkCnDD0L,K/BHa,cAA4BrR,GACzC,SAAAC,GACE,OAAO,IAAIoF,GAAU,CACzBe,gBAAMA,GACNC,eAAMA,GACNC,sBAAMA,GACNC,cAAMA,GACNL,gBAAMA,GACAM,aAAa,EACb7D,iBAAkBsG,GAClBxC,sBAAuB6C,GAIvBzC,YAAa,CAAC,QAAS,SACvBb,WAAY,CAAC,MACbxD,YAAa,CAAC,KAAM,MACpB1B,WAAY,CACV2G,YAAY,EACZD,SAAU,CAAC,KACXF,MAAO,CAAC,MAEVxB,iBAAkB,CAAC,IAAK,MACxBmB,UAAW,CAAC,IAAK,KAAM,IAAK,OAE/B,G+BrBDqK,M5BDa,cAA6BtR,GAC1C,SAAAC,GACE,OAAO,IAAIoF,GAAU,CACzBe,gBAAMA,GACNC,eAAMA,GACNC,sBAAMA,GACNC,cAAMA,GACNL,gBAAMA,GACAM,aAAa,EACb7D,iBAAkBsG,GAClBxC,sBAAuB6C,GACvBzC,YAAa,CAAC,CACZhD,MAAO,QACPH,SAAU,CAAC,MACV,CACDG,MAAO,MACPH,SAAU,CAAC,OAKbsC,WAAY,CAAC,SACbpD,WAAY,CACVhe,KAAM,MAER8hB,cAAe,CAAC,CACd5B,MAAO,kCAEThE,WAAY,CACV0G,SAAU,CAAC,KACXF,MAAO,CAAC,MAEVM,WAAY,CAAE,EAEdX,UAAW,CAAC,KAAM,KAAM,IAAK,KAAM,KACnC,KAAM,KAAM,KAAM,IAAK,MAC7BtB,YAAMA,IAEH,CAED,aAAAvF,GACE,MAAO,CACLtB,qBAAsB,CAAC,KAE1B,G4B1CDyS,WzBCa,cAAkCvR,GAC/C,SAAAC,GACE,OAAO,IAAIoF,GAAU,CACzBe,gBAAMA,GACNC,eAAMA,GACNC,sBAAMA,GACNC,cAAMA,GACNL,gBAAMA,GACAvD,iBAAkBsG,GAClBxC,sBAAuB6C,GACvBzD,qBAAqB,EACrBrD,YAAa,CAAC,MACdqE,YAAa,CAAC,KAAM,CAClBhD,MAAO,QACPH,SAAU,CAAC,OACV,CACDG,MAAO,QACPH,SAAU,CAAC,KACXC,eAAe,GACd,CACDE,MAAO,SACPH,SAAU,CAAC,IAAK,KAChBC,eAAe,IAEjBqC,WAAY,CAAC,CACXnC,MAAO,QACPH,SAAU,CAAC,QAEbd,WAAY,CACVhe,KAAM,KAERkc,WAAY,CACV0G,SAAU,CAAC,MAEbP,UAAW,CACX,IAAK,IAAK,KAAM,MAAO,IACvB,KACA,IAAK,IAAK,IAAK,IAAK,KAAM,KAC1B,MAAO,MAAO,OAAQ,OACtB,MAAO,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,MAAO,MAAO,MAAO,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,KAAM,KAAM,KAChI,IAAK,KAAM,KAAM,KAAM,MAAO,KAAM,MAAO,KAC3C,KACA,MAAO,MACP,KAAM,MAAO,MAAO,OACpB,IAAK,KAAM,KAAM,MACjB,MACA,KACA,MAAO,KACP,KAAM,KAAM,MAAO,MAAO,OAAQ,OAAQ,QAAS,QACnD,OAEH,CAED,aAAA7G,GACE,MAAO,CACLtB,qBAAsB,CAAC,MAE1B,GyBzDD0S,StBCa,cAAgCxR,GAC7C,SAAAC,GACE,OAAO,IAAIoF,GAAU,CACzBe,gBAAMA,GACNC,eAAMA,GACNC,sBAAMA,GACNC,cAAMA,GACNL,gBAAMA,GACAvD,iBAAkBsG,GAClBxC,sBAAuB6C,GACvBzC,YAAa,CAAC,SACdb,WAAY,CAAC,SACbpD,WAAY,CACVqB,MAAO,KAETnD,WAAY,CACV0G,SAAU,CAAC,MAEbP,UAAW,CAAC,IAAK,IAAK,IAAK,KAAM,MAAO,IAAK,IAC7C,IAAK,KAAM,KAAM,KAAM,OAE1B,CAED,aAAA7G,GACE,MAAO,CACLtB,qBAAsB,CAAC,MAE1B,GsB3BD2S,cJJa,cAAqCzR,GAClD,SAAAC,GACE,OAAO,IAAIoF,GAAU,CACzBe,gBAAMA,GACNC,eAAMA,GACNC,sBAAMA,GACNC,cAAMA,GACNL,gBAAMA,GACAvD,iBAAkBsG,GAClBxC,sBAAuB6C,GAEvBzC,YAAa,CAAC,WAAY,WAAY,CACpChD,MAAO,SACPH,SAAU,CAAC,IAAK,KAChBC,eAAe,IAEjBqC,WAAY,CAAC,MACbpD,WAAY,CACVqB,MAAO,IACPrf,KAAM,IACNsf,sBAAsB,GAExBwC,cAAe,CAAC,CACd5B,MAAO,qBACN,CACDjB,MAAO,KACPH,SAAU,CAAC,KACXC,eAAe,IAEjBmC,iBAAkB,CAAC,KAAM,KACzBmB,UAAW,CAAC,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,MAAO,KAAM,MAC/DtB,gBAEH,GI5BD+L,UD+Ba,cAAiC1R,GAC9C,SAAAC,GACE,OAAO,IAAIoF,GAAU,CACnBe,mBACAC,kBACAC,yBACAC,iBACAL,mBACAvD,iBAAkBsG,GAClBxC,sBAAuB6C,GACvBzC,YAAa,CAAC,KAAM,YACpBb,WAAY,CAAC,SACbU,cAAe,CACf,CACE5B,MAAO,gBAET,CACEA,MAAO,+BAETtC,YAAa,CAAC,MACdI,WAAY,CACVhe,KAAM,KAERkhB,iBAAkB,CAAC,KAAM,MACzBmB,UAAW,CACX,IACA,KACA,KACA,IACA,OAEH,CAED,aAAA7G,GACE,MAAO,CACLtB,qBAAsB,CAAC,IAAK,MAE/B,GCnED6S,MnBDa,cAA6B3R,GAC1C,SAAAC,GACE,OAAO,IAAIoF,GAAU,CACzBe,gBAAMA,GACNC,eAAMA,GACNC,sBAAMA,GACNC,cAAMA,GACNL,gBAAMA,GACAM,aAAa,EACb7D,iBAAkBsG,GAClBxC,sBAAuB6C,GACvB9G,YAAa,CAAC,MACdqE,YAAa,CAAC,QAAS,QAAS,CAC9BhD,MAAO,SACPH,SAAU,CAAC,IAAK,KAChBC,eAAe,GACd,CACDE,MAAO,SACPH,SAAU,CAAC,IAAK,KAChBC,eAAe,IAEjBqC,WAAY,CAAC,MACbU,cAAe,CAAC,CACd7C,MAAO,KACPH,SAAU,CAAC,KACXC,eAAe,IAEjBsD,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,KAAM,IAAK,KAAM,MACnEtB,YAAMA,IAEH,GmB5BD9E,IbNa,cAA2Bb,GACxC,SAAAC,GACE,OAAO,IAAIoF,GAAU,CACzBe,gBAAMA,GACNC,eAAMA,GACNC,sBAAMA,GACNC,cAAMA,GACNL,gBAAMA,GACAvD,iBAAkBsG,GAClBxC,sBAAuB6C,GACvBzC,YAAa,CAAC,CACZhD,MAAO,WACPH,SAAU,CAAC,IAAK,OACf,CACDG,MAAO,SACPH,SAAU,CAAC,KACXC,eAAe,IAEjBqC,WAAY,CAAC,QAAS,MACtBlF,WAAY,CACV2G,YAAY,GAEdR,UAAW,CAAC,OAEf,GajBD2K,OhBXa,cAA8B5R,GAC3C,SAAAC,GACE,OAAO,IAAIoF,GAAU,CACzBe,gBAAMA,GACNC,eAAMA,GACNC,sBAAMA,GACNC,cAAMA,GACNL,gBAAMA,GACAvD,iBAAkBsG,GAClBxC,sBAAuB6C,GACvBzC,YAAa,CAAC,QAAS,CACrBhD,MAAO,SACPH,SAAU,CAAC,KACXC,eAAe,IAIjBqC,WAAY,CAAC,QAAS,KAAM,MAE5BlF,WAAY,CACV2G,YAAY,EACZD,SAAU,CAAC,KACXF,MAAO,CAAC,IAAK,IAAK,MAEpBL,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,MAAO,OAElE,GgBdD4K,YAAaf,GACbgB,MVRa,cAA6B9R,GAC1C,SAAAC,GACE,OAAO,IAAIoF,GAAU,CACzBe,gBAAMA,GACNC,eAAMA,GACNC,sBAAMA,GACNC,cAAMA,GACNL,gBAAMA,GACAvD,iBAAkBsG,GAClBxC,sBAAuB6C,GAKvB9G,YAAa,CAAC,KAAM,MAGpBqE,YAAa,CAAC,CACZhD,MAAO,QACPH,SAAU,CAAC,OACV,CACDG,MAAO,SACPH,SAAU,CAAC,KACXC,eAAe,IAGjBqC,WAAY,CAAC,SACblF,WAAY,CACV2G,YAAY,GAEdR,UAAW,CAAC,IAAK,KAAM,IAAK,KAC5B,IAAK,IAAK,MAGb,GUzBD8K,KAAMjB,IAGKkB,GAAoBt2B,OAAOsK,KAAK+qB,IACvCkB,GAAiB,CACrBC,SAAU,MACV5rB,SAAU,EACVD,SAAS,EACTyZ,YAAa,WACb3Z,YAAa,WACbqZ,uBAAwB,SACxB4B,eAAe,EACfhI,cAAe,QACfiD,gBAAiB,GACjB6E,oBAAqB,EACrBrC,gBAAgB,EAChBsC,wBAAwB,GAUbtE,GAAS,CAAC1D,EAAOjT,EAAM,MAClC,GAAqB,iBAAViT,EACT,MAAM,IAAIra,MAAM,+DAAiEqa,GAGnF,MAAMnb,EAQR,SAAwBkI,GACtB,GAA4B,iBAAjBA,EAAIgsB,WAA0BF,GAAkBjT,SAAS7Y,EAAIgsB,UACtE,MAAM,IAAIC,GAAY,4BAA4BjsB,EAAIgsB,YAGxD,GAAI,mBAAoBhsB,EACtB,MAAM,IAAIisB,GAAY,+CAGxB,GAAI,2BAA4BjsB,EAC9B,MAAM,IAAIisB,GAAY,uDAGxB,GAAI,4BAA6BjsB,EAC/B,MAAM,IAAIisB,GAAY,wDAGxB,GAAI,YAAajsB,EACf,MAAM,IAAIisB,GAAY,wCAGxB,GAAIjsB,EAAImW,iBAAmB,EACzB,MAAM,IAAI8V,GAAY,4DAA4DjsB,EAAImW,4BAGxF,GAA0B,WAAtBnW,EAAIkT,eAA8BlT,EAAIG,QACxC,MAAM,IAAI8rB,GAAY,2EAGpBjsB,EAAIQ,SAQcA,EARYR,EAAIQ,SASlBA,aAAkBzB,MAAQyB,EAAShL,OAAOod,OAAOpS,IAClD0rB,OAAMzwB,GAAkB,iBAANA,MARnC0wB,QAAQC,KAAK,0DAMjB,IAAwB5rB,EAHtB,OAAOR,CACT,CA3CkBqsB,CAAe,IAAKN,MAC/B/rB,IAGL,OAAO,IAD0C,iBAArBlI,EAAQk0B,SAAwBnB,GAAW/yB,EAAQk0B,UAAYl0B,EAAQk0B,UAC3El0B,GAAS6e,OAAO1D,EAAM,EAEzC,MAAMgZ,WAAoBrzB,sNC3DG8C,EAAM,GAAA,uEAAtBpF,EAA2BH,EAAAm2B,EAAA/1B,8BAAXmF,EAAM,GAAA,KAAAnD,EAAA8P,EAAAkkB,8CAWb7wB,EAAK,GAAA,+BAFQzD,EAAAu0B,EAAA,QAAAC,EAAA,OAAA/wB,KAAW,MAAMA,EAAO,GAAAgxB,QAAQhxB,EAAU,4CAD5DpF,EAIIH,EAAAq2B,EAAAj2B,8BADCmF,EAAK,GAAA,KAAAnD,EAAA8P,EAAAkkB,GAFQ,EAAA/wB,GAAAixB,KAAAA,EAAA,OAAA/wB,KAAW,MAAMA,EAAO,GAAAgxB,QAAQhxB,EAAU,gEAFzDA,EAAG,wBAAR1E,OAAID,GAAA,0HADVT,EAQIH,EAAAw2B,EAAAp2B,uFAPOmF,EAAG,WAAR1E,OAAID,GAAA,EAAA,gHAAJC,8DARC41B,EAAAlxB,KAAOgxB,6BAAZ11B,OAAID,GAAA,qBAMH,IAAA81B,EAAAnxB,KAAOkX,4BAAZ5b,OAAID,GAAA,wTAVlBT,EAuBKH,EAAA22B,EAAAv2B,GAtBDL,EAqBO42B,EAAAnqB,GApBHzM,EAMOyM,EAAAoqB,GALH72B,EAII62B,EAAAJ,2DAERz2B,EAYOyM,EAAAqqB,gFAjBQJ,EAAAlxB,KAAOgxB,gBAAZ11B,OAAID,GAAA,EAAA,mHAAJC,yBAMC61B,EAAAnxB,KAAOkX,eAAZ5b,OAAID,GAAA,EAAA,mHAAJC,4EAbC2Z,GAAuBhR,gICHtC,SAASstB,GAAgBrtB,EAAKlD,EAAKvE,GAYjC,OAXIuE,KAAOkD,EACTpK,OAAO03B,eAAettB,EAAKlD,EAAK,CAC9BvE,MAAOA,EACPg1B,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZztB,EAAIlD,GAAOvE,EAGNyH,CACT,CAEA,SAAS0tB,GAAQpe,EAAQqe,GACvB,IAAIztB,EAAOtK,OAAOsK,KAAKoP,GAEvB,GAAI1Z,OAAOg4B,sBAAuB,CAChC,IAAI1sB,EAAUtL,OAAOg4B,sBAAsBte,GACvCqe,IAAgBzsB,EAAUA,EAAQxD,QAAO,SAAUmwB,GACrD,OAAOj4B,OAAOk4B,yBAAyBxe,EAAQue,GAAKN,UAC1D,KACIrtB,EAAK9G,KAAK20B,MAAM7tB,EAAMgB,EACvB,CAED,OAAOhB,CACT,CAEA,SAAS8tB,GAAez3B,GACtB,IAAK,IAAIY,EAAI,EAAGA,EAAI82B,UAAU72B,OAAQD,IAAK,CACzC,IAAI6U,EAAyB,MAAhBiiB,UAAU92B,GAAa82B,UAAU92B,GAAK,GAE/CA,EAAI,EACNu2B,GAAQ93B,OAAOoW,IAAS,GAAMhW,SAAQ,SAAU8G,GAC9CuwB,GAAgB92B,EAAQuG,EAAKkP,EAAOlP,GAC5C,IACelH,OAAOs4B,0BAChBt4B,OAAOu4B,iBAAiB53B,EAAQX,OAAOs4B,0BAA0BliB,IAEjE0hB,GAAQ93B,OAAOoW,IAAShW,SAAQ,SAAU8G,GACxClH,OAAO03B,eAAe/2B,EAAQuG,EAAKlH,OAAOk4B,yBAAyB9hB,EAAQlP,GACnF,GAEG,CAED,OAAOvG,CACT,CAiBA,SAAS63B,GAAyBpiB,EAAQqiB,GACxC,GAAc,MAAVriB,EAAgB,MAAO,GAE3B,IAEIlP,EAAK3F,EAFLZ,EAlBN,SAAuCyV,EAAQqiB,GAC7C,GAAc,MAAVriB,EAAgB,MAAO,GAC3B,IAEIlP,EAAK3F,EAFLZ,EAAS,CAAA,EACT+3B,EAAa14B,OAAOsK,KAAK8L,GAG7B,IAAK7U,EAAI,EAAGA,EAAIm3B,EAAWl3B,OAAQD,IACjC2F,EAAMwxB,EAAWn3B,GACbk3B,EAAStwB,QAAQjB,IAAQ,IAC7BvG,EAAOuG,GAAOkP,EAAOlP,IAGvB,OAAOvG,CACT,CAKeg4B,CAA8BviB,EAAQqiB,GAInD,GAAIz4B,OAAOg4B,sBAAuB,CAChC,IAAIY,EAAmB54B,OAAOg4B,sBAAsB5hB,GAEpD,IAAK7U,EAAI,EAAGA,EAAIq3B,EAAiBp3B,OAAQD,IACvC2F,EAAM0xB,EAAiBr3B,GACnBk3B,EAAStwB,QAAQjB,IAAQ,GACxBlH,OAAOgO,UAAU6qB,qBAAqBz0B,KAAKgS,EAAQlP,KACxDvG,EAAOuG,GAAOkP,EAAOlP,GAExB,CAED,OAAOvG,CACT,CA8CA,SAASm4B,GAAkBtc,EAAKuc,IACnB,MAAPA,GAAeA,EAAMvc,EAAIhb,UAAQu3B,EAAMvc,EAAIhb,QAE/C,IAAK,IAAID,EAAI,EAAGy3B,EAAO,IAAIzvB,MAAMwvB,GAAMx3B,EAAIw3B,EAAKx3B,IAAKy3B,EAAKz3B,GAAKib,EAAIjb,GAEnE,OAAOy3B,CACT,CCvIA,SAASvB,GAAgBrtB,EAAKlD,EAAKvE,GAYjC,OAXIuE,KAAOkD,EACTpK,OAAO03B,eAAettB,EAAKlD,EAAK,CAC9BvE,MAAOA,EACPg1B,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZztB,EAAIlD,GAAOvE,EAGNyH,CACT,CAEA,SAAS0tB,GAAQpe,EAAQqe,GACvB,IAAIztB,EAAOtK,OAAOsK,KAAKoP,GAEvB,GAAI1Z,OAAOg4B,sBAAuB,CAChC,IAAI1sB,EAAUtL,OAAOg4B,sBAAsBte,GACvCqe,IAAgBzsB,EAAUA,EAAQxD,QAAO,SAAUmwB,GACrD,OAAOj4B,OAAOk4B,yBAAyBxe,EAAQue,GAAKN,UAC1D,KACIrtB,EAAK9G,KAAK20B,MAAM7tB,EAAMgB,EACvB,CAED,OAAOhB,CACT,CAEA,SAAS8tB,GAAez3B,GACtB,IAAK,IAAIY,EAAI,EAAGA,EAAI82B,UAAU72B,OAAQD,IAAK,CACzC,IAAI6U,EAAyB,MAAhBiiB,UAAU92B,GAAa82B,UAAU92B,GAAK,GAE/CA,EAAI,EACNu2B,GAAQ93B,OAAOoW,IAAS,GAAMhW,SAAQ,SAAU8G,GAC9CuwB,GAAgB92B,EAAQuG,EAAKkP,EAAOlP,GAC5C,IACelH,OAAOs4B,0BAChBt4B,OAAOu4B,iBAAiB53B,EAAQX,OAAOs4B,0BAA0BliB,IAEjE0hB,GAAQ93B,OAAOoW,IAAShW,SAAQ,SAAU8G,GACxClH,OAAO03B,eAAe/2B,EAAQuG,EAAKlH,OAAOk4B,yBAAyB9hB,EAAQlP,GACnF,GAEG,CAED,OAAOvG,CACT,CAcA,SAASs4B,GAAMn5B,GACb,OAAO,SAASo5B,IAGd,IAFA,IAAIC,EAAQpvB,KAEHqvB,EAAQf,UAAU72B,OAAQ63B,EAAO,IAAI9vB,MAAM6vB,GAAQE,EAAQ,EAAGA,EAAQF,EAAOE,IACpFD,EAAKC,GAASjB,UAAUiB,GAG1B,OAAOD,EAAK73B,QAAU1B,EAAG0B,OAAS1B,EAAGq4B,MAAMpuB,KAAMsvB,GAAQ,WACvD,IAAK,IAAIE,EAAQlB,UAAU72B,OAAQg4B,EAAW,IAAIjwB,MAAMgwB,GAAQE,EAAQ,EAAGA,EAAQF,EAAOE,IACxFD,EAASC,GAASpB,UAAUoB,GAG9B,OAAOP,EAAQf,MAAMgB,EAAO,GAAG3mB,OAAO6mB,EAAMG,GAClD,CACA,CACA,CAEA,SAASE,GAAS/2B,GAChB,MAAO,CAAA,EAAGkL,SAASzJ,KAAKzB,GAAO0gB,SAAS,SAC1C,CAMA,SAASsW,GAAWh3B,GAClB,MAAwB,mBAAVA,CAChB,CAmCA,IAWIi3B,GAAeX,IAfnB,SAAoBY,EAAen2B,GACjC,MAAM,IAAIN,MAAMy2B,EAAcn2B,IAASm2B,EAAuB,QAChE,GAamBZ,CAXC,CAClBa,kBAAmB,4BACnBC,YAAa,oCACbC,eAAgB,6CAChBC,YAAa,4CACbC,aAAc,qCACdC,aAAc,gCACdC,WAAY,gDACZC,YAAa,iGACbC,QAAW,sDAGTC,GAAa,CACfC,QA1CF,SAAyBC,EAASD,GAKhC,OAJKd,GAASc,IAAUZ,GAAa,cACjC55B,OAAOsK,KAAKkwB,GAASE,MAAK,SAAUC,GACtC,OAPoBjhB,EAOG+gB,EAPK5gB,EAOI8gB,GAN3B36B,OAAOgO,UAAUtB,eAAetI,KAAKsV,EAAQG,GADtD,IAAwBH,EAAQG,CAQhC,KAAM+f,GAAa,eACVY,CACT,EAqCEI,SAnCF,SAA0BA,GACnBjB,GAAWiB,IAAWhB,GAAa,eAC1C,EAkCEv3B,QAhCF,SAAyBA,GACjBs3B,GAAWt3B,IAAYq3B,GAASr3B,IAAWu3B,GAAa,eAC1DF,GAASr3B,IAAYrC,OAAOod,OAAO/a,GAASq4B,MAAK,SAAUG,GAC7D,OAAQlB,GAAWkB,EACvB,KAAMjB,GAAa,eACnB,EA4BEa,QA1BF,SAAyBA,GA/BzB,IAAiBrwB,EAgCVqwB,GAASb,GAAa,qBACtBF,GAASe,IAAUb,GAAa,eAjCtBxvB,EAkCHqwB,EAjCJz6B,OAAOsK,KAAKF,GAAK5I,QAiCHo4B,GAAa,iBACrC,GAoDA,SAASkB,GAAexsB,EAAOysB,GAC7B,OAAOpB,GAAWoB,GAAiBA,EAAczsB,EAAMhB,SAAWytB,CACpE,CAEA,SAASC,GAAY1sB,EAAOksB,GAE1B,OADAlsB,EAAMhB,QAAU8qB,GAAeA,GAAe,CAAE,EAAE9pB,EAAMhB,SAAUktB,GAC3DA,CACT,CAEA,SAASS,GAAe3sB,EAAOjM,EAASm4B,GAMtC,OALAb,GAAWt3B,GAAWA,EAAQiM,EAAMhB,SAAWtN,OAAOsK,KAAKkwB,GAASp6B,SAAQ,SAAUu6B,GACpF,IAAIO,EAEJ,OAA6C,QAArCA,EAAiB74B,EAAQs4B,UAAuC,IAAnBO,OAA4B,EAASA,EAAe92B,KAAK/B,EAASiM,EAAMhB,QAAQqtB,GACzI,IACSH,CACT,CAEA,IAAIpzB,GAAQ,CACVnH,OA9CF,SAAgBw6B,GACd,IAAIp4B,EAAUg2B,UAAU72B,OAAS,QAAsB8F,IAAjB+wB,UAAU,GAAmBA,UAAU,GAAK,CAAA,EAClFkC,GAAWE,QAAQA,GACnBF,GAAWl4B,QAAQA,GACnB,IAAIiM,EAAQ,CACVhB,QAASmtB,GAEPU,EAAYlC,GAAMgC,GAANhC,CAAsB3qB,EAAOjM,GACzCmD,EAASyzB,GAAM+B,GAAN/B,CAAmB3qB,GAC5B8sB,EAAWnC,GAAMsB,GAAWC,QAAjBvB,CAA0BwB,GACrCY,EAAapC,GAAM6B,GAAN7B,CAAsB3qB,GAcvC,MAAO,CAZP,WACE,IAAIssB,EAAWvC,UAAU72B,OAAS,QAAsB8F,IAAjB+wB,UAAU,GAAmBA,UAAU,GAAK,SAAU/pB,GAC3F,OAAOA,CACb,EAEI,OADAisB,GAAWK,SAASA,GACbA,EAAStsB,EAAMhB,QACvB,EAED,SAAkBytB,IAlHpB,WACE,IAAK,IAAIO,EAAOjD,UAAU72B,OAAQrB,EAAM,IAAIoJ,MAAM+xB,GAAOC,EAAO,EAAGA,EAAOD,EAAMC,IAC9Ep7B,EAAIo7B,GAAQlD,UAAUkD,GAGxB,OAAO,SAAUC,GACf,OAAOr7B,EAAIs7B,aAAY,SAAUC,EAAGC,GAClC,OAAOA,EAAED,EACV,GAAEF,EACP,CACA,CAyGII,CAAQT,EAAW31B,EAAQ41B,EAAUC,EAArCO,CAAiDb,EAClD,EAGH,GCnIA,IAAIlB,GAAgB,CAClBgC,iBAAkB,uCAClBC,WAAY,+CACZxB,QAAW,8DACXyB,YAAa,iTAEXnC,GC3CJ,SAAe95B,GACb,OAAO,SAASo5B,IAGd,IAFA,IAAIC,EAAQpvB,KAEHuxB,EAAOjD,UAAU72B,OAAQ63B,EAAO,IAAI9vB,MAAM+xB,GAAOC,EAAO,EAAGA,EAAOD,EAAMC,IAC/ElC,EAAKkC,GAAQlD,UAAUkD,GAGzB,OAAOlC,EAAK73B,QAAU1B,EAAG0B,OAAS1B,EAAGq4B,MAAMpuB,KAAMsvB,GAAQ,WACvD,IAAK,IAAID,EAAQf,UAAU72B,OAAQg4B,EAAW,IAAIjwB,MAAM6vB,GAAQE,EAAQ,EAAGA,EAAQF,EAAOE,IACxFE,EAASF,GAASjB,UAAUiB,GAG9B,OAAOJ,EAAQf,MAAMgB,EAAO,GAAG3mB,OAAO6mB,EAAMG,GAClD,CACA,CACA,CD2BmBP,EAVnB,SAAoBY,EAAen2B,GACjC,MAAM,IAAIN,MAAMy2B,EAAcn2B,IAASm2B,EAAuB,QAChE,GAQmBZ,CAAkBY,IACjCU,GAAa,CACfyB,OApCF,SAAwBA,GETxB,IAAkBr5B,EFahB,OAHKq5B,GAAQpC,GAAa,oBEVVj3B,EFWFq5B,EEVP,CAAA,EAAGnuB,SAASzJ,KAAKzB,GAAO0gB,SAAS,WFUjBuW,GAAa,cAEhCoC,EAAOC,MAiBXtF,QAAQC,KAAKiD,GAAckC,aAflB,CACLG,MAAO,CACLC,GAAIH,EAAOC,KAAKG,cAKfJ,CACT,GGrBA,SAASK,GAAM17B,EAAQyV,GAQrB,OAPApW,OAAOsK,KAAK8L,GAAQhW,SAAQ,SAAU8G,GAChCkP,EAAOlP,aAAgBlH,QACrBW,EAAOuG,IACTlH,OAAOs8B,OAAOlmB,EAAOlP,GAAMm1B,GAAM17B,EAAOuG,GAAMkP,EAAOlP,IAG7D,IACSkxB,GAAeA,GAAe,CAAA,EAAIz3B,GAASyV,EACpD,CCVA,IAAImmB,GAAsB,CACxB74B,KAAM,cACN84B,IAAK,kCAGP,SAASC,GAAeC,GACtB,IAAIC,GAAe,EACfC,EAAiB,IAAIj4B,SAAQ,SAAUC,EAASi4B,GAClDH,EAAQ33B,MAAK,SAAU+3B,GACrB,OAAOH,EAAeE,EAAON,IAAuB33B,EAAQk4B,EAClE,IACIJ,EAAe,MAAEG,EACrB,IACE,OAAOD,EAAeG,OAAS,WAC7B,OAAOJ,GAAe,CACvB,EAAEC,CACL,CCPA,IP2EwBpgB,GAAKjb,GO3EzBy7B,GAAgB1uB,GAAMrO,OAAO,CAC/B+7B,OCXW,CACXE,MAAO,CACLC,GAAI,6DDUNc,eAAe,EACfr4B,QAAS,KACTi4B,OAAQ,KACRK,OAAQ,OAENC,IPoEyB57B,GOpEsB,EPwEnD,SAAyBib,GACvB,GAAIjT,MAAM6zB,QAAQ5gB,GAAM,OAAOA,CACjC,CALS6gB,CADe7gB,GOpEYwgB,KP4EpC,SAA+BxgB,EAAKjb,GAClC,GAAsB,oBAAX+7B,QAA4BA,OAAOC,YAAYv9B,OAAOwc,GAAjE,CACA,IAAIghB,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKr2B,EAET,IACE,IAAK,IAAiCs2B,EAA7BC,EAAKrhB,EAAI8gB,OAAOC,cAAmBE,GAAMG,EAAKC,EAAGjuB,QAAQkuB,QAChEN,EAAKh6B,KAAKo6B,EAAGj7B,QAETpB,GAAKi8B,EAAKh8B,SAAWD,GAH8Ck8B,GAAK,GAK/E,CAAC,MAAO7sB,GACP8sB,GAAK,EACLC,EAAK/sB,CACT,CAAY,QACR,IACO6sB,GAAsB,MAAhBI,EAAW,QAAWA,EAAW,QAClD,CAAc,QACR,GAAIH,EAAI,MAAMC,CACf,CACF,CAED,OAAOH,CAvBwE,CAwBjF,CAhCiCO,CAAsBvhB,GAAKjb,KAkC5D,SAAqCwF,EAAGi3B,GACtC,GAAKj3B,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAO+xB,GAAkB/xB,EAAGi3B,GACvD,IAAIvtB,EAAIzQ,OAAOgO,UAAUH,SAASzJ,KAAK2C,GAAG5C,MAAM,GAAI,GAEpD,MADU,WAANsM,GAAkB1J,EAAEgE,cAAa0F,EAAI1J,EAAEgE,YAAYpJ,MAC7C,QAAN8O,GAAqB,QAANA,EAAoBlH,MAAMC,KAAKzC,GACxC,cAAN0J,GAAqB,2CAA2C3C,KAAK2C,GAAWqoB,GAAkB/xB,EAAGi3B,QAAzG,CALe,CAMjB,CAzCkEC,CAA4BzhB,GAAKjb,KAmDnG,WACE,MAAM,IAAI28B,UAAU,4IACtB,CArDyGC,IOpErGC,GAAWjB,GAAe,GAC1BkB,GAAWlB,GAAe,GAiE9B,SAASmB,GAAcC,GACrB,OAAO38B,SAAS48B,KAAK39B,YAAY09B,EACnC,CAkBA,SAASE,GAAsBC,GAC7B,IAXoBC,EAChBJ,EAUAjwB,EAAQ8vB,IAAS,SAAUQ,GAG7B,MAAO,CACL5C,OAHW4C,EAAM5C,OAIjBa,OAHW+B,EAAM/B,OAKvB,IACMgC,GAnBgBF,EAmBY,GAAGnsB,OAAOlE,EAAM0tB,OAAOE,MAAMC,GAAI,cAlB7DoC,EAAS38B,SAASC,cAAc,UAC7B88B,IAAQJ,EAAOI,IAAMA,GAAMJ,GAwBlC,OALAM,EAAaC,OAAS,WACpB,OAAOJ,GACX,EAEEG,EAAaE,QAAUzwB,EAAMuuB,OACtBgC,CACT,CAMA,SAASH,KACP,IAAIpwB,EAAQ8vB,IAAS,SAAUY,GAI7B,MAAO,CACLhD,OAJWgD,EAAMhD,OAKjBp3B,QAJYo6B,EAAMp6B,QAKlBi4B,OAJWmC,EAAMnC,OAMvB,IACMoC,EAAU1N,OAAO0N,QAErBA,EAAQjD,OAAO1tB,EAAM0tB,QAErBiD,EAAQ,CAAC,0BAA0B,SAAU/B,GAC3CgC,GAAoBhC,GACpB5uB,EAAM1J,QAAQs4B,EACf,IAAE,SAAUiC,GACX7wB,EAAMuuB,OAAOsC,EACjB,GACA,CAMA,SAASD,GAAoBhC,GACtBkB,KAAWlB,QACdmB,GAAS,CACPnB,OAAQA,GAGd,CAeA,IE/KIkC,GA+DAC,GFgHAC,GAAiB,IAAI36B,SAAQ,SAAUC,EAASi4B,GAClD,OAAOwB,GAAS,CACdz5B,QAASA,EACTi4B,OAAQA,GAEZ,IACI0C,GAAS,CACXvD,OA5JF,SAAgBwD,GACd,IAAIC,EAAqBlF,GAAWyB,OAAOwD,GACvCtC,EAASuC,EAAmBvC,OAC5BlB,EAASxD,GAAyBiH,EAAoB,CAAC,WAE3DpB,IAAS,SAAU/vB,GACjB,MAAO,CACL0tB,OAAQK,GAAM/tB,EAAM0tB,OAAQA,GAC5BkB,OAAQA,EAEd,GACA,EAkJE70B,KA3IF,WACE,IAAIiG,EAAQ8vB,IAAS,SAAUsB,GAI7B,MAAO,CACLxC,OAJWwC,EAAKxC,OAKhBD,cAJkByC,EAAKzC,cAKvBr4B,QAJY86B,EAAK96B,QAMvB,IAEE,IAAK0J,EAAM2uB,cAAe,CAKxB,GAJAoB,GAAS,CACPpB,eAAe,IAGb3uB,EAAM4uB,OAER,OADA5uB,EAAM1J,QAAQ0J,EAAM4uB,QACbT,GAAe6C,IAGxB,GAAI/N,OAAO2L,QAAU3L,OAAO2L,OAAOyC,OAGjC,OAFAT,GAAoB3N,OAAO2L,QAC3B5uB,EAAM1J,QAAQ2sB,OAAO2L,QACdT,GAAe6C,KGrEd,WACZ,IAAK,IAAIhE,EAAOjD,UAAU72B,OAAQrB,EAAM,IAAIoJ,MAAM+xB,GAAOC,EAAO,EAAGA,EAAOD,EAAMC,IAC9Ep7B,EAAIo7B,GAAQlD,UAAUkD,GAGxB,OAAO,SAAUC,GACf,OAAOr7B,EAAIs7B,aAAY,SAAUC,EAAGC,GAClC,OAAOA,EAAED,EACV,GAAEF,EACP,CACA,CH8DII,CAAQ0C,GAAeG,GAAvB7C,CAA8C8C,GAC/C,CAED,OAAOjC,GAAe6C,GACxB,EA4GEM,oBAhBF,WACE,OAAOxB,IAAS,SAAUyB,GAExB,OADaA,EAAM3C,MAEvB,GACA,iGIpGAp8B,EAAkDH,EAAA22B,EAAAv2B,yEA7D1C++B,EACA5C,EACAyC,SAPOI,GAAa51B,GACbxH,MAAAA,EAAgB,IAAEwH,EAOzB61B,EAA0B,qHAGZ,MAAV9C,IAIJ8C,EAAiB,MAATA,EAAgB,UAAY,KACpC9C,EAAOyC,OAAOM,SAASD,YAiBX,SAASr9B,GACP,MAAVg9B,EAKJA,EAAOO,SAASv9B,GAJZg0B,QAAQC,KAAK,yCAA2Cj0B,4BAQxD,OAAa,MAAbm9B,EACO,4BAGX5C,QAAeqC,GAAOl3B,OACR,MAAV60B,EACO,mCAGXyC,EAASzC,EAAOyC,OAAO1/B,OAAO6/B,EACnB,CAAAn9B,QACP6zB,SAAU,MACVwJ,MAAO,YAGXL,EAAOQ,yBAAuB,KAC1BC,EAAA,EAAAz9B,EAvCU,MAAVg9B,GACAhJ,QAAQC,KAAK,yCACN,IAGU+I,EAAOU,SAAQ,CAChCC,WAAY,KACZC,aAAa,IAgCU,IAGpB,8CAICT,EAASU,sLFxEzB,SAAWpB,GACPA,EAAKqB,YAAe3D,GAAQA,EAE5BsC,EAAKsB,SADL,SAAkBC,GAAS,EAK3BvB,EAAKwB,YAHL,SAAqBC,GACjB,MAAM,IAAIz9B,KACb,EAEDg8B,EAAK0B,YAAeniB,IAChB,MAAMvU,EAAM,CAAA,EACZ,IAAK,MAAMyU,KAAQF,EACfvU,EAAIyU,GAAQA,EAEhB,OAAOzU,CAAG,EAEdg1B,EAAK2B,mBAAsB32B,IACvB,MAAM42B,EAAY5B,EAAK6B,WAAW72B,GAAKtC,QAAQo5B,GAA6B,iBAAhB92B,EAAIA,EAAI82B,MAC9Dj5B,EAAW,CAAA,EACjB,IAAK,MAAMi5B,KAAKF,EACZ/4B,EAASi5B,GAAK92B,EAAI82B,GAEtB,OAAO9B,EAAK+B,aAAal5B,EAAS,EAEtCm3B,EAAK+B,aAAgB/2B,GACVg1B,EAAK6B,WAAW72B,GAAKvC,KAAI,SAAU9D,GACtC,OAAOqG,EAAIrG,EACvB,IAEIq7B,EAAK6B,WAAoC,mBAAhBjhC,OAAOsK,KACzBF,GAAQpK,OAAOsK,KAAKF,GACpBsP,IACC,MAAMpP,EAAO,GACb,IAAK,MAAMpD,KAAOwS,EACV1Z,OAAOgO,UAAUtB,eAAetI,KAAKsV,EAAQxS,IAC7CoD,EAAK9G,KAAK0D,GAGlB,OAAOoD,CAAI,EAEnB80B,EAAKgC,KAAO,CAAC5kB,EAAK6kB,KACd,IAAK,MAAMxiB,KAAQrC,EACf,GAAI6kB,EAAQxiB,GACR,OAAOA,CAEC,EAEpBugB,EAAKkC,UAAwC,mBAArBC,OAAOD,UACxBxE,GAAQyE,OAAOD,UAAUxE,GACzBA,GAAuB,iBAARA,GAAoB0E,SAAS1E,IAAQ1sB,KAAKqxB,MAAM3E,KAASA,EAM/EsC,EAAKsC,WALL,SAAoB1oB,EAAO2oB,EAAY,OACnC,OAAO3oB,EACFnR,KAAKi1B,GAAwB,iBAARA,EAAmB,IAAIA,KAASA,IACrD3uB,KAAKwzB,EACb,EAEDvC,EAAKwC,sBAAwB,CAAC9pB,EAAGnV,IACR,iBAAVA,EACAA,EAAMkL,WAEVlL,CAEd,CA7DD,CA6DGy8B,KAASA,GAAO,CAAE,IAErB,SAAWC,GACPA,EAAWwC,YAAc,CAACtZ,EAAOuZ,KACtB,IACAvZ,KACAuZ,GAGd,CAPD,CAOGzC,KAAeA,GAAa,CAAE,IACjC,MAAM0C,GAAgB3C,GAAK0B,YAAY,CACnC,SACA,MACA,SACA,UACA,QACA,UACA,OACA,SACA,SACA,WACA,YACA,OACA,QACA,SACA,UACA,UACA,OACA,QACA,MACA,QAEEkB,GAAiBjgC,IAEnB,cADiBA,GAEb,IAAK,YACD,OAAOggC,GAAcz6B,UACzB,IAAK,SACD,OAAOy6B,GAAc1b,OACzB,IAAK,SACD,OAAO4b,MAAMlgC,GAAQggC,GAAcG,IAAMH,GAAcrZ,OAC3D,IAAK,UACD,OAAOqZ,GAAcI,QACzB,IAAK,WACD,OAAOJ,GAAcK,SACzB,IAAK,SACD,OAAOL,GAAcM,OACzB,IAAK,SACD,OAAON,GAAcv0B,OACzB,IAAK,SACD,OAAIjE,MAAM6zB,QAAQr7B,GACPggC,GAAc/oB,MAEZ,OAATjX,EACOggC,GAAcO,KAErBvgC,EAAKgD,MACgB,mBAAdhD,EAAKgD,MACZhD,EAAKwgC,OACiB,mBAAfxgC,EAAKwgC,MACLR,GAAcrF,QAEN,oBAAR7zB,KAAuB9G,aAAgB8G,IACvCk5B,GAAcl6B,IAEN,oBAARxC,KAAuBtD,aAAgBsD,IACvC08B,GAAc5O,IAEL,oBAATqP,MAAwBzgC,aAAgBygC,KACxCT,GAAc5T,KAElB4T,GAAcroB,OACzB,QACI,OAAOqoB,GAAcU,QAC5B,EAGCC,GAAetD,GAAK0B,YAAY,CAClC,eACA,kBACA,SACA,gBACA,8BACA,qBACA,oBACA,oBACA,sBACA,eACA,iBACA,YACA,UACA,6BACA,kBACA,eAMJ,MAAM6B,WAAiBv/B,MACnB,WAAA2H,CAAY63B,GACRhiB,QACA7W,KAAK64B,OAAS,GACd74B,KAAK84B,SAAYC,IACb/4B,KAAK64B,OAAS,IAAI74B,KAAK64B,OAAQE,EAAI,EAEvC/4B,KAAKg5B,UAAY,CAACC,EAAO,MACrBj5B,KAAK64B,OAAS,IAAI74B,KAAK64B,UAAWI,EAAK,EAE3C,MAAMC,aAAyBj1B,UAC3BhO,OAAOkjC,eAEPljC,OAAOkjC,eAAen5B,KAAMk5B,GAG5Bl5B,KAAKo5B,UAAYF,EAErBl5B,KAAKpI,KAAO,WACZoI,KAAK64B,OAASA,CACjB,CACD,UAAIQ,GACA,OAAOr5B,KAAK64B,MACf,CACD,MAAAzhB,CAAOkiB,GACH,MAAMC,EAASD,GACX,SAAUE,GACN,OAAOA,EAAMtzB,OAC7B,EACcuzB,EAAc,CAAEC,QAAS,IACzBC,EAAgBvE,IAClB,IAAK,MAAMoE,KAASpE,EAAMyD,OACtB,GAAmB,kBAAfW,EAAMI,KACNJ,EAAMK,YAAY/7B,IAAI67B,QAErB,GAAmB,wBAAfH,EAAMI,KACXD,EAAaH,EAAMM,sBAElB,GAAmB,sBAAfN,EAAMI,KACXD,EAAaH,EAAMO,qBAElB,GAA0B,IAAtBP,EAAMQ,KAAKviC,OAChBgiC,EAAYC,QAAQjgC,KAAK8/B,EAAOC,QAE/B,CACD,IAAIS,EAAOR,EACPjiC,EAAI,EACR,KAAOA,EAAIgiC,EAAMQ,KAAKviC,QAAQ,CAC1B,MAAMmV,EAAK4sB,EAAMQ,KAAKxiC,GACLA,IAAMgiC,EAAMQ,KAAKviC,OAAS,GAYvCwiC,EAAKrtB,GAAMqtB,EAAKrtB,IAAO,CAAE8sB,QAAS,IAClCO,EAAKrtB,GAAI8sB,QAAQjgC,KAAK8/B,EAAOC,KAX7BS,EAAKrtB,GAAMqtB,EAAKrtB,IAAO,CAAE8sB,QAAS,IAatCO,EAAOA,EAAKrtB,GACZpV,GACH,CACJ,CACJ,EAGL,OADAmiC,EAAa35B,MACNy5B,CACV,CACD,aAAOS,CAAOthC,GACV,KAAMA,aAAiBggC,IACnB,MAAM,IAAIv/B,MAAM,mBAAmBT,IAE1C,CACD,QAAAkL,GACI,OAAO9D,KAAKkG,OACf,CACD,WAAIA,GACA,OAAOvC,KAAKC,UAAU5D,KAAK64B,OAAQxD,GAAKwC,sBAAuB,EAClE,CACD,WAAIsC,GACA,OAA8B,IAAvBn6B,KAAK64B,OAAOphC,MACtB,CACD,OAAA2iC,CAAQb,EAAS,CAACC,GAAUA,EAAMtzB,UAC9B,MAAMuzB,EAAc,CAAA,EACdY,EAAa,GACnB,IAAK,MAAMtB,KAAO/4B,KAAK64B,OACfE,EAAIiB,KAAKviC,OAAS,GAClBgiC,EAAYV,EAAIiB,KAAK,IAAMP,EAAYV,EAAIiB,KAAK,KAAO,GACvDP,EAAYV,EAAIiB,KAAK,IAAIvgC,KAAK8/B,EAAOR,KAGrCsB,EAAW5gC,KAAK8/B,EAAOR,IAG/B,MAAO,CAAEsB,aAAYZ,cACxB,CACD,cAAIY,GACA,OAAOr6B,KAAKo6B,SACf,EAELxB,GAAS1iC,OAAU2iC,GACD,IAAID,GAASC,GAI/B,MAAMyB,GAAW,CAACd,EAAOe,KACrB,IAAIr0B,EACJ,OAAQszB,EAAMI,MACV,KAAKjB,GAAa6B,aAEVt0B,EADAszB,EAAMiB,WAAazC,GAAcz6B,UACvB,WAGA,YAAYi8B,EAAMkB,sBAAsBlB,EAAMiB,WAE5D,MACJ,KAAK9B,GAAagC,gBACdz0B,EAAU,mCAAmCvC,KAAKC,UAAU41B,EAAMkB,SAAUrF,GAAKwC,yBACjF,MACJ,KAAKc,GAAaiC,kBACd10B,EAAU,kCAAkCmvB,GAAKsC,WAAW6B,EAAMj5B,KAAM,QACxE,MACJ,KAAKo4B,GAAakC,cACd30B,EAAU,gBACV,MACJ,KAAKyyB,GAAamC,4BACd50B,EAAU,yCAAyCmvB,GAAKsC,WAAW6B,EAAMjhC,WACzE,MACJ,KAAKogC,GAAaoC,mBACd70B,EAAU,gCAAgCmvB,GAAKsC,WAAW6B,EAAMjhC,uBAAuBihC,EAAMiB,YAC7F,MACJ,KAAK9B,GAAaqC,kBACd90B,EAAU,6BACV,MACJ,KAAKyyB,GAAasC,oBACd/0B,EAAU,+BACV,MACJ,KAAKyyB,GAAauC,aACdh1B,EAAU,eACV,MACJ,KAAKyyB,GAAawC,eACkB,iBAArB3B,EAAM4B,WACT,aAAc5B,EAAM4B,YACpBl1B,EAAU,gCAAgCszB,EAAM4B,WAAW9hB,YAClB,iBAA9BkgB,EAAM4B,WAAWC,WACxBn1B,EAAU,GAAGA,uDAA6DszB,EAAM4B,WAAWC,aAG1F,eAAgB7B,EAAM4B,WAC3Bl1B,EAAU,mCAAmCszB,EAAM4B,WAAWE,cAEzD,aAAc9B,EAAM4B,WACzBl1B,EAAU,iCAAiCszB,EAAM4B,WAAWG,YAG5DlG,GAAKwB,YAAY2C,EAAM4B,YAI3Bl1B,EAD0B,UAArBszB,EAAM4B,WACD,WAAW5B,EAAM4B,aAGjB,UAEd,MACJ,KAAKzC,GAAa6C,UAEVt1B,EADe,UAAfszB,EAAM7/B,KACI,sBAAsB6/B,EAAMiC,MAAQ,UAAYjC,EAAMkC,UAAY,WAAa,eAAelC,EAAMmC,qBAC1F,WAAfnC,EAAM7/B,KACD,uBAAuB6/B,EAAMiC,MAAQ,UAAYjC,EAAMkC,UAAY,WAAa,UAAUlC,EAAMmC,uBACtF,WAAfnC,EAAM7/B,KACD,kBAAkB6/B,EAAMiC,MAC5B,oBACAjC,EAAMkC,UACF,4BACA,kBAAkBlC,EAAMmC,UACd,SAAfnC,EAAM7/B,KACD,gBAAgB6/B,EAAMiC,MAC1B,oBACAjC,EAAMkC,UACF,4BACA,kBAAkB,IAAIjD,KAAKjB,OAAOgC,EAAMmC,YAExC,gBACd,MACJ,KAAKhD,GAAaiD,QAEV11B,EADe,UAAfszB,EAAM7/B,KACI,sBAAsB6/B,EAAMiC,MAAQ,UAAYjC,EAAMkC,UAAY,UAAY,eAAelC,EAAMqC,qBACzF,WAAfrC,EAAM7/B,KACD,uBAAuB6/B,EAAMiC,MAAQ,UAAYjC,EAAMkC,UAAY,UAAY,WAAWlC,EAAMqC,uBACtF,WAAfrC,EAAM7/B,KACD,kBAAkB6/B,EAAMiC,MAC5B,UACAjC,EAAMkC,UACF,wBACA,eAAelC,EAAMqC,UACX,WAAfrC,EAAM7/B,KACD,kBAAkB6/B,EAAMiC,MAC5B,UACAjC,EAAMkC,UACF,wBACA,eAAelC,EAAMqC,UACX,SAAfrC,EAAM7/B,KACD,gBAAgB6/B,EAAMiC,MAC1B,UACAjC,EAAMkC,UACF,2BACA,kBAAkB,IAAIjD,KAAKjB,OAAOgC,EAAMqC,YAExC,gBACd,MACJ,KAAKlD,GAAamD,OACd51B,EAAU,gBACV,MACJ,KAAKyyB,GAAaoD,2BACd71B,EAAU,2CACV,MACJ,KAAKyyB,GAAaqD,gBACd91B,EAAU,gCAAgCszB,EAAMyC,aAChD,MACJ,KAAKtD,GAAauD,WACdh2B,EAAU,wBACV,MACJ,QACIA,EAAUq0B,EAAK4B,aACf9G,GAAKwB,YAAY2C,GAEzB,MAAO,CAAEtzB,UAAS,EAGtB,IAAIk2B,GAAmB9B,GAIvB,SAAS+B,KACL,OAAOD,EACX,CAEA,MAAME,GAAar7B,IACf,MAAMjJ,KAAEA,EAAIgiC,KAAEA,EAAIuC,UAAEA,EAASC,UAAEA,GAAcv7B,EACvCw7B,EAAW,IAAIzC,KAAUwC,EAAUxC,MAAQ,IAC3C0C,EAAY,IACXF,EACHxC,KAAMyC,GAEV,QAA0Bl/B,IAAtBi/B,EAAUt2B,QACV,MAAO,IACAs2B,EACHxC,KAAMyC,EACNv2B,QAASs2B,EAAUt2B,SAG3B,IAAIy2B,EAAe,GACnB,MAAMC,EAAOL,EACRx+B,QAAQH,KAAQA,IAChBxD,QACAuK,UACL,IAAK,MAAM7G,KAAO8+B,EACdD,EAAe7+B,EAAI4+B,EAAW,CAAE1kC,OAAMmkC,aAAcQ,IAAgBz2B,QAExE,MAAO,IACAs2B,EACHxC,KAAMyC,EACNv2B,QAASy2B,EACZ,EAGL,SAASE,GAAkB1gC,EAAKqgC,GAC5B,MAAMM,EAAcT,KACd7C,EAAQ8C,GAAU,CACpBE,UAAWA,EACXxkC,KAAMmE,EAAInE,KACVgiC,KAAM79B,EAAI69B,KACVuC,UAAW,CACPpgC,EAAI4gC,OAAOC,mBACX7gC,EAAI8gC,eACJH,EACAA,IAAgBxC,QAAW/8B,EAAY+8B,IACzCv8B,QAAQ0zB,KAAQA,MAEtBt1B,EAAI4gC,OAAOlE,OAAOp/B,KAAK+/B,EAC3B,CACA,MAAM0D,GACF,WAAAl8B,GACIhB,KAAKpH,MAAQ,OAChB,CACD,KAAAqD,GACuB,UAAf+D,KAAKpH,QACLoH,KAAKpH,MAAQ,QACpB,CACD,KAAAukC,GACuB,YAAfn9B,KAAKpH,QACLoH,KAAKpH,MAAQ,UACpB,CACD,iBAAOwkC,CAAWC,EAAQl2B,GACtB,MAAMm2B,EAAa,GACnB,IAAK,MAAMn4B,KAAKgC,EAAS,CACrB,GAAiB,YAAbhC,EAAEk4B,OACF,OAAOE,GACM,UAAbp4B,EAAEk4B,QACFA,EAAOphC,QACXqhC,EAAW7jC,KAAK0L,EAAEvM,MACrB,CACD,MAAO,CAAEykC,OAAQA,EAAOzkC,MAAOA,MAAO0kC,EACzC,CACD,6BAAaE,CAAiBH,EAAQI,GAClC,MAAMC,EAAY,GAClB,IAAK,MAAM1gB,KAAQygB,EAAO,CACtB,MAAMtgC,QAAY6f,EAAK7f,IACjBvE,QAAcokB,EAAKpkB,MACzB8kC,EAAUjkC,KAAK,CACX0D,MACAvE,SAEP,CACD,OAAOskC,GAAYS,gBAAgBN,EAAQK,EAC9C,CACD,sBAAOC,CAAgBN,EAAQI,GAC3B,MAAMG,EAAc,CAAA,EACpB,IAAK,MAAM5gB,KAAQygB,EAAO,CACtB,MAAMtgC,IAAEA,EAAGvE,MAAEA,GAAUokB,EACvB,GAAmB,YAAf7f,EAAIkgC,OACJ,OAAOE,GACX,GAAqB,YAAjB3kC,EAAMykC,OACN,OAAOE,GACQ,UAAfpgC,EAAIkgC,QACJA,EAAOphC,QACU,UAAjBrD,EAAMykC,QACNA,EAAOphC,QACO,cAAdkB,EAAIvE,YACoB,IAAhBA,EAAMA,QAAyBokB,EAAK6gB,YAC5CD,EAAYzgC,EAAIvE,OAASA,EAAMA,MAEtC,CACD,MAAO,CAAEykC,OAAQA,EAAOzkC,MAAOA,MAAOglC,EACzC,EAEL,MAAML,GAAUtnC,OAAO6nC,OAAO,CAC1BT,OAAQ,YAENU,GAASnlC,IAAW,CAAEykC,OAAQ,QAASzkC,UACvColC,GAAMplC,IAAW,CAAEykC,OAAQ,QAASzkC,UACpCqlC,GAAaxM,GAAmB,YAAbA,EAAE4L,OACrBa,GAAWzM,GAAmB,UAAbA,EAAE4L,OACnBc,GAAW1M,GAAmB,UAAbA,EAAE4L,OACnBe,GAAW3M,GAAyB,oBAAZ72B,SAA2B62B,aAAa72B,QAiBtE,SAASyjC,GAAuBC,EAAU/5B,EAAOuY,EAAM8U,GACnD,GAAa,MAAT9U,IAAiB8U,EAAG,MAAM,IAAIuC,UAAU,iDAC5C,GAAqB,mBAAV5vB,EAAuB+5B,IAAa/5B,IAAUqtB,GAAKrtB,EAAM3I,IAAI0iC,GAAW,MAAM,IAAInK,UAAU,4EACvG,MAAgB,MAATrX,EAAe8U,EAAa,MAAT9U,EAAe8U,EAAEv3B,KAAKikC,GAAY1M,EAAIA,EAAEh5B,MAAQ2L,EAAMrD,IAAIo9B,EACxF,CAEA,SAASC,GAAuBD,EAAU/5B,EAAO3L,EAAOkkB,EAAM8U,GAC1D,GAAa,MAAT9U,EAAc,MAAM,IAAIqX,UAAU,kCACtC,GAAa,MAATrX,IAAiB8U,EAAG,MAAM,IAAIuC,UAAU,iDAC5C,GAAqB,mBAAV5vB,EAAuB+5B,IAAa/5B,IAAUqtB,GAAKrtB,EAAM3I,IAAI0iC,GAAW,MAAM,IAAInK,UAAU,2EACvG,MAAiB,MAATrX,EAAe8U,EAAEv3B,KAAKikC,EAAU1lC,GAASg5B,EAAIA,EAAEh5B,MAAQA,EAAQ2L,EAAM6kB,IAAIkV,EAAU1lC,GAASA,CACxG,CAOA,IAAI4lC,GAMAC,GAAgBC,GAXO,mBAApBC,iBAAiCA,gBAMxC,SAAWH,GACPA,EAAUI,SAAY14B,GAA+B,iBAAZA,EAAuB,CAAEA,WAAYA,GAAW,GACzFs4B,EAAU16B,SAAYoC,GAA+B,iBAAZA,EAAuBA,EAAUA,aAAyC,EAASA,EAAQA,OACvI,CAHD,CAGGs4B,KAAcA,GAAY,CAAE,IAG/B,MAAMK,GACF,WAAA79B,CAAY89B,EAAQlmC,EAAOohC,EAAM78B,GAC7B6C,KAAK++B,YAAc,GACnB/+B,KAAK8+B,OAASA,EACd9+B,KAAKhI,KAAOY,EACZoH,KAAKg/B,MAAQhF,EACbh6B,KAAKwxB,KAAOr0B,CACf,CACD,QAAI68B,GASA,OARKh6B,KAAK++B,YAAYtnC,SACduI,KAAKwxB,gBAAgBhyB,MACrBQ,KAAK++B,YAAYtlC,QAAQuG,KAAKg/B,SAAUh/B,KAAKwxB,MAG7CxxB,KAAK++B,YAAYtlC,QAAQuG,KAAKg/B,MAAOh/B,KAAKwxB,OAG3CxxB,KAAK++B,WACf,EAEL,MAAME,GAAe,CAAC9iC,EAAKiV,KACvB,GAAI+sB,GAAQ/sB,GACR,MAAO,CAAE8tB,SAAS,EAAMlnC,KAAMoZ,EAAOxY,OAGrC,IAAKuD,EAAI4gC,OAAOlE,OAAOphC,OACnB,MAAM,IAAI4B,MAAM,6CAEpB,MAAO,CACH6lC,SAAS,EACT,SAAI9J,GACA,GAAIp1B,KAAKm/B,OACL,OAAOn/B,KAAKm/B,OAChB,MAAM/J,EAAQ,IAAIwD,GAASz8B,EAAI4gC,OAAOlE,QAEtC,OADA74B,KAAKm/B,OAAS/J,EACPp1B,KAAKm/B,MACf,EAER,EAEL,SAASC,GAAoBn+B,GACzB,IAAKA,EACD,MAAO,GACX,MAAMq5B,SAAEA,EAAQ+E,mBAAEA,EAAkBC,eAAEA,EAAcC,YAAEA,GAAgBt+B,EACtE,GAAIq5B,IAAa+E,GAAsBC,GACnC,MAAM,IAAIjmC,MAAM,6FAEpB,GAAIihC,EACA,MAAO,CAAEA,SAAUA,EAAUiF,eAcjC,MAAO,CAAEjF,SAbS,CAACkF,EAAKrjC,KACpB,IAAIsjC,EAAIC,EACR,MAAMx5B,QAAEA,GAAYjF,EACpB,MAAiB,uBAAbu+B,EAAI5F,KACG,CAAE1zB,QAASA,QAAyCA,EAAU/J,EAAIggC,mBAErD,IAAbhgC,EAAInE,KACJ,CAAEkO,QAAsF,QAA5Eu5B,EAAKv5B,QAAyCA,EAAUo5B,SAAmC,IAAPG,EAAgBA,EAAKtjC,EAAIggC,cAEnH,iBAAbqD,EAAI5F,KACG,CAAE1zB,QAAS/J,EAAIggC,cACnB,CAAEj2B,QAA0F,QAAhFw5B,EAAKx5B,QAAyCA,EAAUm5B,SAAuC,IAAPK,EAAgBA,EAAKvjC,EAAIggC,aAAc,EAExHoD,cAClC,CACA,MAAMI,GACF,WAAA3+B,CAAY4+B,GAER5/B,KAAK6/B,IAAM7/B,KAAK8/B,eAChB9/B,KAAK+/B,KAAOH,EACZ5/B,KAAK6a,MAAQ7a,KAAK6a,MAAMzd,KAAK4C,MAC7BA,KAAKggC,UAAYhgC,KAAKggC,UAAU5iC,KAAK4C,MACrCA,KAAKigC,WAAajgC,KAAKigC,WAAW7iC,KAAK4C,MACvCA,KAAK8/B,eAAiB9/B,KAAK8/B,eAAe1iC,KAAK4C,MAC/CA,KAAK6/B,IAAM7/B,KAAK6/B,IAAIziC,KAAK4C,MACzBA,KAAKkgC,OAASlgC,KAAKkgC,OAAO9iC,KAAK4C,MAC/BA,KAAKmgC,WAAangC,KAAKmgC,WAAW/iC,KAAK4C,MACvCA,KAAKogC,YAAcpgC,KAAKogC,YAAYhjC,KAAK4C,MACzCA,KAAKiO,SAAWjO,KAAKiO,SAAS7Q,KAAK4C,MACnCA,KAAKqgC,SAAWrgC,KAAKqgC,SAASjjC,KAAK4C,MACnCA,KAAKsgC,QAAUtgC,KAAKsgC,QAAQljC,KAAK4C,MACjCA,KAAKiP,MAAQjP,KAAKiP,MAAM7R,KAAK4C,MAC7BA,KAAK2yB,QAAU3yB,KAAK2yB,QAAQv1B,KAAK4C,MACjCA,KAAKugC,GAAKvgC,KAAKugC,GAAGnjC,KAAK4C,MACvBA,KAAKwgC,IAAMxgC,KAAKwgC,IAAIpjC,KAAK4C,MACzBA,KAAKygC,UAAYzgC,KAAKygC,UAAUrjC,KAAK4C,MACrCA,KAAK0gC,MAAQ1gC,KAAK0gC,MAAMtjC,KAAK4C,MAC7BA,KAAKuwB,QAAUvwB,KAAKuwB,QAAQnzB,KAAK4C,MACjCA,KAAKw4B,MAAQx4B,KAAKw4B,MAAMp7B,KAAK4C,MAC7BA,KAAK2gC,SAAW3gC,KAAK2gC,SAASvjC,KAAK4C,MACnCA,KAAK4gC,KAAO5gC,KAAK4gC,KAAKxjC,KAAK4C,MAC3BA,KAAK6gC,SAAW7gC,KAAK6gC,SAASzjC,KAAK4C,MACnCA,KAAK8gC,WAAa9gC,KAAK8gC,WAAW1jC,KAAK4C,MACvCA,KAAK+gC,WAAa/gC,KAAK+gC,WAAW3jC,KAAK4C,KAC1C,CACD,eAAIu/B,GACA,OAAOv/B,KAAK+/B,KAAKR,WACpB,CACD,QAAAyB,CAASz0B,GACL,OAAO0rB,GAAc1rB,EAAMvU,KAC9B,CACD,eAAAipC,CAAgB10B,EAAOpQ,GACnB,OAAQA,GAAO,CACX4gC,OAAQxwB,EAAMuyB,OAAO/B,OACrB/kC,KAAMuU,EAAMvU,KACZkpC,WAAYjJ,GAAc1rB,EAAMvU,MAChCilC,eAAgBj9B,KAAK+/B,KAAKzF,SAC1BN,KAAMztB,EAAMytB,KACZ8E,OAAQvyB,EAAMuyB,OAErB,CACD,mBAAAqC,CAAoB50B,GAChB,MAAO,CACH8wB,OAAQ,IAAIH,GACZ/gC,IAAK,CACD4gC,OAAQxwB,EAAMuyB,OAAO/B,OACrB/kC,KAAMuU,EAAMvU,KACZkpC,WAAYjJ,GAAc1rB,EAAMvU,MAChCilC,eAAgBj9B,KAAK+/B,KAAKzF,SAC1BN,KAAMztB,EAAMytB,KACZ8E,OAAQvyB,EAAMuyB,QAGzB,CACD,UAAAsC,CAAW70B,GACP,MAAM6E,EAASpR,KAAKqhC,OAAO90B,GAC3B,GAAI6xB,GAAQhtB,GACR,MAAM,IAAI/X,MAAM,0CAEpB,OAAO+X,CACV,CACD,WAAAkwB,CAAY/0B,GACR,MAAM6E,EAASpR,KAAKqhC,OAAO90B,GAC3B,OAAO3R,QAAQC,QAAQuW,EAC1B,CACD,KAAAyJ,CAAM7iB,EAAMiJ,GACR,MAAMmQ,EAASpR,KAAKggC,UAAUhoC,EAAMiJ,GACpC,GAAImQ,EAAO8tB,QACP,OAAO9tB,EAAOpZ,KAClB,MAAMoZ,EAAOgkB,KAChB,CACD,SAAA4K,CAAUhoC,EAAMiJ,GACZ,IAAIw+B,EACJ,MAAMtjC,EAAM,CACR4gC,OAAQ,CACJlE,OAAQ,GACR0I,MAA+E,QAAvE9B,EAAKx+B,aAAuC,EAASA,EAAOsgC,aAA0B,IAAP9B,GAAgBA,EACvGzC,mBAAoB/7B,aAAuC,EAASA,EAAOq5B,UAE/EN,MAAO/4B,aAAuC,EAASA,EAAO+4B,OAAS,GACvEiD,eAAgBj9B,KAAK+/B,KAAKzF,SAC1BwE,OAAQ,KACR9mC,OACAkpC,WAAYjJ,GAAcjgC,IAExBoZ,EAASpR,KAAKohC,WAAW,CAAEppC,OAAMgiC,KAAM79B,EAAI69B,KAAM8E,OAAQ3iC,IAC/D,OAAO8iC,GAAa9iC,EAAKiV,EAC5B,CACD,gBAAM6uB,CAAWjoC,EAAMiJ,GACnB,MAAMmQ,QAAepR,KAAK8/B,eAAe9nC,EAAMiJ,GAC/C,GAAImQ,EAAO8tB,QACP,OAAO9tB,EAAOpZ,KAClB,MAAMoZ,EAAOgkB,KAChB,CACD,oBAAM0K,CAAe9nC,EAAMiJ,GACvB,MAAM9E,EAAM,CACR4gC,OAAQ,CACJlE,OAAQ,GACRmE,mBAAoB/7B,aAAuC,EAASA,EAAOq5B,SAC3EiH,OAAO,GAEXvH,MAAO/4B,aAAuC,EAASA,EAAO+4B,OAAS,GACvEiD,eAAgBj9B,KAAK+/B,KAAKzF,SAC1BwE,OAAQ,KACR9mC,OACAkpC,WAAYjJ,GAAcjgC,IAExBwpC,EAAmBxhC,KAAKqhC,OAAO,CAAErpC,OAAMgiC,KAAM79B,EAAI69B,KAAM8E,OAAQ3iC,IAC/DiV,QAAgBgtB,GAAQoD,GACxBA,EACA5mC,QAAQC,QAAQ2mC,IACtB,OAAOvC,GAAa9iC,EAAKiV,EAC5B,CACD,MAAA8uB,CAAOuB,EAAOv7B,GACV,MAAMw7B,EAAsB3O,GACD,iBAAZ7sB,QAA2C,IAAZA,EAC/B,CAAEA,WAEe,mBAAZA,EACLA,EAAQ6sB,GAGR7sB,EAGf,OAAOlG,KAAK2hC,aAAY,CAAC5O,EAAK52B,KAC1B,MAAMiV,EAASqwB,EAAM1O,GACf6O,EAAW,IAAMzlC,EAAI28B,SAAS,CAChCc,KAAMjB,GAAamD,UAChB4F,EAAmB3O,KAE1B,MAAuB,oBAAZn4B,SAA2BwW,aAAkBxW,QAC7CwW,EAAOpW,MAAMhD,KACXA,IACD4pC,KACO,OAOdxwB,IACDwwB,KACO,EAIV,GAER,CACD,UAAAzB,CAAWsB,EAAOI,GACd,OAAO7hC,KAAK2hC,aAAY,CAAC5O,EAAK52B,MACrBslC,EAAM1O,KACP52B,EAAI28B,SAAmC,mBAAnB+I,EACdA,EAAe9O,EAAK52B,GACpB0lC,IACC,IAMlB,CACD,WAAAF,CAAYxB,GACR,OAAO,IAAI2B,GAAW,CAClBC,OAAQ/hC,KACRgiC,SAAUC,GAAsBH,WAChCI,OAAQ,CAAEvoC,KAAM,aAAcwmC,eAErC,CACD,WAAAC,CAAYD,GACR,OAAOngC,KAAK2hC,YAAYxB,EAC3B,CACD,QAAAlyB,GACI,OAAOk0B,GAAYjsC,OAAO8J,KAAMA,KAAK+/B,KACxC,CACD,QAAAM,GACI,OAAO+B,GAAYlsC,OAAO8J,KAAMA,KAAK+/B,KACxC,CACD,OAAAO,GACI,OAAOtgC,KAAKqgC,WAAWpyB,UAC1B,CACD,KAAAgB,GACI,OAAOozB,GAASnsC,OAAO8J,KAAMA,KAAK+/B,KACrC,CACD,OAAApN,GACI,OAAO2P,GAAWpsC,OAAO8J,KAAMA,KAAK+/B,KACvC,CACD,EAAAQ,CAAGgC,GACC,OAAOC,GAAStsC,OAAO,CAAC8J,KAAMuiC,GAASviC,KAAK+/B,KAC/C,CACD,GAAAS,CAAIiC,GACA,OAAOC,GAAgBxsC,OAAO8J,KAAMyiC,EAAUziC,KAAK+/B,KACtD,CACD,SAAAU,CAAUA,GACN,OAAO,IAAIqB,GAAW,IACf1C,GAAoBp/B,KAAK+/B,MAC5BgC,OAAQ/hC,KACRgiC,SAAUC,GAAsBH,WAChCI,OAAQ,CAAEvoC,KAAM,YAAa8mC,cAEpC,CACD,QAAQb,GACJ,MAAM+C,EAAkC,mBAAR/C,EAAqBA,EAAM,IAAMA,EACjE,OAAO,IAAIgD,GAAW,IACfxD,GAAoBp/B,KAAK+/B,MAC5B8C,UAAW7iC,KACX8iC,aAAcH,EACdX,SAAUC,GAAsBW,YAEvC,CACD,KAAAlC,GACI,OAAO,IAAIqC,GAAW,CAClBf,SAAUC,GAAsBc,WAChCppC,KAAMqG,QACHo/B,GAAoBp/B,KAAK+/B,OAEnC,CACD,MAAMH,GACF,MAAMoD,EAAgC,mBAARpD,EAAqBA,EAAM,IAAMA,EAC/D,OAAO,IAAIqD,GAAS,IACb7D,GAAoBp/B,KAAK+/B,MAC5B8C,UAAW7iC,KACXkjC,WAAYF,EACZhB,SAAUC,GAAsBgB,UAEvC,CACD,QAAAtC,CAASpB,GAEL,OAAO,IAAI4D,EADEnjC,KAAKgB,aACF,IACThB,KAAK+/B,KACRR,eAEP,CACD,IAAAqB,CAAKhqC,GACD,OAAOwsC,GAAYltC,OAAO8J,KAAMpJ,EACnC,CACD,QAAAiqC,GACI,OAAOwC,GAAYntC,OAAO8J,KAC7B,CACD,UAAA+gC,GACI,OAAO/gC,KAAKggC,eAAUziC,GAAW2hC,OACpC,CACD,UAAA4B,GACI,OAAO9gC,KAAKggC,UAAU,MAAMd,OAC/B,EAEL,MAAMoE,GAAY,iBACZC,GAAa,cACbC,GAAY,2BAGZC,GAAY,yFACZC,GAAc,oBACdC,GAAgB,2SAahBC,GAAa,qFAKnB,IAAIC,GAEJ,MAAMC,GAAY,sHACZC,GAAY,+XAEZC,GAAc,mEAMdC,GAAkB,oMAClBC,GAAY,IAAIrgC,OAAO,IAAIogC,OACjC,SAASE,GAAgB7U,GAErB,IAAIjQ,EAAQ,qCAOZ,OANIiQ,EAAK8U,UACL/kB,EAAQ,GAAGA,WAAeiQ,EAAK8U,aAER,MAAlB9U,EAAK8U,YACV/kB,EAAQ,GAAGA,eAERA,CACX,CAKA,SAASglB,GAAc/U,GACnB,IAAIjQ,EAAQ,GAAG4kB,MAAmBE,GAAgB7U,KAClD,MAAMgV,EAAO,GAKb,OAJAA,EAAK7qC,KAAK61B,EAAKzyB,MAAQ,KAAO,KAC1ByyB,EAAKvoB,QACLu9B,EAAK7qC,KAAK,wBACd4lB,EAAQ,GAAGA,KAASilB,EAAKlgC,KAAK,QACvB,IAAIP,OAAO,IAAIwb,KAC1B,CAUA,MAAMklB,WAAkB5E,GACpB,MAAA0B,CAAO90B,GACCvM,KAAK+/B,KAAKyE,SACVj4B,EAAMvU,KAAOgM,OAAOuI,EAAMvU,OAG9B,GADmBgI,KAAKghC,SAASz0B,KACdyrB,GAAc1b,OAAQ,CACrC,MAAMngB,EAAM6D,KAAKihC,gBAAgB10B,GAMjC,OALAswB,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6B,aACnBE,SAAU1C,GAAc1b,OACxBme,SAAUt+B,EAAI+kC,aAEX3D,EACV,CACD,MAAMF,EAAS,IAAIH,GACnB,IAAI/gC,EACJ,IAAK,MAAMslC,KAASzhC,KAAK+/B,KAAK0E,OAC1B,GAAmB,QAAfhD,EAAM3kB,KACFvQ,EAAMvU,KAAKP,OAASgqC,EAAM7oC,QAC1BuD,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6C,UACnBG,QAAS8F,EAAM7oC,MACfe,KAAM,SACN+hC,WAAW,EACXD,OAAO,EACPv1B,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,cAGV,GAAmB,QAAfwlC,EAAM3kB,KACPvQ,EAAMvU,KAAKP,OAASgqC,EAAM7oC,QAC1BuD,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAaiD,QACnBC,QAAS4F,EAAM7oC,MACfe,KAAM,SACN+hC,WAAW,EACXD,OAAO,EACPv1B,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,cAGV,GAAmB,WAAfwlC,EAAM3kB,KAAmB,CAC9B,MAAM4nB,EAASn4B,EAAMvU,KAAKP,OAASgqC,EAAM7oC,MACnC+rC,EAAWp4B,EAAMvU,KAAKP,OAASgqC,EAAM7oC,OACvC8rC,GAAUC,KACVxoC,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAC9BuoC,EACA7H,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAaiD,QACnBC,QAAS4F,EAAM7oC,MACfe,KAAM,SACN+hC,WAAW,EACXD,OAAO,EACPv1B,QAASu7B,EAAMv7B,UAGdy+B,GACL9H,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6C,UACnBG,QAAS8F,EAAM7oC,MACfe,KAAM,SACN+hC,WAAW,EACXD,OAAO,EACPv1B,QAASu7B,EAAMv7B,UAGvBm3B,EAAOphC,QAEd,MACI,GAAmB,UAAfwlC,EAAM3kB,KACN8mB,GAAW7/B,KAAKwI,EAAMvU,QACvBmE,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBi/B,WAAY,QACZxB,KAAMjB,GAAawC,eACnBj1B,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,cAGV,GAAmB,UAAfwlC,EAAM3kB,KACN+mB,KACDA,GAAa,IAAIhgC,OAtIjB,uDAsIqC,MAEpCggC,GAAW9/B,KAAKwI,EAAMvU,QACvBmE,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBi/B,WAAY,QACZxB,KAAMjB,GAAawC,eACnBj1B,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,cAGV,GAAmB,SAAfwlC,EAAM3kB,KACN2mB,GAAU1/B,KAAKwI,EAAMvU,QACtBmE,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBi/B,WAAY,OACZxB,KAAMjB,GAAawC,eACnBj1B,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,cAGV,GAAmB,WAAfwlC,EAAM3kB,KACN4mB,GAAY3/B,KAAKwI,EAAMvU,QACxBmE,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBi/B,WAAY,SACZxB,KAAMjB,GAAawC,eACnBj1B,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,cAGV,GAAmB,SAAfwlC,EAAM3kB,KACNwmB,GAAUv/B,KAAKwI,EAAMvU,QACtBmE,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBi/B,WAAY,OACZxB,KAAMjB,GAAawC,eACnBj1B,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,cAGV,GAAmB,UAAfwlC,EAAM3kB,KACNymB,GAAWx/B,KAAKwI,EAAMvU,QACvBmE,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBi/B,WAAY,QACZxB,KAAMjB,GAAawC,eACnBj1B,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,cAGV,GAAmB,SAAfwlC,EAAM3kB,KACN0mB,GAAUz/B,KAAKwI,EAAMvU,QACtBmE,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBi/B,WAAY,OACZxB,KAAMjB,GAAawC,eACnBj1B,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,cAGV,GAAmB,QAAfwlC,EAAM3kB,KACX,IACI,IAAI8nB,IAAIr4B,EAAMvU,KACjB,CACD,MAAOynC,GACHtjC,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBi/B,WAAY,MACZxB,KAAMjB,GAAawC,eACnBj1B,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,OACV,MAEA,GAAmB,UAAfwlC,EAAM3kB,KAAkB,CAC7B2kB,EAAMpiB,MAAMF,UAAY,EACLsiB,EAAMpiB,MAAMtb,KAAKwI,EAAMvU,QAEtCmE,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBi/B,WAAY,QACZxB,KAAMjB,GAAawC,eACnBj1B,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,QAEd,MACI,GAAmB,SAAfwlC,EAAM3kB,KACXvQ,EAAMvU,KAAOuU,EAAMvU,KAAK+qB,YAEvB,GAAmB,aAAf0e,EAAM3kB,KACNvQ,EAAMvU,KAAKshB,SAASmoB,EAAM7oC,MAAO6oC,EAAMpG,YACxCl/B,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAawC,eACnBC,WAAY,CAAE9hB,SAAUmoB,EAAM7oC,MAAOyiC,SAAUoG,EAAMpG,UACrDn1B,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,cAGV,GAAmB,gBAAfwlC,EAAM3kB,KACXvQ,EAAMvU,KAAOuU,EAAMvU,KAAKsiB,mBAEvB,GAAmB,gBAAfmnB,EAAM3kB,KACXvQ,EAAMvU,KAAOuU,EAAMvU,KAAK6kB,mBAEvB,GAAmB,eAAf4kB,EAAM3kB,KACNvQ,EAAMvU,KAAKsjC,WAAWmG,EAAM7oC,SAC7BuD,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAawC,eACnBC,WAAY,CAAEE,WAAYmG,EAAM7oC,OAChCsN,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,cAGV,GAAmB,aAAfwlC,EAAM3kB,KACNvQ,EAAMvU,KAAKujC,SAASkG,EAAM7oC,SAC3BuD,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAawC,eACnBC,WAAY,CAAEG,SAAUkG,EAAM7oC,OAC9BsN,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,cAGV,GAAmB,aAAfwlC,EAAM3kB,KAAqB,CAClBunB,GAAc5C,GACjB19B,KAAKwI,EAAMvU,QAClBmE,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAawC,eACnBC,WAAY,WACZl1B,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,QAEd,MACI,GAAmB,SAAfwlC,EAAM3kB,KAAiB,CACdonB,GACHngC,KAAKwI,EAAMvU,QAClBmE,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAawC,eACnBC,WAAY,OACZl1B,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,QAEd,MACI,GAAmB,SAAfwlC,EAAM3kB,KAAiB,CA5QjC,IAAIjZ,OAAO,IAAIsgC,GA6Qc1C,OACb19B,KAAKwI,EAAMvU,QAClBmE,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAawC,eACnBC,WAAY,OACZl1B,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,QAEd,KACuB,aAAfwlC,EAAM3kB,KACN6mB,GAAc5/B,KAAKwI,EAAMvU,QAC1BmE,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBi/B,WAAY,WACZxB,KAAMjB,GAAawC,eACnBj1B,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,SAGS,OAAfwlC,EAAM3kB,MAvRR+nB,EAwRYt4B,EAAMvU,MAvRhB,QADE8sC,EAwRoBrD,EAAMqD,UAvRnBA,IAAYhB,GAAU//B,KAAK8gC,MAGpC,OAAZC,GAAqBA,IAAYf,GAAUhgC,KAAK8gC,MAqRrC1oC,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBi/B,WAAY,KACZxB,KAAMjB,GAAawC,eACnBj1B,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,UAGS,WAAfwlC,EAAM3kB,KACNknB,GAAYjgC,KAAKwI,EAAMvU,QACxBmE,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBi/B,WAAY,SACZxB,KAAMjB,GAAawC,eACnBj1B,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,SAIXo5B,GAAKwB,YAAY4K,GA9SjC,IAAmBoD,EAAIC,EAiTf,MAAO,CAAEzH,OAAQA,EAAOzkC,MAAOA,MAAO2T,EAAMvU,KAC/C,CACD,MAAA+sC,CAAO1lB,EAAO+b,EAAYl1B,GACtB,OAAOlG,KAAKmgC,YAAYnoC,GAASqnB,EAAMtb,KAAK/L,IAAO,CAC/CojC,aACAxB,KAAMjB,GAAawC,kBAChBqD,GAAUI,SAAS14B,IAE7B,CACD,SAAA8+B,CAAUvD,GACN,OAAO,IAAI8C,GAAU,IACdvkC,KAAK+/B,KACR0E,OAAQ,IAAIzkC,KAAK+/B,KAAK0E,OAAQhD,IAErC,CACD,KAAAwD,CAAM/+B,GACF,OAAOlG,KAAKglC,UAAU,CAAEloB,KAAM,WAAY0hB,GAAUI,SAAS14B,IAChE,CACD,GAAAg/B,CAAIh/B,GACA,OAAOlG,KAAKglC,UAAU,CAAEloB,KAAM,SAAU0hB,GAAUI,SAAS14B,IAC9D,CACD,KAAAi/B,CAAMj/B,GACF,OAAOlG,KAAKglC,UAAU,CAAEloB,KAAM,WAAY0hB,GAAUI,SAAS14B,IAChE,CACD,IAAAmf,CAAKnf,GACD,OAAOlG,KAAKglC,UAAU,CAAEloB,KAAM,UAAW0hB,GAAUI,SAAS14B,IAC/D,CACD,MAAAk/B,CAAOl/B,GACH,OAAOlG,KAAKglC,UAAU,CAAEloB,KAAM,YAAa0hB,GAAUI,SAAS14B,IACjE,CACD,IAAAm/B,CAAKn/B,GACD,OAAOlG,KAAKglC,UAAU,CAAEloB,KAAM,UAAW0hB,GAAUI,SAAS14B,IAC/D,CACD,KAAAo/B,CAAMp/B,GACF,OAAOlG,KAAKglC,UAAU,CAAEloB,KAAM,WAAY0hB,GAAUI,SAAS14B,IAChE,CACD,IAAAq/B,CAAKr/B,GACD,OAAOlG,KAAKglC,UAAU,CAAEloB,KAAM,UAAW0hB,GAAUI,SAAS14B,IAC/D,CACD,MAAAs/B,CAAOt/B,GACH,OAAOlG,KAAKglC,UAAU,CAAEloB,KAAM,YAAa0hB,GAAUI,SAAS14B,IACjE,CACD,EAAA2+B,CAAGtsC,GACC,OAAOyH,KAAKglC,UAAU,CAAEloB,KAAM,QAAS0hB,GAAUI,SAASrmC,IAC7D,CACD,QAAA8rB,CAAS9rB,GACL,IAAIknC,EAAIC,EACR,MAAuB,iBAAZnnC,EACAyH,KAAKglC,UAAU,CAClBloB,KAAM,WACNsnB,UAAW,KACXr9B,QAAQ,EACRlK,OAAO,EACPqJ,QAAS3N,IAGVyH,KAAKglC,UAAU,CAClBloB,KAAM,WACNsnB,eAA4F,KAAzE7rC,aAAyC,EAASA,EAAQ6rC,WAA6B,KAAO7rC,aAAyC,EAASA,EAAQ6rC,UAC3Kr9B,OAAoF,QAA3E04B,EAAKlnC,aAAyC,EAASA,EAAQwO,cAA2B,IAAP04B,GAAgBA,EAC5G5iC,MAAkF,QAA1E6iC,EAAKnnC,aAAyC,EAASA,EAAQsE,aAA0B,IAAP6iC,GAAgBA,KACvGlB,GAAUI,SAASrmC,aAAyC,EAASA,EAAQ2N,UAEvF,CACD,IAAAke,CAAKle,GACD,OAAOlG,KAAKglC,UAAU,CAAEloB,KAAM,OAAQ5W,WACzC,CACD,IAAAif,CAAK5sB,GACD,MAAuB,iBAAZA,EACAyH,KAAKglC,UAAU,CAClBloB,KAAM,OACNsnB,UAAW,KACXl+B,QAAS3N,IAGVyH,KAAKglC,UAAU,CAClBloB,KAAM,OACNsnB,eAA4F,KAAzE7rC,aAAyC,EAASA,EAAQ6rC,WAA6B,KAAO7rC,aAAyC,EAASA,EAAQ6rC,aACxK5F,GAAUI,SAASrmC,aAAyC,EAASA,EAAQ2N,UAEvF,CACD,QAAAu/B,CAASv/B,GACL,OAAOlG,KAAKglC,UAAU,CAAEloB,KAAM,cAAe0hB,GAAUI,SAAS14B,IACnE,CACD,KAAAmZ,CAAMA,EAAOnZ,GACT,OAAOlG,KAAKglC,UAAU,CAClBloB,KAAM,QACNuC,MAAOA,KACJmf,GAAUI,SAAS14B,IAE7B,CACD,QAAAoT,CAAS1gB,EAAOL,GACZ,OAAOyH,KAAKglC,UAAU,CAClBloB,KAAM,WACNlkB,MAAOA,EACPyiC,SAAU9iC,aAAyC,EAASA,EAAQ8iC,YACjEmD,GAAUI,SAASrmC,aAAyC,EAASA,EAAQ2N,UAEvF,CACD,UAAAo1B,CAAW1iC,EAAOsN,GACd,OAAOlG,KAAKglC,UAAU,CAClBloB,KAAM,aACNlkB,MAAOA,KACJ4lC,GAAUI,SAAS14B,IAE7B,CACD,QAAAq1B,CAAS3iC,EAAOsN,GACZ,OAAOlG,KAAKglC,UAAU,CAClBloB,KAAM,WACNlkB,MAAOA,KACJ4lC,GAAUI,SAAS14B,IAE7B,CACD,GAAAw/B,CAAIC,EAAWz/B,GACX,OAAOlG,KAAKglC,UAAU,CAClBloB,KAAM,MACNlkB,MAAO+sC,KACJnH,GAAUI,SAAS14B,IAE7B,CACD,GAAAI,CAAIwM,EAAW5M,GACX,OAAOlG,KAAKglC,UAAU,CAClBloB,KAAM,MACNlkB,MAAOka,KACJ0rB,GAAUI,SAAS14B,IAE7B,CACD,MAAAzO,CAAOu3B,EAAK9oB,GACR,OAAOlG,KAAKglC,UAAU,CAClBloB,KAAM,SACNlkB,MAAOo2B,KACJwP,GAAUI,SAAS14B,IAE7B,CAKD,QAAA0/B,CAAS1/B,GACL,OAAOlG,KAAK0lC,IAAI,EAAGlH,GAAUI,SAAS14B,GACzC,CACD,IAAA6c,GACI,OAAO,IAAIwhB,GAAU,IACdvkC,KAAK+/B,KACR0E,OAAQ,IAAIzkC,KAAK+/B,KAAK0E,OAAQ,CAAE3nB,KAAM,UAE7C,CACD,WAAAxC,GACI,OAAO,IAAIiqB,GAAU,IACdvkC,KAAK+/B,KACR0E,OAAQ,IAAIzkC,KAAK+/B,KAAK0E,OAAQ,CAAE3nB,KAAM,iBAE7C,CACD,WAAAD,GACI,OAAO,IAAI0nB,GAAU,IACdvkC,KAAK+/B,KACR0E,OAAQ,IAAIzkC,KAAK+/B,KAAK0E,OAAQ,CAAE3nB,KAAM,iBAE7C,CACD,cAAI+oB,GACA,QAAS7lC,KAAK+/B,KAAK0E,OAAOpN,MAAMvxB,GAAmB,aAAZA,EAAGgX,MAC7C,CACD,UAAIgpB,GACA,QAAS9lC,KAAK+/B,KAAK0E,OAAOpN,MAAMvxB,GAAmB,SAAZA,EAAGgX,MAC7C,CACD,UAAIipB,GACA,QAAS/lC,KAAK+/B,KAAK0E,OAAOpN,MAAMvxB,GAAmB,SAAZA,EAAGgX,MAC7C,CACD,cAAIkpB,GACA,QAAShmC,KAAK+/B,KAAK0E,OAAOpN,MAAMvxB,GAAmB,aAAZA,EAAGgX,MAC7C,CACD,WAAImpB,GACA,QAASjmC,KAAK+/B,KAAK0E,OAAOpN,MAAMvxB,GAAmB,UAAZA,EAAGgX,MAC7C,CACD,SAAIopB,GACA,QAASlmC,KAAK+/B,KAAK0E,OAAOpN,MAAMvxB,GAAmB,QAAZA,EAAGgX,MAC7C,CACD,WAAIqpB,GACA,QAASnmC,KAAK+/B,KAAK0E,OAAOpN,MAAMvxB,GAAmB,UAAZA,EAAGgX,MAC7C,CACD,UAAIspB,GACA,QAASpmC,KAAK+/B,KAAK0E,OAAOpN,MAAMvxB,GAAmB,SAAZA,EAAGgX,MAC7C,CACD,YAAIupB,GACA,QAASrmC,KAAK+/B,KAAK0E,OAAOpN,MAAMvxB,GAAmB,WAAZA,EAAGgX,MAC7C,CACD,UAAIwpB,GACA,QAAStmC,KAAK+/B,KAAK0E,OAAOpN,MAAMvxB,GAAmB,SAAZA,EAAGgX,MAC7C,CACD,WAAIypB,GACA,QAASvmC,KAAK+/B,KAAK0E,OAAOpN,MAAMvxB,GAAmB,UAAZA,EAAGgX,MAC7C,CACD,UAAI0pB,GACA,QAASxmC,KAAK+/B,KAAK0E,OAAOpN,MAAMvxB,GAAmB,SAAZA,EAAGgX,MAC7C,CACD,QAAI2pB,GACA,QAASzmC,KAAK+/B,KAAK0E,OAAOpN,MAAMvxB,GAAmB,OAAZA,EAAGgX,MAC7C,CACD,YAAI4pB,GACA,QAAS1mC,KAAK+/B,KAAK0E,OAAOpN,MAAMvxB,GAAmB,WAAZA,EAAGgX,MAC7C,CACD,aAAI6oB,GACA,IAAID,EAAM,KACV,IAAK,MAAM5/B,KAAM9F,KAAK+/B,KAAK0E,OACP,QAAZ3+B,EAAGgX,OACS,OAAR4oB,GAAgB5/B,EAAGlN,MAAQ8sC,KAC3BA,EAAM5/B,EAAGlN,OAGrB,OAAO8sC,CACV,CACD,aAAI5yB,GACA,IAAIxM,EAAM,KACV,IAAK,MAAMR,KAAM9F,KAAK+/B,KAAK0E,OACP,QAAZ3+B,EAAGgX,OACS,OAARxW,GAAgBR,EAAGlN,MAAQ0N,KAC3BA,EAAMR,EAAGlN,OAGrB,OAAO0N,CACV,EAYL,SAASqgC,GAAmB5T,EAAK6T,GAC7B,MAAMC,GAAe9T,EAAIjvB,WAAWsC,MAAM,KAAK,IAAM,IAAI3O,OACnDqvC,GAAgBF,EAAK9iC,WAAWsC,MAAM,KAAK,IAAM,IAAI3O,OACrDsvC,EAAWF,EAAcC,EAAeD,EAAcC,EAG5D,OAFeE,SAASjU,EAAIkU,QAAQF,GAAU7zB,QAAQ,IAAK,KAC3C8zB,SAASJ,EAAKK,QAAQF,GAAU7zB,QAAQ,IAAK,KACjC7M,KAAK6gC,IAAI,GAAIH,EAC7C,CAjBAxC,GAAUruC,OAAU+K,IAChB,IAAIw+B,EACJ,OAAO,IAAI8E,GAAU,CACjBE,OAAQ,GACRzC,SAAUC,GAAsBsC,UAChCC,OAAiF,QAAxE/E,EAAKx+B,aAAuC,EAASA,EAAOujC,cAA2B,IAAP/E,GAAgBA,KACtGL,GAAoBn+B,IACzB,EAWN,MAAMkmC,WAAkBxH,GACpB,WAAA3+B,GACI6V,SAASyX,WACTtuB,KAAK0lC,IAAM1lC,KAAKonC,IAChBpnC,KAAKsG,IAAMtG,KAAKqnC,IAChBrnC,KAAK4mC,KAAO5mC,KAAKi8B,UACpB,CACD,MAAAoF,CAAO90B,GACCvM,KAAK+/B,KAAKyE,SACVj4B,EAAMvU,KAAOw/B,OAAOjrB,EAAMvU,OAG9B,GADmBgI,KAAKghC,SAASz0B,KACdyrB,GAAcrZ,OAAQ,CACrC,MAAMxiB,EAAM6D,KAAKihC,gBAAgB10B,GAMjC,OALAswB,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6B,aACnBE,SAAU1C,GAAcrZ,OACxB8b,SAAUt+B,EAAI+kC,aAEX3D,EACV,CACD,IAAIphC,EACJ,MAAMkhC,EAAS,IAAIH,GACnB,IAAK,MAAMuE,KAASzhC,KAAK+/B,KAAK0E,OAC1B,GAAmB,QAAfhD,EAAM3kB,KACDuY,GAAKkC,UAAUhrB,EAAMvU,QACtBmE,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6B,aACnBE,SAAU,UACVD,SAAU,QACVv0B,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,cAGV,GAAmB,QAAfwlC,EAAM3kB,KAAgB,EACV2kB,EAAM/F,UACjBnvB,EAAMvU,KAAOypC,EAAM7oC,MACnB2T,EAAMvU,MAAQypC,EAAM7oC,SAEtBuD,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6C,UACnBG,QAAS8F,EAAM7oC,MACfe,KAAM,SACN+hC,UAAW+F,EAAM/F,UACjBD,OAAO,EACPv1B,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,QAEd,MACI,GAAmB,QAAfwlC,EAAM3kB,KAAgB,EACZ2kB,EAAM/F,UACfnvB,EAAMvU,KAAOypC,EAAM7oC,MACnB2T,EAAMvU,MAAQypC,EAAM7oC,SAEtBuD,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAaiD,QACnBC,QAAS4F,EAAM7oC,MACfe,KAAM,SACN+hC,UAAW+F,EAAM/F,UACjBD,OAAO,EACPv1B,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,QAEd,KACuB,eAAfwlC,EAAM3kB,KACyC,IAAhD6pB,GAAmBp6B,EAAMvU,KAAMypC,EAAM7oC,SACrCuD,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAaqD,gBACnBC,WAAYwF,EAAM7oC,MAClBsN,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,SAGS,WAAfwlC,EAAM3kB,KACN0a,OAAOC,SAASlrB,EAAMvU,QACvBmE,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAauD,WACnBh2B,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,SAIXo5B,GAAKwB,YAAY4K,GAGzB,MAAO,CAAEpE,OAAQA,EAAOzkC,MAAOA,MAAO2T,EAAMvU,KAC/C,CACD,GAAAovC,CAAIxuC,EAAOsN,GACP,OAAOlG,KAAKsnC,SAAS,MAAO1uC,GAAO,EAAM4lC,GAAU16B,SAASoC,GAC/D,CACD,EAAAqhC,CAAG3uC,EAAOsN,GACN,OAAOlG,KAAKsnC,SAAS,MAAO1uC,GAAO,EAAO4lC,GAAU16B,SAASoC,GAChE,CACD,GAAAmhC,CAAIzuC,EAAOsN,GACP,OAAOlG,KAAKsnC,SAAS,MAAO1uC,GAAO,EAAM4lC,GAAU16B,SAASoC,GAC/D,CACD,EAAAshC,CAAG5uC,EAAOsN,GACN,OAAOlG,KAAKsnC,SAAS,MAAO1uC,GAAO,EAAO4lC,GAAU16B,SAASoC,GAChE,CACD,QAAAohC,CAASxqB,EAAMlkB,EAAO8iC,EAAWx1B,GAC7B,OAAO,IAAIihC,GAAU,IACdnnC,KAAK+/B,KACR0E,OAAQ,IACDzkC,KAAK+/B,KAAK0E,OACb,CACI3nB,OACAlkB,QACA8iC,YACAx1B,QAASs4B,GAAU16B,SAASoC,MAI3C,CACD,SAAA8+B,CAAUvD,GACN,OAAO,IAAI0F,GAAU,IACdnnC,KAAK+/B,KACR0E,OAAQ,IAAIzkC,KAAK+/B,KAAK0E,OAAQhD,IAErC,CACD,GAAAgG,CAAIvhC,GACA,OAAOlG,KAAKglC,UAAU,CAClBloB,KAAM,MACN5W,QAASs4B,GAAU16B,SAASoC,IAEnC,CACD,QAAAwhC,CAASxhC,GACL,OAAOlG,KAAKglC,UAAU,CAClBloB,KAAM,MACNlkB,MAAO,EACP8iC,WAAW,EACXx1B,QAASs4B,GAAU16B,SAASoC,IAEnC,CACD,QAAAyhC,CAASzhC,GACL,OAAOlG,KAAKglC,UAAU,CAClBloB,KAAM,MACNlkB,MAAO,EACP8iC,WAAW,EACXx1B,QAASs4B,GAAU16B,SAASoC,IAEnC,CACD,WAAA0hC,CAAY1hC,GACR,OAAOlG,KAAKglC,UAAU,CAClBloB,KAAM,MACNlkB,MAAO,EACP8iC,WAAW,EACXx1B,QAASs4B,GAAU16B,SAASoC,IAEnC,CACD,WAAA2hC,CAAY3hC,GACR,OAAOlG,KAAKglC,UAAU,CAClBloB,KAAM,MACNlkB,MAAO,EACP8iC,WAAW,EACXx1B,QAASs4B,GAAU16B,SAASoC,IAEnC,CACD,UAAA+1B,CAAWrjC,EAAOsN,GACd,OAAOlG,KAAKglC,UAAU,CAClBloB,KAAM,aACNlkB,MAAOA,EACPsN,QAASs4B,GAAU16B,SAASoC,IAEnC,CACD,MAAA4hC,CAAO5hC,GACH,OAAOlG,KAAKglC,UAAU,CAClBloB,KAAM,SACN5W,QAASs4B,GAAU16B,SAASoC,IAEnC,CACD,IAAA6hC,CAAK7hC,GACD,OAAOlG,KAAKglC,UAAU,CAClBloB,KAAM,MACN4e,WAAW,EACX9iC,MAAO4+B,OAAOwQ,iBACd9hC,QAASs4B,GAAU16B,SAASoC,KAC7B8+B,UAAU,CACTloB,KAAM,MACN4e,WAAW,EACX9iC,MAAO4+B,OAAOyQ,iBACd/hC,QAASs4B,GAAU16B,SAASoC,IAEnC,CACD,YAAIgiC,GACA,IAAIxC,EAAM,KACV,IAAK,MAAM5/B,KAAM9F,KAAK+/B,KAAK0E,OACP,QAAZ3+B,EAAGgX,OACS,OAAR4oB,GAAgB5/B,EAAGlN,MAAQ8sC,KAC3BA,EAAM5/B,EAAGlN,OAGrB,OAAO8sC,CACV,CACD,YAAIyC,GACA,IAAI7hC,EAAM,KACV,IAAK,MAAMR,KAAM9F,KAAK+/B,KAAK0E,OACP,QAAZ3+B,EAAGgX,OACS,OAARxW,GAAgBR,EAAGlN,MAAQ0N,KAC3BA,EAAMR,EAAGlN,OAGrB,OAAO0N,CACV,CACD,SAAI8hC,GACA,QAASpoC,KAAK+/B,KAAK0E,OAAOpN,MAAMvxB,GAAmB,QAAZA,EAAGgX,MACzB,eAAZhX,EAAGgX,MAAyBuY,GAAKkC,UAAUzxB,EAAGlN,QACtD,CACD,YAAI6+B,GACA,IAAInxB,EAAM,KAAMo/B,EAAM,KACtB,IAAK,MAAM5/B,KAAM9F,KAAK+/B,KAAK0E,OAAQ,CAC/B,GAAgB,WAAZ3+B,EAAGgX,MACS,QAAZhX,EAAGgX,MACS,eAAZhX,EAAGgX,KACH,OAAO,EAEU,QAAZhX,EAAGgX,MACI,OAAR4oB,GAAgB5/B,EAAGlN,MAAQ8sC,KAC3BA,EAAM5/B,EAAGlN,OAEI,QAAZkN,EAAGgX,OACI,OAARxW,GAAgBR,EAAGlN,MAAQ0N,KAC3BA,EAAMR,EAAGlN,MAEpB,CACD,OAAO4+B,OAAOC,SAASiO,IAAQlO,OAAOC,SAASnxB,EAClD,EAEL6gC,GAAUjxC,OAAU+K,GACT,IAAIkmC,GAAU,CACjB1C,OAAQ,GACRzC,SAAUC,GAAsBkF,UAChC3C,QAASvjC,aAAuC,EAASA,EAAOujC,UAAW,KACxEpF,GAAoBn+B,KAG/B,MAAMonC,WAAkB1I,GACpB,WAAA3+B,GACI6V,SAASyX,WACTtuB,KAAK0lC,IAAM1lC,KAAKonC,IAChBpnC,KAAKsG,IAAMtG,KAAKqnC,GACnB,CACD,MAAAhG,CAAO90B,GACCvM,KAAK+/B,KAAKyE,SACVj4B,EAAMvU,KAAOswC,OAAO/7B,EAAMvU,OAG9B,GADmBgI,KAAKghC,SAASz0B,KACdyrB,GAAcM,OAAQ,CACrC,MAAMn8B,EAAM6D,KAAKihC,gBAAgB10B,GAMjC,OALAswB,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6B,aACnBE,SAAU1C,GAAcM,OACxBmC,SAAUt+B,EAAI+kC,aAEX3D,EACV,CACD,IAAIphC,EACJ,MAAMkhC,EAAS,IAAIH,GACnB,IAAK,MAAMuE,KAASzhC,KAAK+/B,KAAK0E,OAC1B,GAAmB,QAAfhD,EAAM3kB,KAAgB,EACL2kB,EAAM/F,UACjBnvB,EAAMvU,KAAOypC,EAAM7oC,MACnB2T,EAAMvU,MAAQypC,EAAM7oC,SAEtBuD,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6C,UACnB7hC,KAAM,SACNgiC,QAAS8F,EAAM7oC,MACf8iC,UAAW+F,EAAM/F,UACjBx1B,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,QAEd,MACI,GAAmB,QAAfwlC,EAAM3kB,KAAgB,EACZ2kB,EAAM/F,UACfnvB,EAAMvU,KAAOypC,EAAM7oC,MACnB2T,EAAMvU,MAAQypC,EAAM7oC,SAEtBuD,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAaiD,QACnBjiC,KAAM,SACNkiC,QAAS4F,EAAM7oC,MACf8iC,UAAW+F,EAAM/F,UACjBx1B,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,QAEd,KACuB,eAAfwlC,EAAM3kB,KACPvQ,EAAMvU,KAAOypC,EAAM7oC,QAAU0vC,OAAO,KACpCnsC,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAaqD,gBACnBC,WAAYwF,EAAM7oC,MAClBsN,QAASu7B,EAAMv7B,UAEnBm3B,EAAOphC,SAIXo5B,GAAKwB,YAAY4K,GAGzB,MAAO,CAAEpE,OAAQA,EAAOzkC,MAAOA,MAAO2T,EAAMvU,KAC/C,CACD,GAAAovC,CAAIxuC,EAAOsN,GACP,OAAOlG,KAAKsnC,SAAS,MAAO1uC,GAAO,EAAM4lC,GAAU16B,SAASoC,GAC/D,CACD,EAAAqhC,CAAG3uC,EAAOsN,GACN,OAAOlG,KAAKsnC,SAAS,MAAO1uC,GAAO,EAAO4lC,GAAU16B,SAASoC,GAChE,CACD,GAAAmhC,CAAIzuC,EAAOsN,GACP,OAAOlG,KAAKsnC,SAAS,MAAO1uC,GAAO,EAAM4lC,GAAU16B,SAASoC,GAC/D,CACD,EAAAshC,CAAG5uC,EAAOsN,GACN,OAAOlG,KAAKsnC,SAAS,MAAO1uC,GAAO,EAAO4lC,GAAU16B,SAASoC,GAChE,CACD,QAAAohC,CAASxqB,EAAMlkB,EAAO8iC,EAAWx1B,GAC7B,OAAO,IAAImiC,GAAU,IACdroC,KAAK+/B,KACR0E,OAAQ,IACDzkC,KAAK+/B,KAAK0E,OACb,CACI3nB,OACAlkB,QACA8iC,YACAx1B,QAASs4B,GAAU16B,SAASoC,MAI3C,CACD,SAAA8+B,CAAUvD,GACN,OAAO,IAAI4G,GAAU,IACdroC,KAAK+/B,KACR0E,OAAQ,IAAIzkC,KAAK+/B,KAAK0E,OAAQhD,IAErC,CACD,QAAAiG,CAASxhC,GACL,OAAOlG,KAAKglC,UAAU,CAClBloB,KAAM,MACNlkB,MAAO0vC,OAAO,GACd5M,WAAW,EACXx1B,QAASs4B,GAAU16B,SAASoC,IAEnC,CACD,QAAAyhC,CAASzhC,GACL,OAAOlG,KAAKglC,UAAU,CAClBloB,KAAM,MACNlkB,MAAO0vC,OAAO,GACd5M,WAAW,EACXx1B,QAASs4B,GAAU16B,SAASoC,IAEnC,CACD,WAAA0hC,CAAY1hC,GACR,OAAOlG,KAAKglC,UAAU,CAClBloB,KAAM,MACNlkB,MAAO0vC,OAAO,GACd5M,WAAW,EACXx1B,QAASs4B,GAAU16B,SAASoC,IAEnC,CACD,WAAA2hC,CAAY3hC,GACR,OAAOlG,KAAKglC,UAAU,CAClBloB,KAAM,MACNlkB,MAAO0vC,OAAO,GACd5M,WAAW,EACXx1B,QAASs4B,GAAU16B,SAASoC,IAEnC,CACD,UAAA+1B,CAAWrjC,EAAOsN,GACd,OAAOlG,KAAKglC,UAAU,CAClBloB,KAAM,aACNlkB,QACAsN,QAASs4B,GAAU16B,SAASoC,IAEnC,CACD,YAAIgiC,GACA,IAAIxC,EAAM,KACV,IAAK,MAAM5/B,KAAM9F,KAAK+/B,KAAK0E,OACP,QAAZ3+B,EAAGgX,OACS,OAAR4oB,GAAgB5/B,EAAGlN,MAAQ8sC,KAC3BA,EAAM5/B,EAAGlN,OAGrB,OAAO8sC,CACV,CACD,YAAIyC,GACA,IAAI7hC,EAAM,KACV,IAAK,MAAMR,KAAM9F,KAAK+/B,KAAK0E,OACP,QAAZ3+B,EAAGgX,OACS,OAARxW,GAAgBR,EAAGlN,MAAQ0N,KAC3BA,EAAMR,EAAGlN,OAGrB,OAAO0N,CACV,EAEL+hC,GAAUnyC,OAAU+K,IAChB,IAAIw+B,EACJ,OAAO,IAAI4I,GAAU,CACjB5D,OAAQ,GACRzC,SAAUC,GAAsBoG,UAChC7D,OAAiF,QAAxE/E,EAAKx+B,aAAuC,EAASA,EAAOujC,cAA2B,IAAP/E,GAAgBA,KACtGL,GAAoBn+B,IACzB,EAEN,MAAMsnC,WAAmB5I,GACrB,MAAA0B,CAAO90B,GACCvM,KAAK+/B,KAAKyE,SACVj4B,EAAMvU,KAAOwqB,QAAQjW,EAAMvU,OAG/B,GADmBgI,KAAKghC,SAASz0B,KACdyrB,GAAcI,QAAS,CACtC,MAAMj8B,EAAM6D,KAAKihC,gBAAgB10B,GAMjC,OALAswB,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6B,aACnBE,SAAU1C,GAAcI,QACxBqC,SAAUt+B,EAAI+kC,aAEX3D,EACV,CACD,OAAOS,GAAGzxB,EAAMvU,KACnB,EAELuwC,GAAWryC,OAAU+K,GACV,IAAIsnC,GAAW,CAClBvG,SAAUC,GAAsBsG,WAChC/D,QAASvjC,aAAuC,EAASA,EAAOujC,UAAW,KACxEpF,GAAoBn+B,KAG/B,MAAMunC,WAAgB7I,GAClB,MAAA0B,CAAO90B,GACCvM,KAAK+/B,KAAKyE,SACVj4B,EAAMvU,KAAO,IAAIygC,KAAKlsB,EAAMvU,OAGhC,GADmBgI,KAAKghC,SAASz0B,KACdyrB,GAAc5T,KAAM,CACnC,MAAMjoB,EAAM6D,KAAKihC,gBAAgB10B,GAMjC,OALAswB,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6B,aACnBE,SAAU1C,GAAc5T,KACxBqW,SAAUt+B,EAAI+kC,aAEX3D,EACV,CACD,GAAIrF,MAAM3rB,EAAMvU,KAAKywC,WAAY,CAK7B,OAHA5L,GADY78B,KAAKihC,gBAAgB10B,GACV,CACnBqtB,KAAMjB,GAAauC,eAEhBqC,EACV,CACD,MAAMF,EAAS,IAAIH,GACnB,IAAI/gC,EACJ,IAAK,MAAMslC,KAASzhC,KAAK+/B,KAAK0E,OACP,QAAfhD,EAAM3kB,KACFvQ,EAAMvU,KAAKywC,UAAYhH,EAAM7oC,QAC7BuD,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6C,UACnBt1B,QAASu7B,EAAMv7B,QACfw1B,WAAW,EACXD,OAAO,EACPE,QAAS8F,EAAM7oC,MACfe,KAAM,SAEV0jC,EAAOphC,SAGS,QAAfwlC,EAAM3kB,KACPvQ,EAAMvU,KAAKywC,UAAYhH,EAAM7oC,QAC7BuD,EAAM6D,KAAKihC,gBAAgB10B,EAAOpQ,GAClC0gC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAaiD,QACnB11B,QAASu7B,EAAMv7B,QACfw1B,WAAW,EACXD,OAAO,EACPI,QAAS4F,EAAM7oC,MACfe,KAAM,SAEV0jC,EAAOphC,SAIXo5B,GAAKwB,YAAY4K,GAGzB,MAAO,CACHpE,OAAQA,EAAOzkC,MACfA,MAAO,IAAI6/B,KAAKlsB,EAAMvU,KAAKywC,WAElC,CACD,SAAAzD,CAAUvD,GACN,OAAO,IAAI+G,GAAQ,IACZxoC,KAAK+/B,KACR0E,OAAQ,IAAIzkC,KAAK+/B,KAAK0E,OAAQhD,IAErC,CACD,GAAAiE,CAAIgD,EAASxiC,GACT,OAAOlG,KAAKglC,UAAU,CAClBloB,KAAM,MACNlkB,MAAO8vC,EAAQD,UACfviC,QAASs4B,GAAU16B,SAASoC,IAEnC,CACD,GAAAI,CAAIqiC,EAASziC,GACT,OAAOlG,KAAKglC,UAAU,CAClBloB,KAAM,MACNlkB,MAAO+vC,EAAQF,UACfviC,QAASs4B,GAAU16B,SAASoC,IAEnC,CACD,WAAIwiC,GACA,IAAIhD,EAAM,KACV,IAAK,MAAM5/B,KAAM9F,KAAK+/B,KAAK0E,OACP,QAAZ3+B,EAAGgX,OACS,OAAR4oB,GAAgB5/B,EAAGlN,MAAQ8sC,KAC3BA,EAAM5/B,EAAGlN,OAGrB,OAAc,MAAP8sC,EAAc,IAAIjN,KAAKiN,GAAO,IACxC,CACD,WAAIiD,GACA,IAAIriC,EAAM,KACV,IAAK,MAAMR,KAAM9F,KAAK+/B,KAAK0E,OACP,QAAZ3+B,EAAGgX,OACS,OAARxW,GAAgBR,EAAGlN,MAAQ0N,KAC3BA,EAAMR,EAAGlN,OAGrB,OAAc,MAAP0N,EAAc,IAAImyB,KAAKnyB,GAAO,IACxC,EAELkiC,GAAQtyC,OAAU+K,GACP,IAAIunC,GAAQ,CACf/D,OAAQ,GACRD,QAASvjC,aAAuC,EAASA,EAAOujC,UAAW,EAC3ExC,SAAUC,GAAsBuG,WAC7BpJ,GAAoBn+B,KAG/B,MAAM2nC,WAAkBjJ,GACpB,MAAA0B,CAAO90B,GAEH,GADmBvM,KAAKghC,SAASz0B,KACdyrB,GAAcv0B,OAAQ,CACrC,MAAMtH,EAAM6D,KAAKihC,gBAAgB10B,GAMjC,OALAswB,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6B,aACnBE,SAAU1C,GAAcv0B,OACxBg3B,SAAUt+B,EAAI+kC,aAEX3D,EACV,CACD,OAAOS,GAAGzxB,EAAMvU,KACnB,EAEL4wC,GAAU1yC,OAAU+K,GACT,IAAI2nC,GAAU,CACjB5G,SAAUC,GAAsB2G,aAC7BxJ,GAAoBn+B,KAG/B,MAAM4nC,WAAqBlJ,GACvB,MAAA0B,CAAO90B,GAEH,GADmBvM,KAAKghC,SAASz0B,KACdyrB,GAAcz6B,UAAW,CACxC,MAAMpB,EAAM6D,KAAKihC,gBAAgB10B,GAMjC,OALAswB,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6B,aACnBE,SAAU1C,GAAcz6B,UACxBk9B,SAAUt+B,EAAI+kC,aAEX3D,EACV,CACD,OAAOS,GAAGzxB,EAAMvU,KACnB,EAEL6wC,GAAa3yC,OAAU+K,GACZ,IAAI4nC,GAAa,CACpB7G,SAAUC,GAAsB4G,gBAC7BzJ,GAAoBn+B,KAG/B,MAAM6nC,WAAgBnJ,GAClB,MAAA0B,CAAO90B,GAEH,GADmBvM,KAAKghC,SAASz0B,KACdyrB,GAAcO,KAAM,CACnC,MAAMp8B,EAAM6D,KAAKihC,gBAAgB10B,GAMjC,OALAswB,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6B,aACnBE,SAAU1C,GAAcO,KACxBkC,SAAUt+B,EAAI+kC,aAEX3D,EACV,CACD,OAAOS,GAAGzxB,EAAMvU,KACnB,EAEL8wC,GAAQ5yC,OAAU+K,GACP,IAAI6nC,GAAQ,CACf9G,SAAUC,GAAsB6G,WAC7B1J,GAAoBn+B,KAG/B,MAAM8nC,WAAepJ,GACjB,WAAA3+B,GACI6V,SAASyX,WAETtuB,KAAKgpC,MAAO,CACf,CACD,MAAA3H,CAAO90B,GACH,OAAOyxB,GAAGzxB,EAAMvU,KACnB,EAEL+wC,GAAO7yC,OAAU+K,GACN,IAAI8nC,GAAO,CACd/G,SAAUC,GAAsB8G,UAC7B3J,GAAoBn+B,KAG/B,MAAMgoC,WAAmBtJ,GACrB,WAAA3+B,GACI6V,SAASyX,WAETtuB,KAAKkpC,UAAW,CACnB,CACD,MAAA7H,CAAO90B,GACH,OAAOyxB,GAAGzxB,EAAMvU,KACnB,EAELixC,GAAW/yC,OAAU+K,GACV,IAAIgoC,GAAW,CAClBjH,SAAUC,GAAsBgH,cAC7B7J,GAAoBn+B,KAG/B,MAAMkoC,WAAiBxJ,GACnB,MAAA0B,CAAO90B,GACH,MAAMpQ,EAAM6D,KAAKihC,gBAAgB10B,GAMjC,OALAswB,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6B,aACnBE,SAAU1C,GAAcoR,MACxB3O,SAAUt+B,EAAI+kC,aAEX3D,EACV,EAEL4L,GAASjzC,OAAU+K,GACR,IAAIkoC,GAAS,CAChBnH,SAAUC,GAAsBkH,YAC7B/J,GAAoBn+B,KAG/B,MAAMooC,WAAgB1J,GAClB,MAAA0B,CAAO90B,GAEH,GADmBvM,KAAKghC,SAASz0B,KACdyrB,GAAcz6B,UAAW,CACxC,MAAMpB,EAAM6D,KAAKihC,gBAAgB10B,GAMjC,OALAswB,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6B,aACnBE,SAAU1C,GAAcsR,KACxB7O,SAAUt+B,EAAI+kC,aAEX3D,EACV,CACD,OAAOS,GAAGzxB,EAAMvU,KACnB,EAELqxC,GAAQnzC,OAAU+K,GACP,IAAIooC,GAAQ,CACfrH,SAAUC,GAAsBoH,WAC7BjK,GAAoBn+B,KAG/B,MAAMohC,WAAiB1C,GACnB,MAAA0B,CAAO90B,GACH,MAAMpQ,IAAEA,EAAGkhC,OAAEA,GAAWr9B,KAAKmhC,oBAAoB50B,GAC3CqzB,EAAM5/B,KAAK+/B,KACjB,GAAI5jC,EAAI+kC,aAAelJ,GAAc/oB,MAMjC,OALA4tB,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6B,aACnBE,SAAU1C,GAAc/oB,MACxBwrB,SAAUt+B,EAAI+kC,aAEX3D,GAEX,GAAwB,OAApBqC,EAAI2J,YAAsB,CAC1B,MAAM7E,EAASvoC,EAAInE,KAAKP,OAASmoC,EAAI2J,YAAY3wC,MAC3C+rC,EAAWxoC,EAAInE,KAAKP,OAASmoC,EAAI2J,YAAY3wC,OAC/C8rC,GAAUC,KACV9H,GAAkB1gC,EAAK,CACnBy9B,KAAM8K,EAAS/L,GAAaiD,QAAUjD,GAAa6C,UACnDG,QAAUgJ,EAAW/E,EAAI2J,YAAY3wC,WAAQ2E,EAC7Cs+B,QAAU6I,EAAS9E,EAAI2J,YAAY3wC,WAAQ2E,EAC3C5D,KAAM,QACN+hC,WAAW,EACXD,OAAO,EACPv1B,QAAS05B,EAAI2J,YAAYrjC,UAE7Bm3B,EAAOphC,QAEd,CA2BD,GA1BsB,OAAlB2jC,EAAI+F,WACAxpC,EAAInE,KAAKP,OAASmoC,EAAI+F,UAAU/sC,QAChCikC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6C,UACnBG,QAASiE,EAAI+F,UAAU/sC,MACvBe,KAAM,QACN+hC,WAAW,EACXD,OAAO,EACPv1B,QAAS05B,EAAI+F,UAAUz/B,UAE3Bm3B,EAAOphC,SAGO,OAAlB2jC,EAAI9sB,WACA3W,EAAInE,KAAKP,OAASmoC,EAAI9sB,UAAUla,QAChCikC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAaiD,QACnBC,QAAS+D,EAAI9sB,UAAUla,MACvBe,KAAM,QACN+hC,WAAW,EACXD,OAAO,EACPv1B,QAAS05B,EAAI9sB,UAAU5M,UAE3Bm3B,EAAOphC,SAGXE,EAAI4gC,OAAOwE,MACX,OAAO3mC,QAAQgtB,IAAI,IAAIzrB,EAAInE,MAAM8F,KAAI,CAACgX,EAAMtd,IACjCooC,EAAIjmC,KAAK2nC,YAAY,IAAIzC,GAAmB1iC,EAAK2Y,EAAM3Y,EAAI69B,KAAMxiC,OACxEwD,MAAMoW,GACC8rB,GAAYE,WAAWC,EAAQjsB,KAG9C,MAAMA,EAAS,IAAIjV,EAAInE,MAAM8F,KAAI,CAACgX,EAAMtd,IAC7BooC,EAAIjmC,KAAKynC,WAAW,IAAIvC,GAAmB1iC,EAAK2Y,EAAM3Y,EAAI69B,KAAMxiC,MAE3E,OAAO0lC,GAAYE,WAAWC,EAAQjsB,EACzC,CACD,WAAIzZ,GACA,OAAOqI,KAAK+/B,KAAKpmC,IACpB,CACD,GAAA+rC,CAAIC,EAAWz/B,GACX,OAAO,IAAIm8B,GAAS,IACbriC,KAAK+/B,KACR4F,UAAW,CAAE/sC,MAAO+sC,EAAWz/B,QAASs4B,GAAU16B,SAASoC,KAElE,CACD,GAAAI,CAAIwM,EAAW5M,GACX,OAAO,IAAIm8B,GAAS,IACbriC,KAAK+/B,KACRjtB,UAAW,CAAEla,MAAOka,EAAW5M,QAASs4B,GAAU16B,SAASoC,KAElE,CACD,MAAAzO,CAAOu3B,EAAK9oB,GACR,OAAO,IAAIm8B,GAAS,IACbriC,KAAK+/B,KACRwJ,YAAa,CAAE3wC,MAAOo2B,EAAK9oB,QAASs4B,GAAU16B,SAASoC,KAE9D,CACD,QAAA0/B,CAAS1/B,GACL,OAAOlG,KAAK0lC,IAAI,EAAGx/B,EACtB,EAYL,SAASsjC,GAAezH,GACpB,GAAIA,aAAkB0H,GAAW,CAC7B,MAAMC,EAAW,CAAA,EACjB,IAAK,MAAMvsC,KAAO4kC,EAAO4H,MAAO,CAC5B,MAAMC,EAAc7H,EAAO4H,MAAMxsC,GACjCusC,EAASvsC,GAAOglC,GAAYjsC,OAAOszC,GAAeI,GACrD,CACD,OAAO,IAAIH,GAAU,IACd1H,EAAOhC,KACV4J,MAAO,IAAMD,GAEpB,CACI,OAAI3H,aAAkBM,GAChB,IAAIA,GAAS,IACbN,EAAOhC,KACVpmC,KAAM6vC,GAAezH,EAAOpqC,WAG3BoqC,aAAkBI,GAChBA,GAAYjsC,OAAOszC,GAAezH,EAAOp1B,WAE3Co1B,aAAkBK,GAChBA,GAAYlsC,OAAOszC,GAAezH,EAAOp1B,WAE3Co1B,aAAkB8H,GAChBA,GAAS3zC,OAAO6rC,EAAOntB,MAAM9W,KAAKgX,GAAS00B,GAAe10B,MAG1DitB,CAEf,CAxCAM,GAASnsC,OAAS,CAAC6rC,EAAQ9gC,IAChB,IAAIohC,GAAS,CAChB1oC,KAAMooC,EACN4D,UAAW,KACX7yB,UAAW,KACXy2B,YAAa,KACbvH,SAAUC,GAAsBI,YAC7BjD,GAAoBn+B,KAkC/B,MAAMwoC,WAAkB9J,GACpB,WAAA3+B,GACI6V,SAASyX,WACTtuB,KAAK8pC,QAAU,KAKf9pC,KAAK+pC,UAAY/pC,KAAKgqC,YAqCtBhqC,KAAKiqC,QAAUjqC,KAAKkqC,MACvB,CACD,UAAAC,GACI,GAAqB,OAAjBnqC,KAAK8pC,QACL,OAAO9pC,KAAK8pC,QAChB,MAAMH,EAAQ3pC,KAAK+/B,KAAK4J,QAClBppC,EAAO80B,GAAK6B,WAAWyS,GAC7B,OAAQ3pC,KAAK8pC,QAAU,CAAEH,QAAOppC,OACnC,CACD,MAAA8gC,CAAO90B,GAEH,GADmBvM,KAAKghC,SAASz0B,KACdyrB,GAAcroB,OAAQ,CACrC,MAAMxT,EAAM6D,KAAKihC,gBAAgB10B,GAMjC,OALAswB,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6B,aACnBE,SAAU1C,GAAcroB,OACxB8qB,SAAUt+B,EAAI+kC,aAEX3D,EACV,CACD,MAAMF,OAAEA,EAAMlhC,IAAEA,GAAQ6D,KAAKmhC,oBAAoB50B,IAC3Co9B,MAAEA,EAAOppC,KAAM6pC,GAAcpqC,KAAKmqC,aAClCE,EAAY,GAClB,KAAMrqC,KAAK+/B,KAAKuK,oBAAoBnB,IACN,UAA1BnpC,KAAK+/B,KAAKwK,aACV,IAAK,MAAMptC,KAAOhB,EAAInE,KACboyC,EAAU9wB,SAASnc,IACpBktC,EAAU5wC,KAAK0D,GAI3B,MAAMsgC,EAAQ,GACd,IAAK,MAAMtgC,KAAOitC,EAAW,CACzB,MAAMI,EAAeb,EAAMxsC,GACrBvE,EAAQuD,EAAInE,KAAKmF,GACvBsgC,EAAMhkC,KAAK,CACP0D,IAAK,CAAEkgC,OAAQ,QAASzkC,MAAOuE,GAC/BvE,MAAO4xC,EAAanJ,OAAO,IAAIxC,GAAmB1iC,EAAKvD,EAAOuD,EAAI69B,KAAM78B,IACxE0gC,UAAW1gC,KAAOhB,EAAInE,MAE7B,CACD,GAAIgI,KAAK+/B,KAAKuK,oBAAoBnB,GAAU,CACxC,MAAMoB,EAAcvqC,KAAK+/B,KAAKwK,YAC9B,GAAoB,gBAAhBA,EACA,IAAK,MAAMptC,KAAOktC,EACd5M,EAAMhkC,KAAK,CACP0D,IAAK,CAAEkgC,OAAQ,QAASzkC,MAAOuE,GAC/BvE,MAAO,CAAEykC,OAAQ,QAASzkC,MAAOuD,EAAInE,KAAKmF,WAIjD,GAAoB,WAAhBotC,EACDF,EAAU5yC,OAAS,IACnBolC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAaiC,kBACnBr6B,KAAM8pC,IAEVhN,EAAOphC,cAGV,GAAoB,UAAhBsuC,EAEL,MAAM,IAAIlxC,MAAM,uDAEvB,KACI,CAED,MAAMixC,EAAWtqC,KAAK+/B,KAAKuK,SAC3B,IAAK,MAAMntC,KAAOktC,EAAW,CACzB,MAAMzxC,EAAQuD,EAAInE,KAAKmF,GACvBsgC,EAAMhkC,KAAK,CACP0D,IAAK,CAAEkgC,OAAQ,QAASzkC,MAAOuE,GAC/BvE,MAAO0xC,EAASjJ,OAAO,IAAIxC,GAAmB1iC,EAAKvD,EAAOuD,EAAI69B,KAAM78B,IAEpE0gC,UAAW1gC,KAAOhB,EAAInE,MAE7B,CACJ,CACD,OAAImE,EAAI4gC,OAAOwE,MACJ3mC,QAAQC,UACVG,MAAKumC,UACN,MAAM7D,EAAY,GAClB,IAAK,MAAM1gB,KAAQygB,EAAO,CACtB,MAAMtgC,QAAY6f,EAAK7f,IACjBvE,QAAcokB,EAAKpkB,MACzB8kC,EAAUjkC,KAAK,CACX0D,MACAvE,QACAilC,UAAW7gB,EAAK6gB,WAEvB,CACD,OAAOH,CAAS,IAEf1iC,MAAM0iC,GACAR,GAAYS,gBAAgBN,EAAQK,KAIxCR,GAAYS,gBAAgBN,EAAQI,EAElD,CACD,SAAIkM,GACA,OAAO3pC,KAAK+/B,KAAK4J,OACpB,CACD,MAAAc,CAAOvkC,GAEH,OADAs4B,GAAUI,SACH,IAAI6K,GAAU,IACdzpC,KAAK+/B,KACRwK,YAAa,iBACGhtC,IAAZ2I,EACE,CACEo0B,SAAU,CAACd,EAAOr9B,KACd,IAAIsjC,EAAIC,EAAIgL,EAAI/W,EAChB,MAAMwI,EAAgI,QAAhHuO,EAA0C,QAApChL,GAAMD,EAAKz/B,KAAK+/B,MAAMzF,gBAA6B,IAAPoF,OAAgB,EAASA,EAAGrlC,KAAKolC,EAAIjG,EAAOr9B,GAAK+J,eAA4B,IAAPwkC,EAAgBA,EAAKvuC,EAAIggC,aACvK,MAAmB,sBAAf3C,EAAMI,KACC,CACH1zB,QAAwD,QAA9CytB,EAAK6K,GAAUI,SAAS14B,GAASA,eAA4B,IAAPytB,EAAgBA,EAAKwI,GAEtF,CACHj2B,QAASi2B,EACZ,GAGP,IAEb,CACD,KAAAwO,GACI,OAAO,IAAIlB,GAAU,IACdzpC,KAAK+/B,KACRwK,YAAa,SAEpB,CACD,WAAAP,GACI,OAAO,IAAIP,GAAU,IACdzpC,KAAK+/B,KACRwK,YAAa,eAEpB,CAkBD,MAAAL,CAAOU,GACH,OAAO,IAAInB,GAAU,IACdzpC,KAAK+/B,KACR4J,MAAO,KAAO,IACP3pC,KAAK+/B,KAAK4J,WACViB,KAGd,CAMD,KAAAtY,CAAMuY,GAUF,OATe,IAAIpB,GAAU,CACzBc,YAAaM,EAAQ9K,KAAKwK,YAC1BD,SAAUO,EAAQ9K,KAAKuK,SACvBX,MAAO,KAAO,IACP3pC,KAAK+/B,KAAK4J,WACVkB,EAAQ9K,KAAK4J,UAEpB3H,SAAUC,GAAsBwH,WAGvC,CAoCD,MAAAqB,CAAO3tC,EAAK4kC,GACR,OAAO/hC,KAAKiqC,QAAQ,CAAE9sC,CAACA,GAAM4kC,GAChC,CAsBD,QAAAuI,CAASjtC,GACL,OAAO,IAAIosC,GAAU,IACdzpC,KAAK+/B,KACRuK,SAAUjtC,GAEjB,CACD,IAAA0tC,CAAKC,GACD,MAAMrB,EAAQ,CAAA,EAMd,OALAtU,GAAK6B,WAAW8T,GAAM30C,SAAS8G,IACvB6tC,EAAK7tC,IAAQ6C,KAAK2pC,MAAMxsC,KACxBwsC,EAAMxsC,GAAO6C,KAAK2pC,MAAMxsC,GAC3B,IAEE,IAAIssC,GAAU,IACdzpC,KAAK+/B,KACR4J,MAAO,IAAMA,GAEpB,CACD,IAAAsB,CAAKD,GACD,MAAMrB,EAAQ,CAAA,EAMd,OALAtU,GAAK6B,WAAWl3B,KAAK2pC,OAAOtzC,SAAS8G,IAC5B6tC,EAAK7tC,KACNwsC,EAAMxsC,GAAO6C,KAAK2pC,MAAMxsC,GAC3B,IAEE,IAAIssC,GAAU,IACdzpC,KAAK+/B,KACR4J,MAAO,IAAMA,GAEpB,CAID,WAAAuB,GACI,OAAO1B,GAAexpC,KACzB,CACD,OAAAmrC,CAAQH,GACJ,MAAMtB,EAAW,CAAA,EAUjB,OATArU,GAAK6B,WAAWl3B,KAAK2pC,OAAOtzC,SAAS8G,IACjC,MAAMysC,EAAc5pC,KAAK2pC,MAAMxsC,GAC3B6tC,IAASA,EAAK7tC,GACdusC,EAASvsC,GAAOysC,EAGhBF,EAASvsC,GAAOysC,EAAY37B,UAC/B,IAEE,IAAIw7B,GAAU,IACdzpC,KAAK+/B,KACR4J,MAAO,IAAMD,GAEpB,CACD,QAAA0B,CAASJ,GACL,MAAMtB,EAAW,CAAA,EAcjB,OAbArU,GAAK6B,WAAWl3B,KAAK2pC,OAAOtzC,SAAS8G,IACjC,GAAI6tC,IAASA,EAAK7tC,GACdusC,EAASvsC,GAAO6C,KAAK2pC,MAAMxsC,OAE1B,CAED,IAAIkuC,EADgBrrC,KAAK2pC,MAAMxsC,GAE/B,KAAOkuC,aAAoBlJ,IACvBkJ,EAAWA,EAAStL,KAAK8C,UAE7B6G,EAASvsC,GAAOkuC,CACnB,KAEE,IAAI5B,GAAU,IACdzpC,KAAK+/B,KACR4J,MAAO,IAAMD,GAEpB,CACD,KAAA4B,GACI,OAAOC,GAAclW,GAAK6B,WAAWl3B,KAAK2pC,OAC7C,EAELF,GAAUvzC,OAAS,CAACyzC,EAAO1oC,IAChB,IAAIwoC,GAAU,CACjBE,MAAO,IAAMA,EACbY,YAAa,QACbD,SAAUnB,GAASjzC,SACnB8rC,SAAUC,GAAsBwH,aAC7BrK,GAAoBn+B,KAG/BwoC,GAAU+B,aAAe,CAAC7B,EAAO1oC,IACtB,IAAIwoC,GAAU,CACjBE,MAAO,IAAMA,EACbY,YAAa,SACbD,SAAUnB,GAASjzC,SACnB8rC,SAAUC,GAAsBwH,aAC7BrK,GAAoBn+B,KAG/BwoC,GAAUgC,WAAa,CAAC9B,EAAO1oC,IACpB,IAAIwoC,GAAU,CACjBE,QACAY,YAAa,QACbD,SAAUnB,GAASjzC,SACnB8rC,SAAUC,GAAsBwH,aAC7BrK,GAAoBn+B,KAG/B,MAAMuhC,WAAiB7C,GACnB,MAAA0B,CAAO90B,GACH,MAAMpQ,IAAEA,GAAQ6D,KAAKmhC,oBAAoB50B,GACnChU,EAAUyH,KAAK+/B,KAAKxnC,QAuB1B,GAAI4D,EAAI4gC,OAAOwE,MACX,OAAO3mC,QAAQgtB,IAAIrvB,EAAQuF,KAAIyjC,MAAOgB,IAClC,MAAMmJ,EAAW,IACVvvC,EACH4gC,OAAQ,IACD5gC,EAAI4gC,OACPlE,OAAQ,IAEZiG,OAAQ,MAEZ,MAAO,CACH1tB,aAAcmxB,EAAOjB,YAAY,CAC7BtpC,KAAMmE,EAAInE,KACVgiC,KAAM79B,EAAI69B,KACV8E,OAAQ4M,IAEZvvC,IAAKuvC,EACR,KACD1wC,MAxCR,SAAuBmM,GAEnB,IAAK,MAAMiK,KAAUjK,EACjB,GAA6B,UAAzBiK,EAAOA,OAAOisB,OACd,OAAOjsB,EAAOA,OAGtB,IAAK,MAAMA,KAAUjK,EACjB,GAA6B,UAAzBiK,EAAOA,OAAOisB,OAGd,OADAlhC,EAAI4gC,OAAOlE,OAAOp/B,QAAQ2X,EAAOjV,IAAI4gC,OAAOlE,QACrCznB,EAAOA,OAItB,MAAMyoB,EAAc1yB,EAAQrJ,KAAKsT,GAAW,IAAIwnB,GAASxnB,EAAOjV,IAAI4gC,OAAOlE,UAK3E,OAJAgE,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAakC,cACnBhB,gBAEG0D,EACV,IAqBI,CACD,IAAIthC,EACJ,MAAM48B,EAAS,GACf,IAAK,MAAM0J,KAAUhqC,EAAS,CAC1B,MAAMmzC,EAAW,IACVvvC,EACH4gC,OAAQ,IACD5gC,EAAI4gC,OACPlE,OAAQ,IAEZiG,OAAQ,MAEN1tB,EAASmxB,EAAOnB,WAAW,CAC7BppC,KAAMmE,EAAInE,KACVgiC,KAAM79B,EAAI69B,KACV8E,OAAQ4M,IAEZ,GAAsB,UAAlBt6B,EAAOisB,OACP,OAAOjsB,EAEgB,UAAlBA,EAAOisB,QAAuBphC,IACnCA,EAAQ,CAAEmV,SAAQjV,IAAKuvC,IAEvBA,EAAS3O,OAAOlE,OAAOphC,QACvBohC,EAAOp/B,KAAKiyC,EAAS3O,OAAOlE,OAEnC,CACD,GAAI58B,EAEA,OADAE,EAAI4gC,OAAOlE,OAAOp/B,QAAQwC,EAAME,IAAI4gC,OAAOlE,QACpC58B,EAAMmV,OAEjB,MAAMyoB,EAAchB,EAAO/6B,KAAK+6B,GAAW,IAAID,GAASC,KAKxD,OAJAgE,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAakC,cACnBhB,gBAEG0D,EACV,CACJ,CACD,WAAIhlC,GACA,OAAOyH,KAAK+/B,KAAKxnC,OACpB,EAELiqC,GAAStsC,OAAS,CAACw0B,EAAOzpB,IACf,IAAIuhC,GAAS,CAChBjqC,QAASmyB,EACTsX,SAAUC,GAAsBO,YAC7BpD,GAAoBn+B,KAU/B,MAAM0qC,GAAoBhyC,GAClBA,aAAgBiyC,GACTD,GAAiBhyC,EAAKooC,QAExBpoC,aAAgBmoC,GACd6J,GAAiBhyC,EAAKkpC,aAExBlpC,aAAgBkyC,GACd,CAAClyC,EAAKf,OAERe,aAAgBmyC,GACdnyC,EAAKpB,QAEPoB,aAAgBoyC,GAEd1W,GAAK+B,aAAaz9B,EAAKmvB,MAEzBnvB,aAAgBipC,GACd+I,GAAiBhyC,EAAKomC,KAAK8C,WAE7BlpC,aAAgBkvC,GACd,MAACtrC,GAEH5D,aAAgBmvC,GACd,CAAC,MAEHnvC,aAAgBwoC,GACd,MAAC5kC,KAAcouC,GAAiBhyC,EAAKgT,WAEvChT,aAAgByoC,GACd,CAAC,QAASuJ,GAAiBhyC,EAAKgT,WAElChT,aAAgBopC,IAGhBppC,aAAgB0pC,GAFdsI,GAAiBhyC,EAAKgT,UAKxBhT,aAAgBspC,GACd0I,GAAiBhyC,EAAKomC,KAAK8C,WAG3B,GAGf,MAAMmJ,WAA8BrM,GAChC,MAAA0B,CAAO90B,GACH,MAAMpQ,IAAEA,GAAQ6D,KAAKmhC,oBAAoB50B,GACzC,GAAIpQ,EAAI+kC,aAAelJ,GAAcroB,OAMjC,OALAktB,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6B,aACnBE,SAAU1C,GAAcroB,OACxB8qB,SAAUt+B,EAAI+kC,aAEX3D,GAEX,MAAM0O,EAAgBjsC,KAAKisC,cACrBC,EAAqB/vC,EAAInE,KAAKi0C,GAC9B1J,EAASviC,KAAKmsC,WAAWjrC,IAAIgrC,GACnC,OAAK3J,EAQDpmC,EAAI4gC,OAAOwE,MACJgB,EAAOjB,YAAY,CACtBtpC,KAAMmE,EAAInE,KACVgiC,KAAM79B,EAAI69B,KACV8E,OAAQ3iC,IAILomC,EAAOnB,WAAW,CACrBppC,KAAMmE,EAAInE,KACVgiC,KAAM79B,EAAI69B,KACV8E,OAAQ3iC,KAlBZ0gC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAamC,4BACnBviC,QAASiH,MAAMC,KAAKO,KAAKmsC,WAAW5rC,QACpCy5B,KAAM,CAACiS,KAEJ1O,GAgBd,CACD,iBAAI0O,GACA,OAAOjsC,KAAK+/B,KAAKkM,aACpB,CACD,WAAI1zC,GACA,OAAOyH,KAAK+/B,KAAKxnC,OACpB,CACD,cAAI4zC,GACA,OAAOnsC,KAAK+/B,KAAKoM,UACpB,CASD,aAAOj2C,CAAO+1C,EAAe1zC,EAAS0I,GAElC,MAAMkrC,EAAa,IAAIrtC,IAEvB,IAAK,MAAMnF,KAAQpB,EAAS,CACxB,MAAM6zC,EAAsBT,GAAiBhyC,EAAKgwC,MAAMsC,IACxD,IAAKG,EAAoB30C,OACrB,MAAM,IAAI4B,MAAM,mCAAmC4yC,sDAEvD,IAAK,MAAMrzC,KAASwzC,EAAqB,CACrC,GAAID,EAAWvwC,IAAIhD,GACf,MAAM,IAAIS,MAAM,0BAA0B2K,OAAOioC,0BAAsCjoC,OAAOpL,MAElGuzC,EAAW/iB,IAAIxwB,EAAOe,EACzB,CACJ,CACD,OAAO,IAAIqyC,GAAsB,CAC7BhK,SAAUC,GAAsB+J,sBAChCC,gBACA1zC,UACA4zC,gBACG/M,GAAoBn+B,IAE9B,EAEL,SAASorC,GAAY51C,EAAGC,GACpB,MAAM41C,EAAQrU,GAAcxhC,GACtB81C,EAAQtU,GAAcvhC,GAC5B,GAAID,IAAMC,EACN,MAAO,CAAE81C,OAAO,EAAMx0C,KAAMvB,GAE3B,GAAI61C,IAAUtU,GAAcroB,QAAU48B,IAAUvU,GAAcroB,OAAQ,CACvE,MAAM88B,EAAQpX,GAAK6B,WAAWxgC,GACxBg2C,EAAarX,GACd6B,WAAWzgC,GACXsH,QAAQZ,IAAgC,IAAxBsvC,EAAMruC,QAAQjB,KAC7BwvC,EAAS,IAAKl2C,KAAMC,GAC1B,IAAK,MAAMyG,KAAOuvC,EAAY,CAC1B,MAAME,EAAcP,GAAY51C,EAAE0G,GAAMzG,EAAEyG,IAC1C,IAAKyvC,EAAYJ,MACb,MAAO,CAAEA,OAAO,GAEpBG,EAAOxvC,GAAOyvC,EAAY50C,IAC7B,CACD,MAAO,CAAEw0C,OAAO,EAAMx0C,KAAM20C,EAC/B,CACI,GAAIL,IAAUtU,GAAc/oB,OAASs9B,IAAUvU,GAAc/oB,MAAO,CACrE,GAAIxY,EAAEgB,SAAWf,EAAEe,OACf,MAAO,CAAE+0C,OAAO,GAEpB,MAAMK,EAAW,GACjB,IAAK,IAAIxvC,EAAQ,EAAGA,EAAQ5G,EAAEgB,OAAQ4F,IAAS,CAC3C,MAEMuvC,EAAcP,GAFN51C,EAAE4G,GACF3G,EAAE2G,IAEhB,IAAKuvC,EAAYJ,MACb,MAAO,CAAEA,OAAO,GAEpBK,EAASpzC,KAAKmzC,EAAY50C,KAC7B,CACD,MAAO,CAAEw0C,OAAO,EAAMx0C,KAAM60C,EAC/B,CACI,OAAIP,IAAUtU,GAAc5T,MAC7BmoB,IAAUvU,GAAc5T,OACvB3tB,IAAOC,EACD,CAAE81C,OAAO,EAAMx0C,KAAMvB,GAGrB,CAAE+1C,OAAO,EAExB,CACA,MAAM9J,WAAwB/C,GAC1B,MAAA0B,CAAO90B,GACH,MAAM8wB,OAAEA,EAAMlhC,IAAEA,GAAQ6D,KAAKmhC,oBAAoB50B,GAC3CugC,EAAe,CAACC,EAAYC,KAC9B,GAAI/O,GAAU8O,IAAe9O,GAAU+O,GACnC,OAAOzP,GAEX,MAAM0P,EAASZ,GAAYU,EAAWn0C,MAAOo0C,EAAYp0C,OACzD,OAAKq0C,EAAOT,QAMRtO,GAAQ6O,IAAe7O,GAAQ8O,KAC/B3P,EAAOphC,QAEJ,CAAEohC,OAAQA,EAAOzkC,MAAOA,MAAOq0C,EAAOj1C,QARzC6kC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAaoD,6BAEhBwB,GAKwC,EAEvD,OAAIphC,EAAI4gC,OAAOwE,MACJ3mC,QAAQgtB,IAAI,CACf5nB,KAAK+/B,KAAKv7B,KAAK88B,YAAY,CACvBtpC,KAAMmE,EAAInE,KACVgiC,KAAM79B,EAAI69B,KACV8E,OAAQ3iC,IAEZ6D,KAAK+/B,KAAKt7B,MAAM68B,YAAY,CACxBtpC,KAAMmE,EAAInE,KACVgiC,KAAM79B,EAAI69B,KACV8E,OAAQ3iC,MAEbnB,MAAK,EAAEwJ,EAAMC,KAAWqoC,EAAatoC,EAAMC,KAGvCqoC,EAAa9sC,KAAK+/B,KAAKv7B,KAAK48B,WAAW,CAC1CppC,KAAMmE,EAAInE,KACVgiC,KAAM79B,EAAI69B,KACV8E,OAAQ3iC,IACR6D,KAAK+/B,KAAKt7B,MAAM28B,WAAW,CAC3BppC,KAAMmE,EAAInE,KACVgiC,KAAM79B,EAAI69B,KACV8E,OAAQ3iC,IAGnB,EAELumC,GAAgBxsC,OAAS,CAACsO,EAAMC,EAAOxD,IAC5B,IAAIyhC,GAAgB,CACvBl+B,KAAMA,EACNC,MAAOA,EACPu9B,SAAUC,GAAsBS,mBAC7BtD,GAAoBn+B,KAG/B,MAAM4oC,WAAiBlK,GACnB,MAAA0B,CAAO90B,GACH,MAAM8wB,OAAEA,EAAMlhC,IAAEA,GAAQ6D,KAAKmhC,oBAAoB50B,GACjD,GAAIpQ,EAAI+kC,aAAelJ,GAAc/oB,MAMjC,OALA4tB,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6B,aACnBE,SAAU1C,GAAc/oB,MACxBwrB,SAAUt+B,EAAI+kC,aAEX3D,GAEX,GAAIphC,EAAInE,KAAKP,OAASuI,KAAK+/B,KAAKnrB,MAAMnd,OAQlC,OAPAolC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6C,UACnBG,QAAS37B,KAAK+/B,KAAKnrB,MAAMnd,OACzBikC,WAAW,EACXD,OAAO,EACP9hC,KAAM,UAEH4jC,IAEEv9B,KAAK+/B,KAAK5gC,MACVhD,EAAInE,KAAKP,OAASuI,KAAK+/B,KAAKnrB,MAAMnd,SAC3ColC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAaiD,QACnBC,QAAS77B,KAAK+/B,KAAKnrB,MAAMnd,OACzBikC,WAAW,EACXD,OAAO,EACP9hC,KAAM,UAEV0jC,EAAOphC,SAEX,MAAM2Y,EAAQ,IAAIzY,EAAInE,MACjB8F,KAAI,CAACgX,EAAMo4B,KACZ,MAAMnL,EAAS/hC,KAAK+/B,KAAKnrB,MAAMs4B,IAAcltC,KAAK+/B,KAAK5gC,KACvD,OAAK4iC,EAEEA,EAAOV,OAAO,IAAIxC,GAAmB1iC,EAAK2Y,EAAM3Y,EAAI69B,KAAMkT,IADtD,IACiE,IAE3EnvC,QAAQ0zB,KAAQA,IACrB,OAAIt1B,EAAI4gC,OAAOwE,MACJ3mC,QAAQgtB,IAAIhT,GAAO5Z,MAAMmM,GACrB+1B,GAAYE,WAAWC,EAAQl2B,KAInC+1B,GAAYE,WAAWC,EAAQzoB,EAE7C,CACD,SAAIA,GACA,OAAO5U,KAAK+/B,KAAKnrB,KACpB,CACD,IAAAzV,CAAKA,GACD,OAAO,IAAI0qC,GAAS,IACb7pC,KAAK+/B,KACR5gC,QAEP,EAEL0qC,GAAS3zC,OAAS,CAACi3C,EAASlsC,KACxB,IAAKzB,MAAM6zB,QAAQ8Z,GACf,MAAM,IAAI9zC,MAAM,yDAEpB,OAAO,IAAIwwC,GAAS,CAChBj1B,MAAOu4B,EACPnL,SAAUC,GAAsB4H,SAChC1qC,KAAM,QACHigC,GAAoBn+B,IACzB,EAEN,MAAMmsC,WAAkBzN,GACpB,aAAI0N,GACA,OAAOrtC,KAAK+/B,KAAKuN,OACpB,CACD,eAAIC,GACA,OAAOvtC,KAAK+/B,KAAKyN,SACpB,CACD,MAAAnM,CAAO90B,GACH,MAAM8wB,OAAEA,EAAMlhC,IAAEA,GAAQ6D,KAAKmhC,oBAAoB50B,GACjD,GAAIpQ,EAAI+kC,aAAelJ,GAAcroB,OAMjC,OALAktB,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6B,aACnBE,SAAU1C,GAAcroB,OACxB8qB,SAAUt+B,EAAI+kC,aAEX3D,GAEX,MAAME,EAAQ,GACR6P,EAAUttC,KAAK+/B,KAAKuN,QACpBE,EAAYxtC,KAAK+/B,KAAKyN,UAC5B,IAAK,MAAMrwC,KAAOhB,EAAInE,KAClBylC,EAAMhkC,KAAK,CACP0D,IAAKmwC,EAAQjM,OAAO,IAAIxC,GAAmB1iC,EAAKgB,EAAKhB,EAAI69B,KAAM78B,IAC/DvE,MAAO40C,EAAUnM,OAAO,IAAIxC,GAAmB1iC,EAAKA,EAAInE,KAAKmF,GAAMhB,EAAI69B,KAAM78B,IAC7E0gC,UAAW1gC,KAAOhB,EAAInE,OAG9B,OAAImE,EAAI4gC,OAAOwE,MACJrE,GAAYM,iBAAiBH,EAAQI,GAGrCP,GAAYS,gBAAgBN,EAAQI,EAElD,CACD,WAAI9lC,GACA,OAAOqI,KAAK+/B,KAAKyN,SACpB,CACD,aAAOt3C,CAAOsoB,EAAOuZ,EAAQ0V,GACzB,OACW,IAAIL,GADXrV,aAAkB4H,GACG,CACjB2N,QAAS9uB,EACTgvB,UAAWzV,EACXiK,SAAUC,GAAsBmL,aAC7BhO,GAAoBqO,IAGV,CACjBH,QAAS/I,GAAUruC,SACnBs3C,UAAWhvB,EACXwjB,SAAUC,GAAsBmL,aAC7BhO,GAAoBrH,IAE9B,EAEL,MAAM2V,WAAe/N,GACjB,aAAI0N,GACA,OAAOrtC,KAAK+/B,KAAKuN,OACpB,CACD,eAAIC,GACA,OAAOvtC,KAAK+/B,KAAKyN,SACpB,CACD,MAAAnM,CAAO90B,GACH,MAAM8wB,OAAEA,EAAMlhC,IAAEA,GAAQ6D,KAAKmhC,oBAAoB50B,GACjD,GAAIpQ,EAAI+kC,aAAelJ,GAAcl6B,IAMjC,OALA++B,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6B,aACnBE,SAAU1C,GAAcl6B,IACxB28B,SAAUt+B,EAAI+kC,aAEX3D,GAEX,MAAM+P,EAAUttC,KAAK+/B,KAAKuN,QACpBE,EAAYxtC,KAAK+/B,KAAKyN,UACtB/P,EAAQ,IAAIthC,EAAInE,KAAK4lB,WAAW9f,KAAI,EAAEX,EAAKvE,GAAQyE,KAC9C,CACHF,IAAKmwC,EAAQjM,OAAO,IAAIxC,GAAmB1iC,EAAKgB,EAAKhB,EAAI69B,KAAM,CAAC38B,EAAO,SACvEzE,MAAO40C,EAAUnM,OAAO,IAAIxC,GAAmB1iC,EAAKvD,EAAOuD,EAAI69B,KAAM,CAAC38B,EAAO,eAGrF,GAAIlB,EAAI4gC,OAAOwE,MAAO,CAClB,MAAMoM,EAAW,IAAI7uC,IACrB,OAAOlE,QAAQC,UAAUG,MAAKumC,UAC1B,IAAK,MAAMvkB,KAAQygB,EAAO,CACtB,MAAMtgC,QAAY6f,EAAK7f,IACjBvE,QAAcokB,EAAKpkB,MACzB,GAAmB,YAAfuE,EAAIkgC,QAAyC,YAAjBzkC,EAAMykC,OAClC,OAAOE,GAEQ,UAAfpgC,EAAIkgC,QAAuC,UAAjBzkC,EAAMykC,QAChCA,EAAOphC,QAEX0xC,EAASvkB,IAAIjsB,EAAIvE,MAAOA,EAAMA,MACjC,CACD,MAAO,CAAEykC,OAAQA,EAAOzkC,MAAOA,MAAO+0C,EAAU,GAEvD,CACI,CACD,MAAMA,EAAW,IAAI7uC,IACrB,IAAK,MAAMke,KAAQygB,EAAO,CACtB,MAAMtgC,EAAM6f,EAAK7f,IACXvE,EAAQokB,EAAKpkB,MACnB,GAAmB,YAAfuE,EAAIkgC,QAAyC,YAAjBzkC,EAAMykC,OAClC,OAAOE,GAEQ,UAAfpgC,EAAIkgC,QAAuC,UAAjBzkC,EAAMykC,QAChCA,EAAOphC,QAEX0xC,EAASvkB,IAAIjsB,EAAIvE,MAAOA,EAAMA,MACjC,CACD,MAAO,CAAEykC,OAAQA,EAAOzkC,MAAOA,MAAO+0C,EACzC,CACJ,EAELD,GAAOx3C,OAAS,CAACo3C,EAASE,EAAWvsC,IAC1B,IAAIysC,GAAO,CACdF,YACAF,UACAtL,SAAUC,GAAsByL,UAC7BtO,GAAoBn+B,KAG/B,MAAM2sC,WAAejO,GACjB,MAAA0B,CAAO90B,GACH,MAAM8wB,OAAEA,EAAMlhC,IAAEA,GAAQ6D,KAAKmhC,oBAAoB50B,GACjD,GAAIpQ,EAAI+kC,aAAelJ,GAAc5O,IAMjC,OALAyT,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6B,aACnBE,SAAU1C,GAAc5O,IACxBqR,SAAUt+B,EAAI+kC,aAEX3D,GAEX,MAAMqC,EAAM5/B,KAAK+/B,KACG,OAAhBH,EAAIiO,SACA1xC,EAAInE,KAAK81C,KAAOlO,EAAIiO,QAAQj1C,QAC5BikC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6C,UACnBG,QAASiE,EAAIiO,QAAQj1C,MACrBe,KAAM,MACN+hC,WAAW,EACXD,OAAO,EACPv1B,QAAS05B,EAAIiO,QAAQ3nC,UAEzBm3B,EAAOphC,SAGK,OAAhB2jC,EAAImO,SACA5xC,EAAInE,KAAK81C,KAAOlO,EAAImO,QAAQn1C,QAC5BikC,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAaiD,QACnBC,QAAS+D,EAAImO,QAAQn1C,MACrBe,KAAM,MACN+hC,WAAW,EACXD,OAAO,EACPv1B,QAAS05B,EAAImO,QAAQ7nC,UAEzBm3B,EAAOphC,SAGf,MAAMuxC,EAAYxtC,KAAK+/B,KAAKyN,UAC5B,SAASQ,EAAYC,GACjB,MAAMC,EAAY,IAAI5yC,IACtB,IAAK,MAAM3D,KAAWs2C,EAAU,CAC5B,GAAuB,YAAnBt2C,EAAQ0lC,OACR,OAAOE,GACY,UAAnB5lC,EAAQ0lC,QACRA,EAAOphC,QACXiyC,EAAUryC,IAAIlE,EAAQiB,MACzB,CACD,MAAO,CAAEykC,OAAQA,EAAOzkC,MAAOA,MAAOs1C,EACzC,CACD,MAAMD,EAAW,IAAI9xC,EAAInE,KAAKqb,UAAUvV,KAAI,CAACgX,EAAMtd,IAAMg2C,EAAUnM,OAAO,IAAIxC,GAAmB1iC,EAAK2Y,EAAM3Y,EAAI69B,KAAMxiC,MACtH,OAAI2E,EAAI4gC,OAAOwE,MACJ3mC,QAAQgtB,IAAIqmB,GAAUjzC,MAAMizC,GAAaD,EAAYC,KAGrDD,EAAYC,EAE1B,CACD,GAAAvI,CAAImI,EAAS3nC,GACT,OAAO,IAAI0nC,GAAO,IACX5tC,KAAK+/B,KACR8N,QAAS,CAAEj1C,MAAOi1C,EAAS3nC,QAASs4B,GAAU16B,SAASoC,KAE9D,CACD,GAAAI,CAAIynC,EAAS7nC,GACT,OAAO,IAAI0nC,GAAO,IACX5tC,KAAK+/B,KACRgO,QAAS,CAAEn1C,MAAOm1C,EAAS7nC,QAASs4B,GAAU16B,SAASoC,KAE9D,CACD,IAAA4nC,CAAKA,EAAM5nC,GACP,OAAOlG,KAAK0lC,IAAIoI,EAAM5nC,GAASI,IAAIwnC,EAAM5nC,EAC5C,CACD,QAAA0/B,CAAS1/B,GACL,OAAOlG,KAAK0lC,IAAI,EAAGx/B,EACtB,EAEL0nC,GAAO13C,OAAS,CAACs3C,EAAWvsC,IACjB,IAAI2sC,GAAO,CACdJ,YACAK,QAAS,KACTE,QAAS,KACT/L,SAAUC,GAAsB2L,UAC7BxO,GAAoBn+B,KAG/B,MAAMktC,WAAoBxO,GACtB,WAAA3+B,GACI6V,SAASyX,WACTtuB,KAAKqxB,SAAWrxB,KAAKouC,SACxB,CACD,MAAA/M,CAAO90B,GACH,MAAMpQ,IAAEA,GAAQ6D,KAAKmhC,oBAAoB50B,GACzC,GAAIpQ,EAAI+kC,aAAelJ,GAAcK,SAMjC,OALAwE,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6B,aACnBE,SAAU1C,GAAcK,SACxBoC,SAAUt+B,EAAI+kC,aAEX3D,GAEX,SAAS8Q,EAAc/e,EAAM8F,GACzB,OAAOkH,GAAU,CACbtkC,KAAMs3B,EACN0K,KAAM79B,EAAI69B,KACVuC,UAAW,CACPpgC,EAAI4gC,OAAOC,mBACX7gC,EAAI8gC,eACJZ,KACA/B,IACFv8B,QAAQ0zB,KAAQA,IAClB+K,UAAW,CACP5C,KAAMjB,GAAaqC,kBACnBjB,eAAgB3E,IAG3B,CACD,SAASkZ,EAAiBC,EAASnZ,GAC/B,OAAOkH,GAAU,CACbtkC,KAAMu2C,EACNvU,KAAM79B,EAAI69B,KACVuC,UAAW,CACPpgC,EAAI4gC,OAAOC,mBACX7gC,EAAI8gC,eACJZ,KACA/B,IACFv8B,QAAQ0zB,KAAQA,IAClB+K,UAAW,CACP5C,KAAMjB,GAAasC,oBACnBnB,gBAAiB1E,IAG5B,CACD,MAAMn0B,EAAS,CAAEq5B,SAAUn+B,EAAI4gC,OAAOC,oBAChCjnC,EAAKoG,EAAInE,KACf,GAAIgI,KAAK+/B,KAAKwO,mBAAmBjM,GAAY,CAIzC,MAAMkM,EAAKxuC,KACX,OAAOg+B,IAAGuD,kBAAmBjS,GACzB,MAAM8F,EAAQ,IAAIwD,GAAS,IACrB6V,QAAmBD,EAAGzO,KAAKzQ,KAC5B2Q,WAAW3Q,EAAMruB,GACjBu3B,OAAOx+B,IAER,MADAo7B,EAAM0D,SAASuV,EAAc/e,EAAMt1B,IAC7Bo7B,CAAK,IAEThkB,QAAes9B,QAAQtgB,MAAMr4B,EAAIiK,KAAMyuC,GAO7C,aAN4BD,EAAGzO,KAAKwO,QAAQxO,KAAKpmC,KAC5CsmC,WAAW7uB,EAAQnQ,GACnBu3B,OAAOx+B,IAER,MADAo7B,EAAM0D,SAASwV,EAAiBl9B,EAAQpX,IAClCo7B,CAAK,GAG/B,GACS,CACI,CAID,MAAMoZ,EAAKxuC,KACX,OAAOg+B,IAAG,YAAa1O,GACnB,MAAMmf,EAAaD,EAAGzO,KAAKzQ,KAAK0Q,UAAU1Q,EAAMruB,GAChD,IAAKwtC,EAAWvP,QACZ,MAAM,IAAItG,GAAS,CAACyV,EAAc/e,EAAMmf,EAAWrZ,SAEvD,MAAMhkB,EAASs9B,QAAQtgB,MAAMr4B,EAAIiK,KAAMyuC,EAAWz2C,MAC5C22C,EAAgBH,EAAGzO,KAAKwO,QAAQvO,UAAU5uB,EAAQnQ,GACxD,IAAK0tC,EAAczP,QACf,MAAM,IAAItG,GAAS,CAAC0V,EAAiBl9B,EAAQu9B,EAAcvZ,SAE/D,OAAOuZ,EAAc32C,IACrC,GACS,CACJ,CACD,UAAA42C,GACI,OAAO5uC,KAAK+/B,KAAKzQ,IACpB,CACD,UAAAuf,GACI,OAAO7uC,KAAK+/B,KAAKwO,OACpB,CACD,IAAAjf,IAAQ1a,GACJ,OAAO,IAAIu5B,GAAY,IAChBnuC,KAAK+/B,KACRzQ,KAAMua,GAAS3zC,OAAO0e,GAAOzV,KAAK8pC,GAAW/yC,WAEpD,CACD,OAAAq4C,CAAQM,GACJ,OAAO,IAAIV,GAAY,IAChBnuC,KAAK+/B,KACRwO,QAASM,GAEhB,CACD,SAAAT,CAAUU,GAEN,OADsB9uC,KAAK6a,MAAMi0B,EAEpC,CACD,eAAAC,CAAgBD,GAEZ,OADsB9uC,KAAK6a,MAAMi0B,EAEpC,CACD,aAAO54C,CAAOo5B,EAAMif,EAASttC,GACzB,OAAO,IAAIktC,GAAY,CACnB7e,KAAOA,GAEDua,GAAS3zC,OAAO,IAAIiJ,KAAK8pC,GAAW/yC,UAC1Cq4C,QAASA,GAAWtF,GAAW/yC,SAC/B8rC,SAAUC,GAAsBkM,eAC7B/O,GAAoBn+B,IAE9B,EAEL,MAAM2qC,WAAgBjM,GAClB,UAAIoC,GACA,OAAO/hC,KAAK+/B,KAAKiP,QACpB,CACD,MAAA3N,CAAO90B,GACH,MAAMpQ,IAAEA,GAAQ6D,KAAKmhC,oBAAoB50B,GAEzC,OADmBvM,KAAK+/B,KAAKiP,SACX3N,OAAO,CAAErpC,KAAMmE,EAAInE,KAAMgiC,KAAM79B,EAAI69B,KAAM8E,OAAQ3iC,GACtE,EAELyvC,GAAQ11C,OAAS,CAAC84C,EAAQ/tC,IACf,IAAI2qC,GAAQ,CACfoD,OAAQA,EACRhN,SAAUC,GAAsB2J,WAC7BxM,GAAoBn+B,KAG/B,MAAM4qC,WAAmBlM,GACrB,MAAA0B,CAAO90B,GACH,GAAIA,EAAMvU,OAASgI,KAAK+/B,KAAKnnC,MAAO,CAChC,MAAMuD,EAAM6D,KAAKihC,gBAAgB10B,GAMjC,OALAswB,GAAkB1gC,EAAK,CACnBs+B,SAAUt+B,EAAInE,KACd4hC,KAAMjB,GAAagC,gBACnBD,SAAU16B,KAAK+/B,KAAKnnC,QAEjB2kC,EACV,CACD,MAAO,CAAEF,OAAQ,QAASzkC,MAAO2T,EAAMvU,KAC1C,CACD,SAAIY,GACA,OAAOoH,KAAK+/B,KAAKnnC,KACpB,EASL,SAAS2yC,GAAcl4B,EAAQpS,GAC3B,OAAO,IAAI6qC,GAAQ,CACfz4B,SACA2uB,SAAUC,GAAsB6J,WAC7B1M,GAAoBn+B,IAE/B,CAbA4qC,GAAW31C,OAAS,CAAC0C,EAAOqI,IACjB,IAAI4qC,GAAW,CAClBjzC,MAAOA,EACPopC,SAAUC,GAAsB4J,cAC7BzM,GAAoBn+B,KAU/B,MAAM6qC,WAAgBnM,GAClB,WAAA3+B,GACI6V,SAASyX,WACTmQ,GAAerV,IAAIppB,UAAM,EAC5B,CACD,MAAAqhC,CAAO90B,GACH,GAA0B,iBAAfA,EAAMvU,KAAmB,CAChC,MAAMmE,EAAM6D,KAAKihC,gBAAgB10B,GAC3B0iC,EAAiBjvC,KAAK+/B,KAAK1sB,OAMjC,OALAwpB,GAAkB1gC,EAAK,CACnBu+B,SAAUrF,GAAKsC,WAAWsX,GAC1BxU,SAAUt+B,EAAI+kC,WACdtH,KAAMjB,GAAa6B,eAEhB+C,EACV,CAID,GAHKc,GAAuBr+B,KAAMy+B,GAAgB,MAC9CF,GAAuBv+B,KAAMy+B,GAAgB,IAAInjC,IAAI0E,KAAK+/B,KAAK1sB,QAAS,MAEvEgrB,GAAuBr+B,KAAMy+B,GAAgB,KAAK7iC,IAAI2Q,EAAMvU,MAAO,CACpE,MAAMmE,EAAM6D,KAAKihC,gBAAgB10B,GAC3B0iC,EAAiBjvC,KAAK+/B,KAAK1sB,OAMjC,OALAwpB,GAAkB1gC,EAAK,CACnBs+B,SAAUt+B,EAAInE,KACd4hC,KAAMjB,GAAaoC,mBACnBxiC,QAAS02C,IAEN1R,EACV,CACD,OAAOS,GAAGzxB,EAAMvU,KACnB,CACD,WAAIO,GACA,OAAOyH,KAAK+/B,KAAK1sB,MACpB,CACD,QAAIyV,GACA,MAAMomB,EAAa,CAAA,EACnB,IAAK,MAAMnc,KAAO/yB,KAAK+/B,KAAK1sB,OACxB67B,EAAWnc,GAAOA,EAEtB,OAAOmc,CACV,CACD,UAAIC,GACA,MAAMD,EAAa,CAAA,EACnB,IAAK,MAAMnc,KAAO/yB,KAAK+/B,KAAK1sB,OACxB67B,EAAWnc,GAAOA,EAEtB,OAAOmc,CACV,CACD,QAAIE,GACA,MAAMF,EAAa,CAAA,EACnB,IAAK,MAAMnc,KAAO/yB,KAAK+/B,KAAK1sB,OACxB67B,EAAWnc,GAAOA,EAEtB,OAAOmc,CACV,CACD,OAAAG,CAAQh8B,EAAQi8B,EAAStvC,KAAK+/B,MAC1B,OAAO+L,GAAQ51C,OAAOmd,EAAQ,IACvBrT,KAAK+/B,QACLuP,GAEV,CACD,OAAAC,CAAQl8B,EAAQi8B,EAAStvC,KAAK+/B,MAC1B,OAAO+L,GAAQ51C,OAAO8J,KAAKzH,QAAQwF,QAAQyxC,IAASn8B,EAAOiG,SAASk2B,KAAO,IACpExvC,KAAK+/B,QACLuP,GAEV,EAEL7Q,GAAiB,IAAIgR,QACrB3D,GAAQ51C,OAASq1C,GACjB,MAAMQ,WAAsBpM,GACxB,WAAA3+B,GACI6V,SAASyX,WACToQ,GAAqBtV,IAAIppB,UAAM,EAClC,CACD,MAAAqhC,CAAO90B,GACH,MAAMmjC,EAAmBra,GAAK2B,mBAAmBh3B,KAAK+/B,KAAK1sB,QACrDlX,EAAM6D,KAAKihC,gBAAgB10B,GACjC,GAAIpQ,EAAI+kC,aAAelJ,GAAc1b,QACjCngB,EAAI+kC,aAAelJ,GAAcrZ,OAAQ,CACzC,MAAMswB,EAAiB5Z,GAAK+B,aAAasY,GAMzC,OALA7S,GAAkB1gC,EAAK,CACnBu+B,SAAUrF,GAAKsC,WAAWsX,GAC1BxU,SAAUt+B,EAAI+kC,WACdtH,KAAMjB,GAAa6B,eAEhB+C,EACV,CAID,GAHKc,GAAuBr+B,KAAM0+B,GAAsB,MACpDH,GAAuBv+B,KAAM0+B,GAAsB,IAAIpjC,IAAI+5B,GAAK2B,mBAAmBh3B,KAAK+/B,KAAK1sB,SAAU,MAEtGgrB,GAAuBr+B,KAAM0+B,GAAsB,KAAK9iC,IAAI2Q,EAAMvU,MAAO,CAC1E,MAAMi3C,EAAiB5Z,GAAK+B,aAAasY,GAMzC,OALA7S,GAAkB1gC,EAAK,CACnBs+B,SAAUt+B,EAAInE,KACd4hC,KAAMjB,GAAaoC,mBACnBxiC,QAAS02C,IAEN1R,EACV,CACD,OAAOS,GAAGzxB,EAAMvU,KACnB,CACD,QAAI8wB,GACA,OAAO9oB,KAAK+/B,KAAK1sB,MACpB,EAELqrB,GAAuB,IAAI+Q,QAC3B1D,GAAc71C,OAAS,CAACmd,EAAQpS,IACrB,IAAI8qC,GAAc,CACrB14B,OAAQA,EACR2uB,SAAUC,GAAsB8J,iBAC7B3M,GAAoBn+B,KAG/B,MAAMqhC,WAAmB3C,GACrB,MAAAhzB,GACI,OAAO3M,KAAK+/B,KAAKpmC,IACpB,CACD,MAAA0nC,CAAO90B,GACH,MAAMpQ,IAAEA,GAAQ6D,KAAKmhC,oBAAoB50B,GACzC,GAAIpQ,EAAI+kC,aAAelJ,GAAcrF,UACZ,IAArBx2B,EAAI4gC,OAAOwE,MAMX,OALA1E,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6B,aACnBE,SAAU1C,GAAcrF,QACxB8H,SAAUt+B,EAAI+kC,aAEX3D,GAEX,MAAMoS,EAAcxzC,EAAI+kC,aAAelJ,GAAcrF,QAC/Cx2B,EAAInE,KACJ4C,QAAQC,QAAQsB,EAAInE,MAC1B,OAAOgmC,GAAG2R,EAAY30C,MAAMhD,GACjBgI,KAAK+/B,KAAKpmC,KAAKsmC,WAAWjoC,EAAM,CACnCgiC,KAAM79B,EAAI69B,KACVM,SAAUn+B,EAAI4gC,OAAOC,uBAGhC,EAELsF,GAAWpsC,OAAS,CAAC6rC,EAAQ9gC,IAClB,IAAIqhC,GAAW,CAClB3oC,KAAMooC,EACNC,SAAUC,GAAsBK,cAC7BlD,GAAoBn+B,KAG/B,MAAM6gC,WAAmBnC,GACrB,SAAAkD,GACI,OAAO7iC,KAAK+/B,KAAKgC,MACpB,CACD,UAAA6N,GACI,OAAO5vC,KAAK+/B,KAAKgC,OAAOhC,KAAKiC,WAAaC,GAAsBH,WAC1D9hC,KAAK+/B,KAAKgC,OAAO6N,aACjB5vC,KAAK+/B,KAAKgC,MACnB,CACD,MAAAV,CAAO90B,GACH,MAAM8wB,OAAEA,EAAMlhC,IAAEA,GAAQ6D,KAAKmhC,oBAAoB50B,GAC3C21B,EAASliC,KAAK+/B,KAAKmC,QAAU,KAC7B2N,EAAW,CACb/W,SAAWgX,IACPjT,GAAkB1gC,EAAK2zC,GACnBA,EAAIC,MACJ1S,EAAOF,QAGPE,EAAOphC,OACV,EAEL,QAAI+9B,GACA,OAAO79B,EAAI69B,IACd,GAGL,GADA6V,EAAS/W,SAAW+W,EAAS/W,SAAS17B,KAAKyyC,GACvB,eAAhB3N,EAAOvoC,KAAuB,CAC9B,MAAM8sB,EAAYyb,EAAOzB,UAAUtkC,EAAInE,KAAM63C,GAC7C,GAAI1zC,EAAI4gC,OAAOwE,MACX,OAAO3mC,QAAQC,QAAQ4rB,GAAWzrB,MAAKumC,MAAO9a,IAC1C,GAAqB,YAAjB4W,EAAOzkC,MACP,OAAO2kC,GACX,MAAMnsB,QAAepR,KAAK+/B,KAAKgC,OAAOT,YAAY,CAC9CtpC,KAAMyuB,EACNuT,KAAM79B,EAAI69B,KACV8E,OAAQ3iC,IAEZ,MAAsB,YAAlBiV,EAAOisB,OACAE,GACW,UAAlBnsB,EAAOisB,QAEU,UAAjBA,EAAOzkC,MADAmlC,GAAM3sB,EAAOxY,OAGjBwY,CAAM,IAGhB,CACD,GAAqB,YAAjBisB,EAAOzkC,MACP,OAAO2kC,GACX,MAAMnsB,EAASpR,KAAK+/B,KAAKgC,OAAOX,WAAW,CACvCppC,KAAMyuB,EACNuT,KAAM79B,EAAI69B,KACV8E,OAAQ3iC,IAEZ,MAAsB,YAAlBiV,EAAOisB,OACAE,GACW,UAAlBnsB,EAAOisB,QAEU,UAAjBA,EAAOzkC,MADAmlC,GAAM3sB,EAAOxY,OAGjBwY,CACV,CACJ,CACD,GAAoB,eAAhB8wB,EAAOvoC,KAAuB,CAC9B,MAAMq2C,EAAqBC,IACvB,MAAM7+B,EAAS8wB,EAAO/B,WAAW8P,EAAKJ,GACtC,GAAI1zC,EAAI4gC,OAAOwE,MACX,OAAO3mC,QAAQC,QAAQuW,GAE3B,GAAIA,aAAkBxW,QAClB,MAAM,IAAIvB,MAAM,6FAEpB,OAAO42C,CAAG,EAEd,IAAyB,IAArB9zC,EAAI4gC,OAAOwE,MAAiB,CAC5B,MAAM2O,EAAQlwC,KAAK+/B,KAAKgC,OAAOX,WAAW,CACtCppC,KAAMmE,EAAInE,KACVgiC,KAAM79B,EAAI69B,KACV8E,OAAQ3iC,IAEZ,MAAqB,YAAjB+zC,EAAM7S,OACCE,IACU,UAAjB2S,EAAM7S,QACNA,EAAOphC,QAEX+zC,EAAkBE,EAAMt3C,OACjB,CAAEykC,OAAQA,EAAOzkC,MAAOA,MAAOs3C,EAAMt3C,OAC/C,CAEG,OAAOoH,KAAK+/B,KAAKgC,OACZT,YAAY,CAAEtpC,KAAMmE,EAAInE,KAAMgiC,KAAM79B,EAAI69B,KAAM8E,OAAQ3iC,IACtDnB,MAAMk1C,GACc,YAAjBA,EAAM7S,OACCE,IACU,UAAjB2S,EAAM7S,QACNA,EAAOphC,QACJ+zC,EAAkBE,EAAMt3C,OAAOoC,MAAK,KAChC,CAAEqiC,OAAQA,EAAOzkC,MAAOA,MAAOs3C,EAAMt3C,YAI3D,CACD,GAAoB,cAAhBspC,EAAOvoC,KAAsB,CAC7B,IAAyB,IAArBwC,EAAI4gC,OAAOwE,MAAiB,CAC5B,MAAM4O,EAAOnwC,KAAK+/B,KAAKgC,OAAOX,WAAW,CACrCppC,KAAMmE,EAAInE,KACVgiC,KAAM79B,EAAI69B,KACV8E,OAAQ3iC,IAEZ,IAAKgiC,GAAQgS,GACT,OAAOA,EACX,MAAM/+B,EAAS8wB,EAAOzB,UAAU0P,EAAKv3C,MAAOi3C,GAC5C,GAAIz+B,aAAkBxW,QAClB,MAAM,IAAIvB,MAAM,mGAEpB,MAAO,CAAEgkC,OAAQA,EAAOzkC,MAAOA,MAAOwY,EACzC,CAEG,OAAOpR,KAAK+/B,KAAKgC,OACZT,YAAY,CAAEtpC,KAAMmE,EAAInE,KAAMgiC,KAAM79B,EAAI69B,KAAM8E,OAAQ3iC,IACtDnB,MAAMm1C,GACFhS,GAAQgS,GAENv1C,QAAQC,QAAQqnC,EAAOzB,UAAU0P,EAAKv3C,MAAOi3C,IAAW70C,MAAMoW,IAAM,CAAQisB,OAAQA,EAAOzkC,MAAOA,MAAOwY,MADrG++B,GAItB,CACD9a,GAAKwB,YAAYqL,EACpB,EAELJ,GAAW5rC,OAAS,CAAC6rC,EAAQG,EAAQjhC,IAC1B,IAAI6gC,GAAW,CAClBC,SACAC,SAAUC,GAAsBH,WAChCI,YACG9C,GAAoBn+B,KAG/B6gC,GAAWsO,qBAAuB,CAACC,EAAYtO,EAAQ9gC,IAC5C,IAAI6gC,GAAW,CAClBC,SACAG,OAAQ,CAAEvoC,KAAM,aAAc8mC,UAAW4P,GACzCrO,SAAUC,GAAsBH,cAC7B1C,GAAoBn+B,KAG/B,MAAMkhC,WAAoBxC,GACtB,MAAA0B,CAAO90B,GAEH,OADmBvM,KAAKghC,SAASz0B,KACdyrB,GAAcz6B,UACtBygC,QAAGzgC,GAEPyC,KAAK+/B,KAAK8C,UAAUxB,OAAO90B,EACrC,CACD,MAAAI,GACI,OAAO3M,KAAK+/B,KAAK8C,SACpB,EAELV,GAAYjsC,OAAS,CAACyD,EAAMsH,IACjB,IAAIkhC,GAAY,CACnBU,UAAWlpC,EACXqoC,SAAUC,GAAsBE,eAC7B/C,GAAoBn+B,KAG/B,MAAMmhC,WAAoBzC,GACtB,MAAA0B,CAAO90B,GAEH,OADmBvM,KAAKghC,SAASz0B,KACdyrB,GAAcO,KACtByF,GAAG,MAEPh+B,KAAK+/B,KAAK8C,UAAUxB,OAAO90B,EACrC,CACD,MAAAI,GACI,OAAO3M,KAAK+/B,KAAK8C,SACpB,EAELT,GAAYlsC,OAAS,CAACyD,EAAMsH,IACjB,IAAImhC,GAAY,CACnBS,UAAWlpC,EACXqoC,SAAUC,GAAsBG,eAC7BhD,GAAoBn+B,KAG/B,MAAM2hC,WAAmBjD,GACrB,MAAA0B,CAAO90B,GACH,MAAMpQ,IAAEA,GAAQ6D,KAAKmhC,oBAAoB50B,GACzC,IAAIvU,EAAOmE,EAAInE,KAIf,OAHImE,EAAI+kC,aAAelJ,GAAcz6B,YACjCvF,EAAOgI,KAAK+/B,KAAK+C,gBAEd9iC,KAAK+/B,KAAK8C,UAAUxB,OAAO,CAC9BrpC,OACAgiC,KAAM79B,EAAI69B,KACV8E,OAAQ3iC,GAEf,CACD,aAAAm0C,GACI,OAAOtwC,KAAK+/B,KAAK8C,SACpB,EAELD,GAAW1sC,OAAS,CAACyD,EAAMsH,IAChB,IAAI2hC,GAAW,CAClBC,UAAWlpC,EACXqoC,SAAUC,GAAsBW,WAChCE,aAAwC,mBAAnB7hC,EAAOsvB,QACtBtvB,EAAOsvB,QACP,IAAMtvB,EAAOsvB,WAChB6O,GAAoBn+B,KAG/B,MAAMgiC,WAAiBtD,GACnB,MAAA0B,CAAO90B,GACH,MAAMpQ,IAAEA,GAAQ6D,KAAKmhC,oBAAoB50B,GAEnCgkC,EAAS,IACRp0C,EACH4gC,OAAQ,IACD5gC,EAAI4gC,OACPlE,OAAQ,KAGVznB,EAASpR,KAAK+/B,KAAK8C,UAAUxB,OAAO,CACtCrpC,KAAMu4C,EAAOv4C,KACbgiC,KAAMuW,EAAOvW,KACb8E,OAAQ,IACDyR,KAGX,OAAInS,GAAQhtB,GACDA,EAAOpW,MAAMoW,IACT,CACHisB,OAAQ,QACRzkC,MAAyB,UAAlBwY,EAAOisB,OACRjsB,EAAOxY,MACPoH,KAAK+/B,KAAKmD,WAAW,CACnB,SAAI9N,GACA,OAAO,IAAIwD,GAAS2X,EAAOxT,OAAOlE,OACrC,EACDtsB,MAAOgkC,EAAOv4C,WAMvB,CACHqlC,OAAQ,QACRzkC,MAAyB,UAAlBwY,EAAOisB,OACRjsB,EAAOxY,MACPoH,KAAK+/B,KAAKmD,WAAW,CACnB,SAAI9N,GACA,OAAO,IAAIwD,GAAS2X,EAAOxT,OAAOlE,OACrC,EACDtsB,MAAOgkC,EAAOv4C,OAIjC,CACD,WAAAw4C,GACI,OAAOxwC,KAAK+/B,KAAK8C,SACpB,EAELI,GAAS/sC,OAAS,CAACyD,EAAMsH,IACd,IAAIgiC,GAAS,CAChBJ,UAAWlpC,EACXqoC,SAAUC,GAAsBgB,SAChCC,WAAoC,mBAAjBjiC,EAAOu3B,MAAuBv3B,EAAOu3B,MAAQ,IAAMv3B,EAAOu3B,SAC1E4G,GAAoBn+B,KAG/B,MAAMwvC,WAAe9Q,GACjB,MAAA0B,CAAO90B,GAEH,GADmBvM,KAAKghC,SAASz0B,KACdyrB,GAAcG,IAAK,CAClC,MAAMh8B,EAAM6D,KAAKihC,gBAAgB10B,GAMjC,OALAswB,GAAkB1gC,EAAK,CACnBy9B,KAAMjB,GAAa6B,aACnBE,SAAU1C,GAAcG,IACxBsC,SAAUt+B,EAAI+kC,aAEX3D,EACV,CACD,MAAO,CAAEF,OAAQ,QAASzkC,MAAO2T,EAAMvU,KAC1C,EAELy4C,GAAOv6C,OAAU+K,GACN,IAAIwvC,GAAO,CACdzO,SAAUC,GAAsBwO,UAC7BrR,GAAoBn+B,KAG/B,MAAMyvC,GAAQnd,OAAO,aACrB,MAAMwP,WAAmBpD,GACrB,MAAA0B,CAAO90B,GACH,MAAMpQ,IAAEA,GAAQ6D,KAAKmhC,oBAAoB50B,GACnCvU,EAAOmE,EAAInE,KACjB,OAAOgI,KAAK+/B,KAAKpmC,KAAK0nC,OAAO,CACzBrpC,OACAgiC,KAAM79B,EAAI69B,KACV8E,OAAQ3iC,GAEf,CACD,MAAAwQ,GACI,OAAO3M,KAAK+/B,KAAKpmC,IACpB,EAEL,MAAMypC,WAAoBzD,GACtB,MAAA0B,CAAO90B,GACH,MAAM8wB,OAAEA,EAAMlhC,IAAEA,GAAQ6D,KAAKmhC,oBAAoB50B,GACjD,GAAIpQ,EAAI4gC,OAAOwE,MAAO,CAqBlB,MApBoBA,WAChB,MAAMoP,QAAiB3wC,KAAK+/B,KAAK6Q,GAAGtP,YAAY,CAC5CtpC,KAAMmE,EAAInE,KACVgiC,KAAM79B,EAAI69B,KACV8E,OAAQ3iC,IAEZ,MAAwB,YAApBw0C,EAAStT,OACFE,GACa,UAApBoT,EAAStT,QACTA,EAAOphC,QACA8hC,GAAM4S,EAAS/3C,QAGfoH,KAAK+/B,KAAK8Q,IAAIvP,YAAY,CAC7BtpC,KAAM24C,EAAS/3C,MACfohC,KAAM79B,EAAI69B,KACV8E,OAAQ3iC,GAEf,EAEE20C,EACV,CACI,CACD,MAAMH,EAAW3wC,KAAK+/B,KAAK6Q,GAAGxP,WAAW,CACrCppC,KAAMmE,EAAInE,KACVgiC,KAAM79B,EAAI69B,KACV8E,OAAQ3iC,IAEZ,MAAwB,YAApBw0C,EAAStT,OACFE,GACa,UAApBoT,EAAStT,QACTA,EAAOphC,QACA,CACHohC,OAAQ,QACRzkC,MAAO+3C,EAAS/3C,QAIboH,KAAK+/B,KAAK8Q,IAAIzP,WAAW,CAC5BppC,KAAM24C,EAAS/3C,MACfohC,KAAM79B,EAAI69B,KACV8E,OAAQ3iC,GAGnB,CACJ,CACD,aAAOjG,CAAOO,EAAGC,GACb,OAAO,IAAI0sC,GAAY,CACnBwN,GAAIn6C,EACJo6C,IAAKn6C,EACLsrC,SAAUC,GAAsBmB,aAEvC,EAEL,MAAMC,WAAoB1D,GACtB,MAAA0B,CAAO90B,GACH,MAAM6E,EAASpR,KAAK+/B,KAAK8C,UAAUxB,OAAO90B,GACpCuxB,EAAU9lC,IACRmmC,GAAQnmC,KACRA,EAAKY,MAAQ3C,OAAO6nC,OAAO9lC,EAAKY,QAE7BZ,GAEX,OAAOomC,GAAQhtB,GACTA,EAAOpW,MAAMhD,GAAS8lC,EAAO9lC,KAC7B8lC,EAAO1sB,EAChB,CACD,MAAAzE,GACI,OAAO3M,KAAK+/B,KAAK8C,SACpB,EASL,SAAS/G,GAAO2F,EAAOxgC,EAAS,CAAE,EAWlC8uC,GACI,OAAItO,EACOsH,GAAO7yC,SAASkqC,aAAY,CAACpoC,EAAMmE,KACtC,IAAIsjC,EAAIC,EACR,IAAK+B,EAAMzpC,GAAO,CACd,MAAMkE,EAAsB,mBAAX+E,EACXA,EAAOjJ,GACW,iBAAXiJ,EACH,CAAEiF,QAASjF,GACXA,EACJ8vC,EAA0E,QAAhErR,EAAwB,QAAlBD,EAAKvjC,EAAE6zC,aAA0B,IAAPtQ,EAAgBA,EAAKsQ,SAA0B,IAAPrQ,GAAgBA,EAClGsR,EAAkB,iBAAN90C,EAAiB,CAAEgK,QAAShK,GAAMA,EACpDC,EAAI28B,SAAS,CAAEc,KAAM,YAAaoX,EAAIjB,MAAOgB,GAChD,KAEFhI,GAAO7yC,QAClB,CAlCAmtC,GAAYntC,OAAS,CAACyD,EAAMsH,IACjB,IAAIoiC,GAAY,CACnBR,UAAWlpC,EACXqoC,SAAUC,GAAsBoB,eAC7BjE,GAAoBn+B,KA+B/B,MAAMgwC,GAAO,CACTthC,OAAQ85B,GAAUgC,YAEtB,IAAIxJ,IACJ,SAAWA,GACPA,EAAiC,UAAI,YACrCA,EAAiC,UAAI,YACrCA,EAA8B,OAAI,SAClCA,EAAiC,UAAI,YACrCA,EAAkC,WAAI,aACtCA,EAA+B,QAAI,UACnCA,EAAiC,UAAI,YACrCA,EAAoC,aAAI,eACxCA,EAA+B,QAAI,UACnCA,EAA8B,OAAI,SAClCA,EAAkC,WAAI,aACtCA,EAAgC,SAAI,WACpCA,EAA+B,QAAI,UACnCA,EAAgC,SAAI,WACpCA,EAAiC,UAAI,YACrCA,EAAgC,SAAI,WACpCA,EAA6C,sBAAI,wBACjDA,EAAuC,gBAAI,kBAC3CA,EAAgC,SAAI,WACpCA,EAAiC,UAAI,YACrCA,EAA8B,OAAI,SAClCA,EAA8B,OAAI,SAClCA,EAAmC,YAAI,cACvCA,EAA+B,QAAI,UACnCA,EAAkC,WAAI,aACtCA,EAA+B,QAAI,UACnCA,EAAkC,WAAI,aACtCA,EAAqC,cAAI,gBACzCA,EAAmC,YAAI,cACvCA,EAAmC,YAAI,cACvCA,EAAkC,WAAI,aACtCA,EAAgC,SAAI,WACpCA,EAAkC,WAAI,aACtCA,EAAkC,WAAI,aACtCA,EAAmC,YAAI,cACvCA,EAAmC,YAAI,aAC1C,CArCD,CAqCGA,KAA0BA,GAAwB,CAAE,IACvD,MAKMiP,GAAa3M,GAAUruC,OACvBi7C,GAAahK,GAAUjxC,OACvBk7C,GAAUX,GAAOv6C,OACjBm7C,GAAahJ,GAAUnyC,OACvBo7C,GAAc/I,GAAWryC,OACzBq7C,GAAW/I,GAAQtyC,OACnBs7C,GAAa5I,GAAU1yC,OACvBu7C,GAAgB5I,GAAa3yC,OAC7Bw7C,GAAW5I,GAAQ5yC,OACnBy7C,GAAU5I,GAAO7yC,OACjB07C,GAAc3I,GAAW/yC,OACzB27C,GAAY1I,GAASjzC,OACrB47C,GAAWzI,GAAQnzC,OACnB67C,GAAY1P,GAASnsC,OACrB87C,GAAavI,GAAUvzC,OACvB+7C,GAAmBxI,GAAU+B,aAC7B0G,GAAY1P,GAAStsC,OACrBi8C,GAAyBnG,GAAsB91C,OAC/Ck8C,GAAmB1P,GAAgBxsC,OACnCm8C,GAAYxI,GAAS3zC,OACrBo8C,GAAalF,GAAUl3C,OACvBq8C,GAAU7E,GAAOx3C,OACjBs8C,GAAU5E,GAAO13C,OACjBu8C,GAAetE,GAAYj4C,OAC3Bw8C,GAAW9G,GAAQ11C,OACnBy8C,GAAc9G,GAAW31C,OACzB08C,GAAW9G,GAAQ51C,OACnB28C,GAAiB9G,GAAc71C,OAC/B48C,GAAcxQ,GAAWpsC,OACzB68C,GAAcjR,GAAW5rC,OACzB88C,GAAe7Q,GAAYjsC,OAC3B+8C,GAAe7Q,GAAYlsC,OAC3Bg9C,GAAiBpR,GAAWsO,qBAC5B+C,GAAe/P,GAAYltC,OAI3BsuC,GAAS,CACXloB,OAAUwzB,GAAQvL,GAAUruC,OAAO,IAAK45C,EAAKtL,QAAQ,IACrD7lB,OAAUmxB,GAAQ3I,GAAUjxC,OAAO,IAAK45C,EAAKtL,QAAQ,IACrDpM,QAAW0X,GAAQvH,GAAWryC,OAAO,IAC9B45C,EACHtL,QAAQ,IAEZlM,OAAUwX,GAAQzH,GAAUnyC,OAAO,IAAK45C,EAAKtL,QAAQ,IACrDpgB,KAAQ0rB,GAAQtH,GAAQtyC,OAAO,IAAK45C,EAAKtL,QAAQ,KAE/C4O,GAAQ7V,GAEd,IAAI8V,GAAiBp9C,OAAO6nC,OAAO,CAC/B1E,UAAW,KACXka,gBAAiBhZ,GACjBiZ,YAlpHJ,SAAqBz1C,GACjBs+B,GAAmBt+B,CACvB,EAipHIu+B,YAAaA,GACbC,UAAWA,GACXkX,WAlnHe,GAmnHf3W,kBAAmBA,GACnBK,YAAaA,GACbK,QAASA,GACTQ,MAAOA,GACPC,GAAIA,GACJC,UAAWA,GACXC,QAASA,GACTC,QAASA,GACTC,QAASA,GACT,QAAI/I,GAAU,OAAOA,EAAO,EAC5B,cAAIC,GAAgB,OAAOA,EAAa,EACxC0C,cAAeA,GACfC,cAAeA,GACf0H,QAASA,GACT0E,cAAeA,GACfE,UAAWA,GACX4C,UAAWA,GACXkB,UAAWA,GACXE,WAAYA,GACZC,QAASA,GACTI,UAAWA,GACXC,aAAcA,GACdC,QAASA,GACTC,OAAQA,GACRE,WAAYA,GACZE,SAAUA,GACVE,QAASA,GACThH,SAAUA,GACVoH,UAAWA,GACXjH,SAAUA,GACVwJ,sBAAuBA,GACvBtJ,gBAAiBA,GACjBmH,SAAUA,GACVuD,UAAWA,GACXM,OAAQA,GACRE,OAAQA,GACRO,YAAaA,GACbvC,QAASA,GACTC,WAAYA,GACZC,QAASA,GACTC,cAAeA,GACfzJ,WAAYA,GACZR,WAAYA,GACZ2R,eAAgB3R,GAChBK,YAAaA,GACbC,YAAaA,GACbQ,WAAYA,GACZK,SAAUA,GACVwN,OAAQA,GACRC,MAAOA,GACP3N,WAAYA,GACZK,YAAaA,GACbC,YAAaA,GACbvH,OAAQA,GACR4X,OAAQ/T,GACRgU,UAAWhU,GACXsR,KAAMA,GACN,yBAAIhP,GAA2B,OAAOA,EAAwB,EAC9DuC,OAAQA,GACRoP,IAAKjC,GACL1iC,MAAO8iC,GACPzZ,OAAQ+Y,GACRjZ,QAASkZ,GACTltB,KAAMmtB,GACNsC,mBAAoB1B,GACpBjQ,OAAQ6Q,GACRjqB,KAAQ8pB,GACRva,SAAYoa,GACZqB,WAjImB,CAEvBp5B,EAAKzZ,EAAS,CACViF,QAAS,yBAAyBwU,EAAI9iB,UACpCkkC,IAAQ9jC,GAASA,aAAgB0iB,GAAKzZ,GA8HxC8yC,aAAc3B,GACd4B,KAAMtB,GACNhvC,QAASivC,GACT70C,IAAKy0C,GACLpa,IAAKiZ,GACL6C,WAAYpB,GACZzJ,MAAOyI,GACPtZ,KAAQmZ,GACRrR,SAAU4S,GACVt0B,OAAQwyB,GACRxhC,OAAQqiC,GACRkC,SApGa,IAAM5C,KAAcrjC,WAqGjCkmC,QAtGY,IAAMhD,KAAaljC,WAuG/BA,SAAU+kC,GACVoB,QAzGY,IAAMlD,KAAajjC,WA0G/BomC,SAAUlB,GACV9C,WAAY6C,GACZvgB,QAASmgB,GACTwB,OAAQhC,GACRlpB,IAAKopB,GACL+B,aAActC,GACd31B,OAAQ40B,GACRztC,OAAQ+tC,GACRgD,YAAazB,GACb0B,MAAOpC,GACP90C,UAAak0C,GACbiD,MAAOxC,GACPxZ,QAASkZ,GACTtI,KAAQwI,GACRsB,MAAOA,GACPza,aAAcA,GACdgc,cA1+HmBt0C,GACNsD,KAAKC,UAAUvD,EAAK,KAAM,GAC3B6S,QAAQ,cAAe,OAy+HnC0lB,SAAUA,iQGrkIWgc,EAAAh8C,MAAAi8C,EAAA14C,KAAIpE,wDAVrB+8C,EAQKl+C,EAAA22B,EAAAv2B,GAPDL,EAEQ42B,EAAAwnB,UAERp+C,EAEQ42B,EAAAynB,YAGZF,EAA8Cl+C,EAAAg+C,EAAA59C,6DAA7B,EAAAiF,GAAA44C,KAAAA,EAAA14C,KAAIpE,+FAdnBoE,EAAG,GAAC84C,OAAS,KAAO,KAAO94C,EAAG,GAAC+4C,MAGhCC,EAAAh5C,KAAI84C,QAAMG,GAAAj5C,6IATnB24C,EAsBKl+C,EAAA22B,EAAAv2B,GArBDL,EAMG42B,EAAArxB,kHADGC,EAAG,GAAC84C,OAAS,KAAO,KAAO94C,EAAG,GAAC+4C,QAAKl8C,EAAAq8C,EAAAC,GAGrCn5C,KAAI84C,+JAlDLM,OAFOC,GAAQp1C,EAIb,MAAAq1C,EAAW/7C,mBAMF0L,UACLswC,UAAUC,UAAUC,UAAUJ,EAAIz9C,MACxC89C,MAAM,oBAGD9+C,IACL0+C,EAAS,YAAaD,EAAIz9C,eAGduX,IACZimC,EAAUO,eACN,CAAAC,SAAU,eAGdP,EAAIP,QAAS,EAAIO,GACjBC,EAAS,iBAGGlmC,QACZimC,EAAIP,QAAS,EAAKO,GAClBC,EAAS,kBAGJO,IACDR,EAAIP,OACJ1lC,IAIJD,mEAQgB0mC,QAOmC5wC,QAIArO,4CAf/Bw+C,EAAS9e,8QCJtBt6B,EAAU,GAAgB,MAAA85C,EAAA95C,GAAAA,MAAIipB,0BAAnC3tB,OAAID,GAAA,EAAA,yLAAC2E,EAAU,SzFmqDzB,SAA2B+5C,EAAYj6C,EAAOg6C,EAASE,EAASh6C,EAAKi6C,EAAMl5C,EAAQrG,EAAMw/C,EAASC,EAAmBzwC,EAAM0wC,GACvH,IAAIv5C,EAAIk5C,EAAWz+C,OACfiP,EAAI0vC,EAAK3+C,OACTD,EAAIwF,EACR,MAAMw5C,EAAc,CAAA,EACpB,KAAOh/C,KACHg/C,EAAYN,EAAW1+C,GAAG2F,KAAO3F,EACrC,MAAMi/C,EAAa,GACbC,EAAa,IAAI53C,IACjB63C,EAAS,IAAI73C,IACb83C,EAAU,GAEhB,IADAp/C,EAAIkP,EACGlP,KAAK,CACR,MAAMq/C,EAAYN,EAAYp6C,EAAKi6C,EAAM5+C,GACnC2F,EAAM84C,EAAQY,GACpB,IAAIj6C,EAAQM,EAAOgE,IAAI/D,GAClBP,EAIIu5C,GAELS,EAAQn9C,MAAK,IAAMmD,EAAMV,EAAE26C,EAAW56C,MALtCW,EAAQ05C,EAAkBn5C,EAAK05C,GAC/Bj6C,EAAMH,KAMVi6C,EAAWttB,IAAIjsB,EAAKs5C,EAAWj/C,GAAKoF,GAChCO,KAAOq5C,GACPG,EAAOvtB,IAAIjsB,EAAKkJ,KAAKywC,IAAIt/C,EAAIg/C,EAAYr5C,IAChD,CACD,MAAM45C,EAAY,IAAIz7C,IAChB07C,EAAW,IAAI17C,IACrB,SAASvE,EAAO6F,GACZD,EAAcC,EAAO,GACrBA,EAAMgB,EAAE/G,EAAMgP,GACd3I,EAAOksB,IAAIxsB,EAAMO,IAAKP,GACtBiJ,EAAOjJ,EAAM4hB,MACb9X,GACH,CACD,KAAO1J,GAAK0J,GAAG,CACX,MAAMuwC,EAAYR,EAAW/vC,EAAI,GAC3BwwC,EAAYhB,EAAWl5C,EAAI,GAC3Bm6C,EAAUF,EAAU95C,IACpBi6C,EAAUF,EAAU/5C,IACtB85C,IAAcC,GAEdrxC,EAAOoxC,EAAUz4B,MACjBxhB,IACA0J,KAEMgwC,EAAW96C,IAAIw7C,IAKfl6C,EAAOtB,IAAIu7C,IAAYJ,EAAUn7C,IAAIu7C,GAC3CpgD,EAAOkgD,GAEFD,EAASp7C,IAAIw7C,GAClBp6C,IAEK25C,EAAOz1C,IAAIi2C,GAAWR,EAAOz1C,IAAIk2C,IACtCJ,EAASn7C,IAAIs7C,GACbpgD,EAAOkgD,KAGPF,EAAUl7C,IAAIu7C,GACdp6C,MAfAq5C,EAAQa,EAAWh6C,GACnBF,IAgBP,CACD,KAAOA,KAAK,CACR,MAAMk6C,EAAYhB,EAAWl5C,GACxB05C,EAAW96C,IAAIs7C,EAAU/5C,MAC1Bk5C,EAAQa,EAAWh6C,EAC1B,CACD,KAAOwJ,GACH3P,EAAO0/C,EAAW/vC,EAAI,IAE1B,OADAvQ,EAAQygD,GACDH,CACX,0EyFhvDUh/C,OAAID,GAAA,sgBALL2E,EAAW,GAAG,IAAM,MAIpBA,EAAW,IAAAi5C,GAAAj5C,iDAJY,gHAPhCpF,EAoBKH,EAAA22B,EAAAv2B,GAnBDL,EAQO42B,EAAA8pB,0HAFFl7C,EAAW,GAAG,IAAM,MAAGnD,EAAAq8C,EAAAC,GAIvBn5C,EAAW,+MArCV,MAAAs5C,EAAW/7C,QAIb49C,EAAU,GACVC,GAAuB,EAUlB,SAAAC,EAAUz/C,GACf09C,EAAS,YAAa19C,GAGjB,SAAA0/C,EAAkBC,WACdlgD,EAAI,EAAGA,EAAI8/C,EAAW7/C,OAAQD,IACnC6+B,EAAA,EAAAihB,EAAW9/C,GAAGy9C,OAASyC,GAAkBlgD,EAAC8/C,kBAdlC,SAAO9B,OACnB8B,EAAU,IAAOA,EAAY9B,oBAI7B8B,EAAU,KAmBO,IAAAjhB,EAAA,EAAAkhB,GAAeA,GAUTl6C,GAAAo6C,EAAkBp6C,GAClBrD,GAAMw9C,EAAUx9C,EAAEJ,oRC2KpCuC,EAAa,IAAG,IAAM,OAKjBA,EAAY,IAAAw7C,oDAIgC,IAALx7C,EAAK,aAALA,EAAK,oEAE7CA,EAAY,IAAAy7C,GAAAz7C,KA0BhBA,EAAW,GAAC1E,OAAS,GAACogD,GAAA17C,KAItBA,EAAO,GAAC1E,OAAS,GAACqgD,GAAA37C,sCAzCO,2LAIlBA,EAAa,IAAG,WAAa,qBAXzCpF,EASOH,EAAAygD,EAAArgD,mCAEPD,EA+BKH,EAAA22B,EAAAv2B,sMAnCAmF,EAAa,IAAG,IAAM,MAAGnD,EAAAq8C,EAAAC,GAKpBn5C,EAAY,8GAI2BA,EAAK,4BAE7CA,EAAY,oFAPTA,EAAa,IAAG,WAAa,8BAiCpCA,EAAW,GAAC1E,OAAS,oEAIrB0E,EAAO,GAAC1E,OAAS,0VApDjB0E,EAAa,GAAC1E,OAAS,GAACsgD,GAAA57C,oGAF7BpF,EAAqCH,EAAAsF,EAAAlF,yCAEhCmF,EAAa,GAAC1E,OAAS,qNAiBpBV,EAAmCH,EAAAsF,EAAAlF,sZAMnCD,EAqBKH,EAAA22B,EAAAv2B,GApBDL,EAGA42B,EAAAwnB,UAEAp+C,EAGA42B,EAAAynB,UAEAr+C,EAKQ42B,EAAAyqB,UAERrhD,EAEQ42B,EAAA0qB,0KAMc97C,EAAW,2DAAzCpF,EAA6CH,EAAAsF,EAAAlF,gCAAfmF,EAAW,yDAWpCA,EAAc,IAAG,IAAM,MAIvBA,EAAc,KAAA+7C,GAAA/7C,sCAJY,2GAP/BpF,EASOH,EAAAygD,EAAArgD,gJAFFmF,EAAc,IAAG,IAAM,MAAGnD,EAAAq8C,EAAAC,GAI1Bn5C,EAAc,iPACRA,EAAO,wBAAZ1E,OAAID,GAAA,wNAAC2E,EAAO,WAAZ1E,OAAID,GAAA,EAAA,mHAAJC,OAAID,EAAA2gD,EAAA1gD,OAAAD,GAAA,yCAAJC,OAAID,GAAA,uIAEO89C,EAAA,IAAAn5C,MAAQ,MAAMA,EAAM,IAACgxB,QAAQ11B,aAAuC,IAA1B0E,MAAOgxB,QAAQ11B,OAAe,GAAK,SAAS0E,EAAM,IAACkX,OAAO5b,aAAsC,IAAzB0E,EAAO,IAAAkX,OAAO5b,OAAe,GAAK,kGAD5JV,EAEGH,EAAAsF,EAAAlF,2CADMuM,GAAA,GAAAtH,EAAA,KAAAq5C,KAAAA,EAAA,IAAAn5C,MAAQ,MAAMA,EAAM,IAACgxB,QAAQ11B,aAAuC,IAA1B0E,MAAOgxB,QAAQ11B,OAAe,GAAK,SAAS0E,EAAM,IAACkX,OAAO5b,aAAsC,IAAzB0E,EAAO,IAAAkX,OAAO5b,OAAe,GAAK,QAAGuB,EAAAq8C,EAAAC,iMAlEzIn5C,EAAa,2DAA3CpF,EAA+CH,EAAAsF,EAAAlF,gCAAjBmF,EAAa,wFAJ9C,OAAM,MAANA,KAAU,mMADnBpF,EA2FKH,EAAA22B,EAAAv2B,oVA1RK,MAAAohD,GAAkB,6FAEpBC,EACAC,EACAC,EACAC,EAQAC,SAfOziB,GAAa51B,EAQpBsT,EAAK,6DACLvM,EAAO,GACPuxC,EAAwB,GACxBC,EAAsB,GACtBC,GAAwB,EACxBC,GAAyB,EACzBC,GAA0B,WA6DrBC,YAEDrlC,EAAQ0D,GAAO1D,EAAK,CAChB+Y,SAAU,SACV/Q,wBAAwB,EACxB7a,SAAU,EACV4a,oBAAqB,EACrBpB,YAAa,iBAEZ+a,GACC,MAAA8f,EAAQ,oBACd8D,EAAQ9D,EAAU,GAAAA,OAAW9f,KAGhB,MAAbqjB,GACAA,EAAUtiB,SAASziB,GAIlB,SAAAulC,EAAavlC,GACd,GAAS,MAATA,GAA0B,IAATA,SAIrB2iB,EAAA,EAAAsiB,EAAc,QACdxxC,EAAO,QAGHylB,QAAQ4oB,IAAI9hC,GACZslC,EAAO,UAAWtlC,EAAMwlC,UAAU,EAAG,MAAOxlC,GAC5C2iB,EAAA,EAAAlvB,EAAUqxC,EAAGp5B,KAAK1L,IAEdvM,EAAQ1P,OAAS,GACjB4+B,EAAA,GAAAyiB,GAAiB,SAEhB1jB,GACLxI,QAAQwI,MAAMA,GACdiB,EAAA,EAAAsiB,KAAiBvjB,KACX,MAAA8f,EAAQ,mCACd8D,EAAQ9D,EAAU,GAAAA,OAAW9f,SAI7B3C,EAAG,YAAetrB,EAAQ1P,iBACrBD,EAAI,EAAGA,EAAI2P,EAAQ1P,OAAQD,IAAC,OAC3B4Z,EAASjK,EAAQ3P,GACvBi7B,GAAe,QAAAj7B,EAAI,WAAW4Z,EAAO+b,QAAQ11B,iBACzC2Z,EAAOiC,OAAO5b,SAItBuhD,EAAQ,eAAgBr1C,KAAKC,UAAUuD,EAAS,KAAM,aAGjD6xC,EAAQ9D,EAAeziB,GACxB,GAAO,IAAPA,eAIEtN,GAAI,IAAOsT,MAAO0gB,qBACxBZ,EAAOa,OAAM,CACTh0B,UAAWqT,KAAK4gB,MAAQhzC,KAAKizC,SAC7BpE,MAAK,GAAK/vB,MAAS+vB,IACnBn9C,KAAM06B,EACNwiB,QAAQ,aAIPsE,IACLd,EAAUtiB,SAASiiB,GAAkB,MACrCW,IACAE,EAAab,IAEbE,EAAaxC,eACT,CAAAC,SAAU,oBAITyD,IACLjB,EAAOz8C,uBAGI29C,IACXR,EAAavlC,SACPxY,IACNo9C,EAAaxC,eACT,CAAAC,SAAU,WAIlBz8C,GAAOioC,UACHyX,EAAQ,0BAA2B,qCChLpCzX,eAAyBmY,EAAmBC,EAASC,GACxD,aAAa,IAAIh/C,SAAQ,CAACC,EAASi4B,KAC/B,IAAI+mB,EAAQ,EACZ,MAAMl1B,EAAWm1B,aAAY,KACzBD,IACID,GAAWC,EAAQF,GAAWC,IAC9B/+C,GAAQ,GACRk/C,cAAcp1B,IAEd+0B,MACA7+C,GAAQ,GACRk/C,cAAcp1B,GACjB,GAEFg1B,EAAQ,GAEnB,CDiK6BK,EAAgB,IAAa,MAAbxyB,OAAOgxB,IAAY,IAAK,KAClD,CACD,MAAAtD,EAAQ,8CACd7e,EAAA,EAAAqiB,KAAmBxD,mCACnB8D,EAAQ9D,EAAOwD,OAInBF,EAAKhxB,OAAOgxB,IACZQ,EAAQ,kBAAmB,yBACrB99C,2BA/JN+9C,EAAY,6LAcNgB,EAPO5G,GAAE1jC,OAAM,CACjBuqC,OAAQ7G,GAAE10B,SACVld,GAAI4xC,GAAE10B,SACNu2B,MAAO7B,GAAE/2B,SACTha,UAAW+wC,GAAEjb,YAGanpB,QAExBkrC,QAAiBC,MACnB,8CAEEC,QAAgBF,EAASpiD,OAE1B,IAAAoiD,EAASG,GAAE,OACNpF,EAAK,0CAA6CiF,EAAS9c,qBACjE2b,EAAQ9D,EAAU,GAAAA,OAAWmF,KAI3B,MAAAE,EAAW52C,KAAKkX,MAAMw/B,GACtBG,EAAcP,EAAiBja,UAAUua,GAE1C,IAAAC,EAAYtb,QAAO,CACd,MAAAub,EAAaD,EAAYplB,MAAMiE,OAAO,GAKtC6b,EAAK,yDACX8D,EAAQ9D,EAAU,GAAAA,OALHuF,EAAWzgB,KAAK51B,KAAK,SAASq2C,EAAWv0C,YACpDu0C,EAAW7gB,cAQb8gB,EAAQF,EAAYxiD,KACtB,IAAA0b,EAAQ,WAEHlc,EAAI,EAAGA,EAAIkjD,EAAMjjD,OAAQD,IAAC,OACzBmjD,EAAOD,EAAMljD,GACnBkc,GAAK,8FAESinC,EAAKl5C,OAAOk5C,EAAKT,YAAYS,EAAKzF,WACxCyF,EAAKr4C,UAAY,EAAI,oBAKjC22C,EAAavlC,GA0GPknC,SACAC,QAA2BpC,EAAUn6C,UACvCu8C,EAAmBpjD,OAAS,EAAC,CACvB,MAAAy9C,YAAkB2F,WACxBxkB,EAAA,EAAAsiB,KAAiBzD,8BACjB8D,EAAQ9D,EAAOyD,QACf/rB,QAAQ4oB,IAAI,WAAYN,GAI5B7e,EAAA,EAAAuiB,GAAe,GACfG,GAAY,+HAeGV,EAAW5hB,aAEL,IAAAJ,EAAA,GAAAwiB,GAAiBA,2CAWZJ,EAAShiB,0BAAc/iB,EAAK9a,cAMtB6gD,QAKAV,QAKAQ,QAK2BC,4CAexClB,EAAY7hB,aAEN,IAAAJ,EAAA,GAAAyiB,GAAkBA,2CAmBhCP,EAAM9hB,aACFz8B,IACXq+C,EAAYvC,eACR,CAAAC,SAAU,WAGd0C,EAAUtiB,SAASn8B,EAAEJ,QACrBm/C,GAAY,uFElSjB,MAAM+B,GAAQzH,GAAEvqB,KAAK,CAAC,QAAS,0CCa7B3sB,EAAM,GAAG,OAAS,uDAAQ,mFAFnCpF,EAIKH,EAAA22B,EAAAv2B,GAHDL,EAEQ42B,EAAAwtB,qEADH5+C,EAAM,GAAG,OAAS,UAAOnD,EAAAq8C,EAAAC,8DAXnBrf,MAAAA,EAAe6kB,GAAM1L,KAAK4L,MAAI56C,WAIhC66C,IACL5kB,EAAA,EAAAJ,EAAQilB,EAASJ,GAAM1L,KAAK+L,MAAQL,GAAM1L,KAAK4L,qFAHlD3kB,EAAA,EAAE6kB,EAASjlB,GAAS6kB,GAAM1L,KAAK4L,kBAQeC,2HCyDtBG,EAAAj/C,KAAUk/C,IAAG,GAKbC,EAAAn/C,KAAUo/C,MAAK,2BAPK,yCAG5B,2BAC8Bp/C,EAAQ,QACtC,2EAJgBA,EAAU,2BAGZzD,EAAA8iD,EAAA,QAAAC,EAAAt/C,KAAUu/C,gBADdv/C,EAAU,sCAGZA,EAAS,yEANtBpF,EASGH,EAAAsF,EAAAlF,UARSL,EAEPuF,EAAAy/C,GADIhlD,EAAsBglD,EAAAC,iBACzBjlD,EAEDuF,EAAA2/C,GADIllD,EAAuCklD,EAAAL,iBAE5C7kD,EAEAuF,EAAA4/C,GADKnlD,EAAwBmlD,EAAAC,kBALpB,EAAA9/C,GAAAm/C,KAAAA,EAAAj/C,KAAUk/C,IAAG,KAAAriD,EAAAgjD,EAAAZ,oBADLj/C,EAAU,cAGIA,EAAQ,IAAxB,EAAAF,GAAAw/C,KAAAA,EAAAt/C,KAAUu/C,sCADdv/C,EAAU,IAIZ,EAAAF,GAAAq/C,KAAAA,EAAAn/C,KAAUo/C,MAAK,KAAAviD,EAAAijD,EAAAX,mBADfn/C,EAAS,mMAXnBA,EAAY,MAId,IAAAg5C,EAAa,MAAbh5C,MAAiBi5C,GAAAj5C,kQATrBA,EAAY,yCAAzBpF,EAuBMH,EAAAslD,EAAAllD,GAtBFL,EAAoCulD,EAAAC,gDAMpCxlD,EAeKulD,EAAAE,GAdDzlD,EAaKylD,EAAAC,0HAhBMlgD,EAAY,cAID,MAAbA,sFATJA,EAAY,+KA1DR,IAAAsjC,EAAAC,EAAAgL,EAAA/W,EAYT,IAAA2oB,EAA8B,KAC9BrmB,EAAe6kB,GAAMhyB,KAAKkyB,YAwC9B1hD,GAAO,uBAjBG,MAAA4rC,EAAM,kBACNiV,QAAiBC,MAAMlV,GAExB,IAAAiV,EAASG,eACV1tB,QAAQ2vB,KAAI,oBAAqBrX,WAI/BqX,QAAwBpC,EAASv1B,OAE3B,MAAR23B,GACA3vB,QAAQwI,MAAM,sBAGlBiB,EAAA,EAAAimB,EAAYC,GAIZC,EAAa,qCAvChBnmB,EAAA,EAAEomB,EAAP,OAAepmB,EAAA,EAAfoJ,EAAkB6c,eAAAA,EAAWZ,IAAIxC,UAAU,EAAG,cAA9CzZ,EAAAA,EAAoD,oBAE/CpJ,EAAA,EAAEqmB,EAAU,qDAAjB,OAAiBrmB,EAAA,EAAjBqJ,EACQ4c,eAAAA,EAAWZ,eADnBhc,EAAAA,EAC0B,sBAGrBrJ,EAAA,EAAEsmB,EAAU,mDAAjB,OAAiBtmB,EAAA,EAAjBqU,EACQ4R,eAAAA,EAAWjB,eADnB3Q,EAAAA,EAC0B,uBAGrBrU,EAAA,EAAEumB,EAAS,sBAAhB,OAAgBvmB,EAAA,GAAhB1C,EAAyC2oB,eAAAA,EAAWf,iBAApD5nB,EAAAA,EAA6D,oBAEtD0C,EAAA,EAAAwmB,EAAe5mD,OAAO2nB,QAAO,CAC5B,mBAAoBqY,GAAS6kB,GAAM1L,KAAK4L,KAAO,UAAY,QAC3D8B,MAAO7mB,GAAS6kB,GAAM1L,KAAK4L,KAAO,QAAU,QAC5C,+BAAgCF,GAAM1L,KAAK4L,KAAO,OAAS,KAE1Dl9C,KAAG,EAAGX,EAAKvE,KAAK,KAAWuE,KAAOvE,MAClCwL,KAAK,8DChCF,kEAAQ,CAChBxN,OAAQiB,SAAS48B,KACjBn3B,MAAO,CAAE"}